(()=>{var Dt="standard",He="basic",ys="lambert",Fs="phong",Ms="matcap",_s="toon",qe="normal",Ve="bounds",Wt="model",ye="flat",Ce="quad",oe="smooth",ie="both",Mt="front",Fe="back",Kt="double",As=["nx","px","ny","py","nz","pz"],Vs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Cs=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],Is=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],ws=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var es=(S,t,s)=>Math.min(Math.max(S,t),s),st=class{static fromHex(t){let s=new st;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(es(t,0,1)*255),s=Math.round(es(s,0,1)*255),e=Math.round(es(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return st.fromHex(r)}clone(){let t=new st;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof st?st.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):st.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((a,o)=>a+o.r,0),e=this.g+t.reduce((a,o)=>a+o.g,0),r=this.b+t.reduce((a,o)=>a+o.b,0);return st.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var ne=class{constructor(t,s,e,r,a,o,n,i,l,c,h,f,m,u,g,p,M,y,v,F,d,V,w,x,A){switch(t=t||Dt,t){case Dt:case He:case ys:case Fs:case _s:case Ms:case qe:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||g&&g.cube||p&&p.cube||M&&M.cube)&&!(d===-1&&V===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(v&&F)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof a=="number"?a:0,this.transparent=!!o,this.refractionRatio=typeof n=="number"?n:.9,this.wireframe=!!i,this.side=l||Mt,[Mt,Fe,Kt].includes(this.side)||(this.side=Mt),this.setEmissive(c,h),this.fog=typeof f=="boolean"?f:!0,this.map=m,this.normalMap=u,this.roughnessMap=g,this.metalnessMap=p,this.emissiveMap=M,this.matcap=y,this.reflectionMap=v,this.refractionMap=F,this.mapTransform={uscale:d||-1,vscale:V||-1,uoffset:w||0,voffset:x||0,rotation:A||0},this.aoActive=!1,this._colors=[]}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:st.fromHex(t),intensity:s}}get emissive(){return this._emissive}get colors(){return this._colors}get colorCount(){return this._colors.length}get colorUsageCount(){return this._colors.reduce((t,s)=>t+s.count,0)}};function Ie(S,t,s,e){let r=s*S;for(let a=0;a<s;){let o=r&7,n=r>>3,i=s-a,l=8-o,c=i<l?i:l,h=~(255<<c),f=t&h;t>>=c;let m=~(h<<o);e[n]=e[n]&m|f<<o,r+=c,a+=c}}var ss=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return Ie(t,s,1,this.view)}clear(){this.view.fill(0)}},rs=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return Ie(t,s,2,this.view)}clear(){this.view.fill(0)}},as=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return Ie(t,s,4,this.view)}clear(){this.view.fill(0)}},os=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return Ie(t,s,8,this.view)}clear(){this.view.fill(0)}},is=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,a=0;for(let o=0;o<e;){let n=r&7,i=r>>3,l=e-o,c=8-n,h=l<c?l:c,f=s[i],m=~(255<<h);a|=(f>>n&m)<<o,r+=h,o+=h}return a>>>0}set(t,s){Ie(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},at=class{static create(t,s,e,r=null){let a=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new ss(a);case 2:return new rs(a);case 4:return new as(a);case 8:return new os(a);default:return new is(a)}}};var Qt=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var le=class{constructor(t,s,e,r,a,o,n){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=a,this.size=o,this.detail=n}};var j=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\s+(?:none|-x|x|\+x|-y|y|\+y|-z|z|\+z|\s))+\s*$/.test(t))throw new Error(`SyntaxError: Planar expression '${t}' is only allowed to be 'none' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var ce=class{constructor(t,s,e,r,a){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=j.parse(""),this._clamp=j.parse(""),this._skip=j.parse(""),this._ao=void 0,this.lights=!0,this._side=a,this._colors=[],this.bounds=new Qt}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t??1,0),s=s??1,e=e??1,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=j.parse(t)}get flatten(){return j.toString(this._flatten)}set clamp(t){this._clamp=j.parse(t)}get clamp(){return j.toString(this._clamp)}set skip(t){this._skip=j.parse(t)}get skip(){return j.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=j.parse(t)}get aoSides(){return j.toString(this._aoSides)}addColorHEX(t){return this.addColor(st.fromHex(t))}addColorRGB(t,s,e){return this.addColor(st.fromRgb(t,s,e))}addColor(t){if(!(t instanceof st))throw new Error("addColor requires a Color object, e.g. material.addColor(Color.fromHex('#FFFFFF'))");return t._setMaterial(this),this._colors.push(t),this._baseMaterial._colors.push(t),t}};var he=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,a,o,n,i,l,c,h,f,m,u,g,p,M,y,v,F,d,V,w,x,A,z,C,_){f=f||Mt,[Mt,Fe,Kt].includes(f)||(f=Mt);let T=f===Kt?Kt:Mt,X=new ne(t,e,r,n,i,l,c,h,T,m,u,g,p,M,y,v,F,d,V,w,x,A,z,C,_),O=X.baseId,B=this.baseMaterials.find(N=>N.baseId===O);B?X=B:this.baseMaterials.push(X);let Y=new ce(X,s,a,o,f);return this.materials.push(Y),Y}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}findColorByExId(t){let s=null;return this.forEach(function(e){s||(s=e.colors.find(r=>r.exId===t))},this),s}getMaterialListIndex(t){return this.materials.indexOf(t)}};var bt=new Map,Zt=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r={materials:[],groups:[],indices:Array(e*6),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3),normals:new Float32Array(e*4*3),colors:new Float32Array(e*4*3),uvs:new Float32Array(e*4*2),data:null};return t.materials.baseMaterials.forEach(function(a){a.index=r.materials.length,r.materials.push(Zt._generateMaterial(a,t))},this),bt.clear(),Zt._generateAll(t,r,s),r}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===Kt?Kt:Mt};return t.type!==qe&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e){let r=t.materials.materials,{faceMaterials:a,faceCulled:o}=e;t.materials.baseMaterials.forEach(function(n){let i=s.indicesIndex;for(let c=0,h=t.faceCount;c<h;c++)r[a[c]]._baseMaterial===n&&o.get(c)===0&&Zt._generateFace(t,e,c,s);let l=s.indicesIndex;s.groups.push({start:i,count:l-i,materialIndex:n.index})},this),s.indices.length=s.indicesIndex,s.positions=new Float32Array(s.positions,0,s.indicesIndex*3),s.normals=new Float32Array(s.normals,0,s.indicesIndex*3),s.colors=new Float32Array(s.colors,0,s.indicesIndex*3),s.uvs=new Float32Array(s.uvs,0,s.indicesIndex*2)}static _generateFace(t,s,e,r){let{faceVertIndices:a,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,vertX:l,vertY:c,vertZ:h,faceVertColorR:f,faceVertColorG:m,faceVertColorB:u,faceVertUs:g,faceVertVs:p,faceMaterials:M,faceSmooth:y}=s,F=t.materials.materials[M[e]],d=a[e*4],V=a[e*4+1],w=a[e*4+2],x=a[e*4+3],A=l[d],z=c[d],C=h[d],_=l[V],T=c[V],X=h[V],O=l[w],B=c[w],Y=h[w],N=l[x],k=c[x],$=h[x],P=o[e*4],U=n[e*4],E=i[e*4],H=o[e*4+1],b=n[e*4+1],q=i[e*4+1],I=o[e*4+2],R=n[e*4+2],K=i[e*4+2],G=o[e*4+3],J=n[e*4+3],tt=i[e*4+3],Z=f[e*4],ot=m[e*4],it=u[e*4],gt=f[e*4+1],mt=m[e*4+1],et=u[e*4+1],xt=f[e*4+2],pt=m[e*4+2],zt=u[e*4+2],vt=f[e*4+3],Nt=m[e*4+3],Ot=u[e*4+3],jt=g[e*4],Pt=p[e*4],se=g[e*4+1],re=p[e*4+1],Lt=g[e*4+2],$t=p[e*4+2],ae=g[e*4+3],Bt=p[e*4+3];if(F.side===Fe){let L,Q,W;L=A,Q=z,W=C,A=O,z=B,C=Y,O=L,B=Q,Y=W,L=P,Q=U,W=E,P=I,U=R,E=K,I=L,R=Q,K=W,L=Z,Q=ot,W=it,Z=xt,ot=pt,it=zt,xt=L,pt=Q,zt=W,L=jt,Q=Pt,jt=Lt,Pt=$t,Lt=L,$t=Q}let Rt=y.get(e)===1;if(!(F.lighting===oe||F.lighting===ie&&Rt)){let L=I+H+P,Q=R+b+U,W=K+q+E,rt=P+G+I,ut=U+J+R,qt=E+tt+K,Ae=Math.sqrt(L*L+Q*Q+W*W),Gt=Math.sqrt(rt*rt+ut*ut+qt*qt),Jt=1/Ae,ke=1/Gt;if(L*=Jt,Q*=Jt,W*=Jt,rt*=ke,ut*=ke,qt*=ke,F.lighting===Ce){let Pe=Math.sqrt(L*L+Q*Q+W*W)+Math.sqrt(rt*rt+ut*ut+qt*qt),ge=1/Pe;L=rt=(L+rt)*ge,Q=ut=(Q+ut)*ge,W=qt=(W+qt)*ge}P=L,U=Q,E=W,H=L,b=Q,q=W,I=L,R=Q,K=W,G=rt,J=ut,tt=qt}let yt=r.indices,nt=r.positions,lt=r.normals,ct=r.colors,Ft=r.uvs,kt=A*3+z*61673+C*87119+P*2766691+U*73091+E*5040949+Z*8636137+ot*2360719+it*4739729+jt*719959+Pt*172741,Ut=_*3+T*61673+X*87119+H*2766691+b*73091+q*5040949+gt*8636137+mt*2360719+et*4739729+se*719959+re*172741,Ht=O*3+B*61673+Y*87119+I*2766691+R*73091+K*5040949+xt*8636137+pt*2360719+zt*4739729+Lt*719959+$t*172741,_t=N*3+k*61673+$*87119+G*2766691+J*73091+tt*5040949+vt*8636137+Nt*2360719+Ot*4739729+ae*719959+Bt*172741,Et=bt.has(kt),St=bt.has(Ut),de=bt.has(Ht),xe=bt.has(_t),Ct,Tt,It,Xt;if(Et)Ct=bt.get(kt);else{Ct=r.maxIndex+1;let L=Ct*3,Q=L+1,W=L+2,rt=Ct*2,ut=rt+1;r.maxIndex=Ct,nt[L]=A,nt[Q]=z,nt[W]=C,lt[L]=P,lt[Q]=U,lt[W]=E,ct[L]=Z,ct[Q]=ot,ct[W]=it,Ft[rt]=jt,Ft[ut]=Pt,bt.set(kt,Ct)}if(St)Tt=bt.get(Ut);else{Tt=r.maxIndex+1;let L=Tt*3,Q=L+1,W=L+2,rt=Tt*2,ut=rt+1;r.maxIndex=Tt,nt[L]=_,nt[Q]=T,nt[W]=X,lt[L]=H,lt[Q]=b,lt[W]=q,ct[L]=gt,ct[Q]=mt,ct[W]=et,Ft[rt]=se,Ft[ut]=re,bt.set(Ut,Tt)}if(de)It=bt.get(Ht);else{It=r.maxIndex+1;let L=It*3,Q=L+1,W=L+2,rt=It*2,ut=rt+1;r.maxIndex=It,nt[L]=O,nt[Q]=B,nt[W]=Y,lt[L]=I,lt[Q]=R,lt[W]=K,ct[L]=xt,ct[Q]=pt,ct[W]=zt,Ft[rt]=Lt,Ft[ut]=$t,bt.set(Ht,It)}if(xe)Xt=bt.get(_t);else{Xt=r.maxIndex+1;let L=Xt*3,Q=L+1,W=L+2,rt=Xt*2,ut=rt+1;r.maxIndex=Xt,nt[L]=N,nt[Q]=k,nt[W]=$,lt[L]=G,lt[Q]=J,lt[W]=tt,ct[L]=vt,ct[Q]=Nt,ct[W]=Ot,Ft[rt]=ae,Ft[ut]=Bt,bt.set(_t,Xt)}let wt=r.indicesIndex;yt[wt]=It,yt[wt+1]=Tt,yt[wt+2]=Ct,yt[wt+3]=Ct,yt[wt+4]=Xt,yt[wt+5]=It,r.indicesIndex+=6}};var Zs=0,bs=0,ns=128,we=8,Bs=0,Rs=255,zs=Rs<<24>>>0,ls={NONE:0,PAINT:1,KEEP:2},At=1,fe=new Map,ft=S=>Math.floor(S%2===0?S/2-1:S/2),ht=S=>{let[t,s,e]=S,r=ft(t),a=ft(s),o=ft(e),n=t-r-1,i=s-a-1,l=e-o-1,c=-r,h=-a,f=-o;return[c,n,h,i,f,l]},be=1,Ns=be*4;function cs(S,t,s=null){let e=2**t-At,r=Ns*e,a=S[0]*S[1]*S[2]*t,o=Math.floor(a/8)+1,n=we+r+o;s==null&&(typeof Buffer<"u"?s=Buffer.alloc(n).buffer:s=new ArrayBuffer(n));let i=new Uint8Array(s,0,we),l=r/Ns,c=new Uint32Array(s,we,l),h=at.create(s,t,we+r);return i[0]=Zs,[i[1],i[2],i[3]]=S,i[4]=t,[s,c,h]}var dt=class{constructor(t=null,s=null,e=null,r=8,a=0,o=null,n=0,i=null){if(s&&e)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=r,o=o||s.length,i=i||e.length,this.palette=new Uint32Array(s,a||0,o/4),this.indices=at.create(e,r,n,i),this.xShift=ft(t[0]),this.yShift=ft(t[1]),this.zShift=ft(t[2]),this._rebuildRefCounts();else if(t){let[l,c,h]=cs(t,1);this.palette=c,this.indices=h,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(l)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,we);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=ft(this.size[0]),this.yShift=ft(this.size[1]),this.zShift=ft(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,a=this._getOffset(t,s,e);return r.get(a)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==bs}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,bs)}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-At)*be]}setPaletteColor(t,s){this.palette[(t-At)*be]=s}paletteHasReferences(t){return this._refCounts[t-At]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-At]=1}incrementPaletteRefcount(t){this._refCounts[t-At]+=1}decrementPaletteRefcount(t){this._refCounts[t-At]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let a=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(a,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);dt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),dt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let a=this._getOffset(t,s,e);return this.setColorAtOffset(a,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,a=this.getPaletteIndexAtOffset(t),o=dt.isNonEmptyPaletteIndex(a);o&&this.decrementPaletteRefcount(a);for(let i=0;i<e.length;i+=1){let l=i+At;if(this.getPaletteColor(l)===s)return this.incrementPaletteRefcount(l),r.set(t,l),l}if(o&&!this.paletteHasReferences(a))return this.setPaletteColor(a,s),this.resetPaletteRefcountToOne(a),a;let n=this._getFreePaletteIndex();return this.setPaletteColor(n,s),this.resetPaletteRefcountToOne(n),this.indices.set(t,n),n}colorForPaletteIndex(t){return this.palette[(t-At)*be]}filterByChunk(t,s,e,r,a){if(a===ls.NONE)return;let o=t.size,[n,i,l,c,h,f]=ht(o),{size:m}=this,[u,g,p,M,y,v]=ht(m);for(let F=u;F<=g;F+=1)for(let d=p;d<=M;d+=1)for(let V=y;V<=v;V+=1){if(this.getPaletteIndexAt(F,d,V)===0)continue;let x=F+s,A=d+e,z=V+r,_=!(x>i||x<n||A>c||A<l||z>f||z<h)&&t.hasVoxelAt(x,A,z);(a===ls.PAINT&&!_||a===ls.KEEP&&_)&&this.setEmptyAt(F,d,V)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let l=0;l<t.length;l+=1){let c=l+At;if(!this.paletteHasReferences(c))return c}let a=r*2,[o,n,i]=cs(s,a);for(let l=0;l<t.length*be;l+=1)n[l]=t[l];for(;this._refCounts.length<n.length;)this._refCounts.push(0);for(let l=0,c=s[0]*s[1]*s[2];l<c;l+=1){let h=e.get(l);i.set(l,h)}return this.palette=n,this.indices=i,this._recomputeSizeFieldsForBuffer(o),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,a=Math.max(1,r[0],Math.abs(t)*2+1),o=Math.max(1,r[1],Math.abs(s)*2+1),n=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([a,o,n])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new dt(t),[e,r,a,o,n,i]=ht(this.size);for(let m=e;m<=r;m+=1)for(let u=a;u<=o;u+=1)for(let g=n;g<=i;g+=1)this.getPaletteIndexAt(m,u,g)!==0&&s.setColorAt(m,u,g,this.getColorAt(m,u,g));let{buffer:l}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:c}=s;this.bitsPerIndex=c;let[,h,f]=cs(t,c,l);this.palette=h,this.indices=f,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(l)}static fromJSON(t){if(typeof t=="string")return dt.deserialize(t);let{size:s,palette:e,indices:r}=t,a=new dt(s);for(let o=0;o<e.length+At;o+=1)for(let n=0;n<r.length;n+=1){let i=r[n];if(i===o)if(i>=At){let l=e[i-At];a.setColorAtOffset(n,l)}else i===o&&a.setPaletteIndexAtOffset(n,i)}return a}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let a=0;a<this.palette.length;a+=1){let o=a+At,n=this.getPaletteColor(o);n>0&&e.push(n)}for(let a=0,o=this.size[0]*this.size[1]*this.size[2];a<o;a+=1)r.push(this.indices.get(a));return{size:[...this.size],palette:e,indices:r}}clone(){return new dt(this.size,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.bitsPerIndex,this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:a,yShift:o,zShift:n}=this;return(t+a)*r[1]*r[2]+(s+o)*r[2]+(e+n)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);dt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToChunk(t,s=0,e=0,r=0){fe.clear();let a=t.size,[o,n,i,l,c,h]=ht(a),{size:f}=this,[m,u,g,p,M,y]=ht(f);for(let v=m;v<=u;v+=1)for(let F=g;F<=p;F+=1)for(let d=M;d<=y;d+=1){let V=this.getPaletteIndexAt(v,F,d);if(V!==0){let w=v+s,x=F+e,A=d+r,z=a[0],C=a[1],_=a[2];if(w>n&&(z=w*2),w<o&&(z=Math.max(z,-w*2+1)),x>l&&(C=x*2),x<i&&(C=Math.max(C,-x*2+1)),A>h&&(_=A*2),A<c&&(_=Math.max(_,-A*2+1)),z>ns||C>ns||_>ns)continue;(a[0]<z||a[1]<C||a[2]<_)&&(t.resizeTo([z,C,_]),a=t.size,[o,n,i,l,c,h]=ht(a),fe.clear());let T=fe.get(V);if(T===void 0){let X=this.getColorAt(v,F,d);if(X===zs)t.setEmptyAt(w,x,A);else{let O=t.setColorAt(w,x,A,X);fe.set(V,O)}}else t.getPaletteIndexAt(w,x,A)!==T&&t.setPaletteIndexAt(w,x,A,T)}}}createInverse=(t,s)=>{fe.clear();let e=t.size,[r,a,o,n,i,l]=ht(e),{size:c}=this,h=new dt(c),[f,m,u,g,p,M]=ht(c);for(let y=f;y<=m;y+=1)for(let v=u;v<=g;v+=1)for(let F=p;F<=M;F+=1){if(this.getPaletteIndexAt(y,v,F)===0)continue;let V=y+s[0],w=v+s[1],x=F+s[2];if(V>a||V<r||w>n||w<o||x>l||x<i||!t.hasVoxelAt(V,w,x))h.setColorAt(y,v,F,zs);else{let A=t.getColorAt(V,w,x);h.setColorAt(y,v,F,A)}}return h};mergeWith(t,s,e,r=!1){fe.clear();let a=fe,o=e[0]-s[0],n=e[1]-s[1],i=e[2]-s[2],l=t.size,[c,h,f,m,u,g]=ht(l),{size:p}=this,[M,y,v,F,d,V]=ht(p);for(let w=M;w<=y;w+=1)for(let x=v;x<=F;x+=1)for(let A=d;A<=V;A+=1){let z=this.getPaletteIndexAt(w,x,A);if(z===0)continue;let C=w+o,_=x+n,T=A+i;if(!!(!(C>h||C<c||_>m||_<f||T>g||T<u)&&t.hasVoxelAt(C,_,T)))if(a.has(z))this.setPaletteIndexAt(w,x,A,a.get(z));else{(r||t.getColorAt(C,_,T)>this.getColorAt(w,x,A))&&this.removeVoxelAt(w,x,A);let B=this.getPaletteIndexAt(w,x,A);a.set(z,B)}}}};function Ge(S,t,s,e=Bs){return(S|t<<8|s<<16|e<<24)>>>0}function Es(S){let t=S&255,s=(S&65280)>>8,e=(S&16711680)>>16,r=(S&4278190080)>>24;return{r:t,g:s,b:e,t:r}}function Ss(){let S=[];for(let r=0;r<256;r++)S[r]=Math.floor(Math.random()*256),S[r+256]=S[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,a,o){return a+r*(o-a)}function e(r,a,o,n){let i=r&15,l=i<8?a:o,c=i<4?o:i===12||i===14?a:n;return((i&1)===0?l:-l)+((i&2)===0?c:-c)}return{noise:function(r,a,o){let n=Math.floor(r),i=Math.floor(a),l=Math.floor(o),c=n&255,h=i&255,f=l&255;r-=n,a-=i,o-=l;let m=r-1,u=a-1,g=o-1,p=t(r),M=t(a),y=t(o),v=S[c]+h,F=S[v]+f,d=S[v+1]+f,V=S[c+1]+h,w=S[V]+f,x=S[V+1]+f;return s(y,s(M,s(p,e(S[F],r,a,o),e(S[w],m,a,o)),s(p,e(S[d],r,u,o),e(S[x],m,u,o))),s(M,s(p,e(S[F+1],r,a,g),e(S[w+1],m,a,o-1)),s(p,e(S[d+1],r,u,g),e(S[x+1],m,u,g))))}}}var te=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let a=0,o=t.faceCount;a<o;a++)r.set(a,0);break}}static _circularDeform(t,s,e,r,a){let[o,n,i,l,c,h]=ht(t.voxChunk.size),f=(o+n)/2+.5,m=(i+l)/2+.5,u=(c+h)/2+.5,{vertX:g,vertY:p,vertZ:M,vertRing:y}=s;for(let v=0,F=t.vertCount;v<F;v++){let d=g[v],V=p[v],w=M[v],x=d-f,A=V-m,z=w-u,C=Math.max(Math.abs(x*e),Math.abs(A*r),Math.abs(z*a)),_=Math.sqrt(x*x*e+A*A*r+z*z*a);if(_===0)continue;let T=C/_;g[v]=x*(1-e+e*T)+f,p[v]=A*(1-r+r*T)+m,M[v]=z*(1-a+a*T)+u,y[v]=C}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:a}=s;for(let o=0,n=t.faceCount;o<n;o++){let i=o*4,l=i+1,c=i+2,h=i+3;a.set(o,r[e[i]]===r[e[l]]&&r[e[i]]===r[e[c]]&&r[e[i]]===r[e[h]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:a,vertDeformCount:o,vertDeformDamping:n,vertDeformStrength:i,vertFlattenedX:l,vertFlattenedY:c,vertFlattenedZ:h,vertClampedX:f,vertClampedY:m,vertClampedZ:u,vertX:g,vertY:p,vertZ:M,vertTmpX:y,vertTmpY:v,vertTmpZ:F,vertHasTmp:d}=s;for(let V=0;V<e;V++){let w=!1;for(let x=0,A=t.vertCount;x<A;x++){if(o[x]<=V)continue;let C=a[x];if(C===0)continue;w=!0;let _=g[x],T=p[x],X=M[x],O=n[x],B=i[x],Y=1-(f.get(x)|l.get(x)),N=1-(m.get(x)|c.get(x)),k=1-(u.get(x)|h.get(x)),$=0,P=0,U=0;for(let I=0;I<C;I++){let R=r[x*6+I];$+=g[R],P+=p[R],U+=M[R]}let E=Math.pow(O,V)*B,H=$/C-_,b=P/C-T,q=U/C-X;y[x]=_+Y*H*E,v[x]=T+N*b*E,F[x]=X+k*q*E,d.set(x,Y|N|k)}if(w){for(let x=0,A=t.vertCount;x<A;x++)d.get(x)!==0&&(g[x]=y[x],p[x]=v[x],M[x]=F[x]);d.clear()}}}static warpAndScatter(t,s){let e=Ss().noise,{nx:r,px:a,ny:o,py:n,nz:i,pz:l}=t._tile,[c,h,f,m,u,g]=ht(t.voxChunk.size),{vertX:p,vertY:M,vertZ:y,vertWarpAmplitude:v,vertWarpFrequency:F,vertScatter:d,vertFlattenedX:V,vertFlattenedY:w,vertFlattenedZ:x,vertClampedX:A,vertClampedY:z,vertClampedZ:C}=s;c+=.1,f+=.1,u+=.1,h+=.9,m+=.9,g+=.9;for(let _=0,T=t.vertCount;_<T;_++){let X=p[_],O=M[_],B=y[_];if(r&&X<c||a&&X>h||o&&O<f||n&&O>m||i&&B<u||l&&B>g)continue;let Y=v[_],N=F[_],k=d[_],$=Y>0,P=k>0;if($||P){let U=0,E=0,H=0;$&&(U=e((X+.19)*N,O*N,B*N)*Y,E=e((O+.17)*N,B*N,X*N)*Y,H=e((B+.13)*N,X*N,O*N)*Y),P&&(U+=(Math.random()*2-1)*k,E+=(Math.random()*2-1)*k,H+=(Math.random()*2-1)*k);let b=1-(A.get(_)|V.get(_)),q=1-(z.get(_)|w.get(_)),I=1-(C.get(_)|x.get(_));p[_]=X+b*U,M[_]=O+q*E,y[_]=B+I*H}}}};var Me=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:a,faceVertIndices:o,vertLinkIndices:n,vertLinkCounts:i}=s;if(r.get(e)===1)for(let c=0;c<4;c++){let h=o[e*4+c],f=!1;for(let m=0,u=i[h];m<u;m++)if(n[h*6+m]===h){f=!0;break}f||(n[h*6+i[h]]=h,i[h]++,a[h]++)}else for(let c=0;c<4;c++){let h=o[e*4+c],f=o[e*4+(c+1)%4],m=!1;for(let g=0,p=i[h];g<p;g++)if(n[h*6+g]===f){m=!0;break}m||(n[h*6+i[h]]=f,i[h]++);let u=!1;for(let g=0,p=i[f];g<p;g++)if(n[f*6+g]===h){u=!0;break}u||(n[f*6+i[f]]=h,i[f]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:a,vertLinkCounts:o,vertLinkIndices:n}=s;for(let i=0,l=t.vertCount;i<l;i++){let c=r[i],h=o[i];c===h&&(a.set(i,1),o[i]=0)}for(let i=0,l=t.faceCount;i<l;i++)for(let c=0;c<4;c++){let h=e[i*4+c],f=e[i*4+(c+1)%4];if(a.get(h)===1){let m=!1;for(let u=0,g=o[h];u<g;u++)if(n[h*6+u]===f){m=!0;break}m||(n[h*6+o[h]]=f,o[h]++)}if(a.get(f)===1){let m=!1;for(let u=0,g=o[f];u<g;u++)if(n[f*6+u]===h){m=!0;break}m||(n[f*6+o[f]]=h,o[f]++)}}}};var ze=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:a,faceSmooth:o,faceFlattened:n,faceClamped:i,vertX:l,vertY:c,vertZ:h,faceVertFlatNormalX:f,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:g,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:M,faceVertBothNormalX:y,faceVertBothNormalY:v,faceVertBothNormalZ:F,faceVertNormalX:d,faceVertNormalY:V,faceVertNormalZ:w,faceMaterials:x,faceVertIndices:A,vertSmoothNormalX:z,vertSmoothNormalY:C,vertSmoothNormalZ:_,vertBothNormalX:T,vertBothNormalY:X,vertBothNormalZ:O}=s,[B,Y,N,k,$,P]=ht(t.voxChunk.size);for(let E=0,H=t.faceCount;E<H;E++){let b=E*4;for(let q=0;q<4;q++){let I=A[b+q];z[I]=0,C[I]=0,_[I]=0,T[I]=0,X[I]=0,O[I]=0}}for(let E=0,H=t.faceCount;E<H;E++){let b=r[E],q=a.get(E),I=n.get(E),R=i.get(E),K=q|1-(I|R);o.set(E,K);let G=A[E*4],J=A[E*4+1],tt=A[E*4+2],Z=A[E*4+3],ot=(l[G]+l[J]+l[tt]+l[Z])/4,it=(c[G]+c[J]+c[tt]+c[Z])/4,gt=(h[G]+h[J]+h[tt]+h[Z])/4;for(let mt=0;mt<4;mt++){let et=A[E*4+mt],xt=A[E*4+(mt+3)%4],pt=l[et],zt=l[xt],vt=c[et],Nt=c[xt],Ot=h[et],jt=h[xt],Pt=z[et],se=C[et],re=_[et],Lt=T[et],$t=X[et],ae=O[et],Bt=zt-pt,Rt=Nt-vt,yt=jt-Ot,nt=ot-pt,lt=it-vt,ct=gt-Ot,Ft=Math.sqrt(Bt*Bt+Rt*Rt+yt*yt),kt=Math.sqrt(nt*nt+lt*lt+ct*ct);Ft=Ft===0?1:Ft,kt=kt===0?1:kt;let Ut=1/Ft;Bt*=Ut,Rt*=Ut,yt*=Ut;let Ht=1/kt;nt*=Ht,lt*=Ht,ct*=Ht;let _t=Rt*ct-yt*lt,Et=yt*nt-Bt*ct,St=Bt*lt-Rt*nt,de=B+.1,xe=Y+.9,Ct=N+.1,Tt=k+.9,It=$+.1,Xt=P+.9;e&&((e.nx&&b===0||e.px&&b===1)&&(vt<Ct||vt>Tt||Ot<It||Ot>Xt)&&(Et=0,St=0),(e.ny&&b===2||e.py&&b===3)&&(pt<de||pt>xe||Ot<It||Ot>Xt)&&(_t=0,St=0),(e.nz&&b===4||e.pz&&b===5)&&(pt<de||pt>xe||vt<Ct||vt>Tt)&&(_t=0,Et=0));let wt=Math.sqrt(_t*_t+Et*Et+St*St);wt=wt===0?1:wt;let L=1/wt;_t*=L,Et*=L,St*=L,f[E*4+mt]=_t,m[E*4+mt]=Et,u[E*4+mt]=St;let Q=Bt*nt+Rt*lt+yt*ct,W=Math.acos(Q);Pt+=_t*W,se+=Et*W,re+=St*W,Lt+=K*(_t*W),$t+=K*(Et*W),ae+=K*(St*W),z[et]=Pt,C[et]=se,_[et]=re,T[et]=Lt,X[et]=$t,O[et]=ae}}for(let E=0,H=t.vertCount;E<H;E++){let b=z[E],q=C[E],I=_[E],R=T[E],K=X[E],G=O[E],J=Math.sqrt(b*b+q*q+I*I),tt=Math.sqrt(R*R+K*K+G*G);J!==0&&(z[E]=b/J,C[E]=q/J,_[E]=I/J),tt!==0&&(T[E]=R/tt,X[E]=K/tt,O[E]=G/tt)}let U=t.materials.materials;for(let E=0,H=t.faceCount;E<H;E++){let b=o.get(E)===1,q=U[x[E]];for(let I=0;I<4;I++){let R=E*4+I,K=A[E*4+I];switch(g[R]=z[K],p[R]=C[K],M[R]=_[K],y[R]=!b||T[K]===0?f[R]:T[K],v[R]=!b||X[K]===0?m[R]:X[K],F[R]=!b||O[K]===0?u[R]:O[K],q.lighting){case oe:d[R]=g[R],V[R]=p[R],w[R]=M[R];break;case ie:d[R]=y[R],V[R]=v[R],w[R]=F[R];break;default:d[R]=f[R],V[R]=m[R],w[R]=u[R];break}}}}};var D=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,a=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,o=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=a,t.z=o}transformPointInline(t,s,e,r){let a=t[r],o=s[r],n=e[r],i=this.m,l=i[12]*a+i[13]*o+i[14]*n+i[15],c=(i[0]*a+i[1]*o+i[2]*n+i[3])/l,h=(i[4]*a+i[5]*o+i[6]*n+i[7])/l,f=(i[8]*a+i[9]*o+i[10]*n+i[11])/l;t[r]=c,s[r]=h,e[r]=f}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,a=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=a}transformVectorInline(t,s,e,r){let a=t[r],o=s[r],n=e[r],i=this.m,l=i[0]*a+i[1]*o+i[2]*n,c=i[4]*a+i[5]*o+i[6]*n,h=i[8]*a+i[9]*o+i[10]*n;t[r]=l,s[r]=c,e[r]=h}static identity(t){t=t||new D;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new D;let r=t.m,a=s.m,o=e.m;return o[0]=r[0]*a[0]+r[1]*a[4]+r[2]*a[8]+r[3]*a[12],o[1]=r[0]*a[1]+r[1]*a[5]+r[2]*a[9]+r[3]*a[13],o[2]=r[0]*a[2]+r[1]*a[6]+r[2]*a[10]+r[3]*a[14],o[3]=r[0]*a[3]+r[1]*a[7]+r[2]*a[11]+r[3]*a[15],o[4]=r[4]*a[0]+r[5]*a[4]+r[6]*a[8]+r[7]*a[12],o[5]=r[4]*a[1]+r[5]*a[5]+r[6]*a[9]+r[7]*a[13],o[6]=r[4]*a[2]+r[5]*a[6]+r[6]*a[10]+r[7]*a[14],o[7]=r[4]*a[3]+r[5]*a[7]+r[6]*a[11]+r[7]*a[15],o[8]=r[8]*a[0]+r[9]*a[4]+r[10]*a[8]+r[11]*a[12],o[9]=r[8]*a[1]+r[9]*a[5]+r[10]*a[9]+r[11]*a[13],o[10]=r[8]*a[2]+r[9]*a[6]+r[10]*a[10]+r[11]*a[14],o[11]=r[8]*a[3]+r[9]*a[7]+r[10]*a[11]+r[11]*a[15],o[12]=r[12]*a[0]+r[13]*a[4]+r[14]*a[8]+r[15]*a[12],o[13]=r[12]*a[1]+r[13]*a[5]+r[14]*a[9]+r[15]*a[13],o[14]=r[12]*a[2]+r[13]*a[6]+r[14]*a[10]+r[15]*a[14],o[15]=r[12]*a[3]+r[13]*a[7]+r[14]*a[11]+r[15]*a[15],e}static transpose(t,s){s=s||new D;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new D;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let a=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let o=0;o<16;o++)r[o]/=a;return s}static scale(t,s,e,r){r=r||new D;let a=r.m;return a[0]=t,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=s,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=e,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static translate(t,s,e,r){r=r||new D;let a=r.m;return a[0]=1,a[1]=0,a[2]=0,a[3]=t,a[4]=0,a[5]=1,a[6]=0,a[7]=s,a[8]=0,a[9]=0,a[10]=1,a[11]=e,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static rotate(t,s,e,r,a){if(!t||!s&&!e&&!r)return D.identity(a);a=a||new D;let o=a.m,n=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=n,e/=n,r/=n;let i=Math.cos(t),l=Math.sin(t),c=1-i;return o[0]=s*s*c+i,o[1]=s*e*c-r*l,o[2]=s*r*c+e*l,o[3]=0,o[4]=e*s*c+r*l,o[5]=e*e*c+i,o[6]=e*r*c-s*l,o[7]=0,o[8]=r*s*c-e*l,o[9]=r*e*c+s*l,o[10]=r*r*c+i,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,a}static lookAtORIGINAL(t,s,e,r,a,o,n,i,l,c){c=c||new D;let h=c.m,f=t-r,m=s-a,u=e-o,g=Math.sqrt(f*f+m*m+u*u);f/=g,m/=g,u/=g;let p=i*u-l*m,M=l*f-n*u,y=n*m-i*f;g=Math.sqrt(p*p+M*M+y*y),p/=g,M/=g,y/=g;let v=m*y-u*M,F=u*p-f*y,d=f*M-m*p;return g=Math.sqrt(v*v+F*F+d*d),v/=g,F/=g,d/=g,h[0]=p,h[1]=M,h[2]=y,h[3]=-(p*t+M*s+y*e),h[4]=v,h[5]=F,h[6]=d,h[7]=-(v*t+F*s+d*e),h[8]=f,h[9]=m,h[10]=u,h[11]=-(f*t+m*s+u*e),h[12]=0,h[13]=0,h[14]=0,h[15]=1,c}static lookAtTRYOUT(t,s,e,r){r=r||new D;let a=r.m,o=Math.sqrt(t*t+e*e);return a[0]=e/o,a[1]=0,a[2]=-t/o,a[3]=0,a[4]=t*s/o,a[5]=-o,a[6]=e*s/o,a[7]=0,a[8]=t,a[9]=s,a[10]=e,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}static lookAt(t,s,e,r){r=r||new D;let a=r.m,o=Math.sqrt(t*t+e*e),n=o?t/o:1,i=o?e/o:0;return a[0]=t,a[1]=-i,a[2]=-e*n,a[3]=0,a[4]=s,a[5]=0,a[6]=o,a[7]=0,a[8]=e,a[9]=n,a[10]=-e*i,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,r}};var _e=[null,null,null,null],Ne=[null,null,null,null],Ee=[null,null,null,null],Se=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:a,faceVertNormalX:o,faceVertFlatNormalX:n,faceVertNormalY:i,faceVertFlatNormalY:l,faceVertNormalZ:c,faceVertFlatNormalZ:h,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:g,faceVertBothNormalY:p,faceVertBothNormalZ:M}=s,y=t.determineBoundsOffsetAndRescale(t.resize,s),v=new D;v=D.multiply(v,D.translate(t.position.x,t.position.y,t.position.z)),v=D.multiply(v,D.rotate(t.rotation.z,0,0,1)),v=D.multiply(v,D.rotate(t.rotation.y,0,1,0)),v=D.multiply(v,D.rotate(t.rotation.x,1,0,0)),v=D.multiply(v,D.scale(t.scale.x,t.scale.y,t.scale.z)),v=D.multiply(v,D.scale(y.rescale,y.rescale,y.rescale)),v=D.multiply(v,D.translate(y.offset.x,y.offset.y,y.offset.z));let F=D.inverse(v);F=D.transpose(F);for(let d=0,V=t.vertCount;d<V;d++)v.transformPointInline(e,r,a,d);_e[0]=o,Ne[0]=i,Ee[0]=c,_e[1]=n,Ne[1]=l,Ee[1]=h,_e[2]=f,Ne[2]=m,Ee[2]=u,_e[3]=g,Ne[3]=p,Ee[3]=M;for(let d=0,V=t.faceCount;d<V;d++){let w=d*4;for(let x=0;x<4;x++)for(let A=0,z=_e.length;A<z;A++){let C=_e[A],_=Ne[A],T=Ee[A],X=w+x;F.transformVectorInline(C,_,T,X);let O=C[X],B=_[X],Y=T[X],N=Math.sqrt(O*O+B*B+Y*Y);if(N>0){let k=1/N;C[X]=O*k,_[X]=B*k,T[X]=Y*k}}}}};var Te=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let M=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},M>0){let y=1/M;p.normalizedDirection.x*=y}}let r=t.materials.materials,{faceMaterials:a,faceVertNormalX:o,faceVertNormalY:n,faceVertNormalZ:i,faceVertIndices:l,vertX:c,vertY:h,vertZ:f,faceVertLightR:m,faceVertLightG:u,faceVertLightB:g}=s;for(let p=0,M=t.faceCount;p<M;p++){let y=r[a[p]],v=p*4;if(y.lights)for(let F=0;F<4;F++){let d=v+F,V=l[d],w=c[V],x=h[V],A=f[V],z=o[d],C=n[d],_=i[d];m[d]=0,u[d]=0,g[d]=0;for(let T of e){let{color:X,strength:O,distance:B,normalizedDirection:Y,position:N}=T,k=O,$=0;if(N){let P=N.x-w,U=N.y-x,E=N.z-A;$=Math.sqrt(P*P+U*U+E*E);let H=1/$;k=O*Math.max(z*P*H+C*U*H+_*E*H,0)}else Y&&(k=O*Math.max(z*Y.x+C*Y.y+_*Y.z,0));N&&B&&(k=k*(1-Math.min($/B,1))),m[d]+=X.r*k,u[d]+=X.g*k,g[d]+=X.b*k}}else for(let F=0;F<4;F++){let d=v+F;m[d]=1,u[d]=1,g[d]=1}}}};var Ts=[],hs=new Map,fs=()=>Ts.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},Xs=S=>{for(let t of S.partitions)t&&Xs(t);S.minx=Number.MAX_VALUE,S.miny=Number.MAX_VALUE,S.minz=Number.MAX_VALUE,S.maxx=-Number.MAX_VALUE,S.maxy=-Number.MAX_VALUE,S.maxz=-Number.MAX_VALUE,S.partitions.fill(null),S.triangles.length=0,Ts.push(S)},Xe=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(V){return V.ao})))return;let{faceMaterials:r,faceVertIndices:a,faceVertAO:o,vertX:n,vertY:i,vertZ:l,faceVertNormalX:c,faceVertNormalY:h,faceVertNormalZ:f}=s,{faceCount:m}=t,u=t.materials.materials,g=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(g,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let M=t.aoSamples,y=this._generateFibonacciSamples(M);hs.clear();let v=t.scale.x,F=t.scale.y,d=t.scale.z;for(let V=0;V<m;V++){let w=u[r[V]],x=w.ao||t.ao,A=V*4;if(o[A]=0,o[A+1]=0,o[A+2]=0,o[A+3]=0,!x||x.maxDistance===0||x.strength===0||x.angle<1||w.opacity===0)continue;let z=x.maxDistance*Math.max(v,F,d),C=x.strength,_=Math.cos(x.angle/180*Math.PI);for(let T=0;T<4;T++){let X=A+T,O=a[X],B=n[O],Y=i[O],N=l[O],k=c[X],$=h[X],P=f[X],U=B*16384+Y*128+N,E=k*1e7+$*1e5+P*1e3,H=U*1e9+E,b=hs.get(H);if(b!==void 0){o[X]=b;continue}let q=a[A+(T+2)%4],I=n[q],R=i[q],K=l[q],G=B*.99999+I*1e-5+k*1e-5,J=Y*.99999+R*1e-5+$*1e-5,tt=N*.99999+K*1e-5+P*1e-5,Z=0,ot=0;for(let[gt,mt,et]of y){if(gt*k+mt*$+et*P<=_)continue;let pt=G+gt*z,zt=J+mt*z,vt=tt+et*z,Nt=this._distanceToOctree(t,s,p,G,J,tt,gt,mt,et,z,pt,zt,vt);Nt?Nt=Nt/z:Nt=1,Z+=Nt,ot++}let it=0;ot!==0&&(Z=Math.max(Math.min(Z/ot,1),0),it=1-Math.pow(Z,C)),o[X]=it,hs.set(H,it)}}Xs(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,a=[],o=t.materials.materials;for(let n=0;n<r;n++){if(o[e[n]].opacity<.75)continue;let l=n*2;a.push(l),a.push(l+1)}return a}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:a,vertY:o,vertZ:n}=e,i=t.length;if(i<=32){let l=fs();l.triangles=t;for(let c=0;c<i;c++){let h=t[c],m=(h>>1)*4,u,g,p;(h&1)===0?(u=r[m+2],g=r[m+1],p=r[m+0]):(u=r[m+0],g=r[m+3],p=r[m+2]);let M=a[u],y=o[u],v=n[u],F=a[g],d=o[g],V=n[g],w=a[p],x=o[p],A=n[p];l.minx=Math.min(l.minx,M,F,w),l.miny=Math.min(l.miny,y,d,x),l.minz=Math.min(l.minz,v,V,A),l.maxx=Math.max(l.maxx,M,F,w),l.maxy=Math.max(l.maxy,y,d,x),l.maxz=Math.max(l.maxz,v,V,A)}return l}else{let l=0,c=0,h=0;for(let g=0;g<i;g++){let p=t[g],y=(p>>1)*4,v,F,d;(p&1)===0?(v=r[y+2],F=r[y+1],d=r[y+0]):(v=r[y+0],F=r[y+3],d=r[y+2]);let V=a[v],w=o[v],x=n[v],A=a[F],z=o[F],C=n[F],_=a[d],T=o[d],X=n[d];l+=V+A+_,c+=w+z+T,h+=x+C+X}let f=1/i;l*=f,c*=f,h*=f;let m=Array(8).fill(null);for(let g=0;g<i;g++){let p=t[g],y=(p>>1)*4,v,F,d;(p&1)===0?(v=r[y+2],F=r[y+1],d=r[y+0]):(v=r[y+0],F=r[y+3],d=r[y+2]);let V=a[v],w=o[v],x=n[v],A=a[F],z=o[F],C=n[F],_=a[d],T=o[d],X=n[d],O=V+A+_<l?0:1,B=w+z+T<c?0:1,Y=x+C+X<h?0:1,N=O+B*2+Y*4;m[N]===null?m[N]=[p]:m[N].push(p)}let u=fs();for(let g=0;g<8;g++){if(m[g]===null)continue;let p=this._trianglesToOctree(m[g],s,e);u.partitions[g]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,a,o,n,i,l,c,h,f,m){if(this._hitsBox(r,a,o,h,f,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,a,o,n,i,l,c);let u=c,g=e.partitions;for(let p=0;p<8;p++){let M=g[p];if(M===null)continue;let y=this._distanceToOctree(t,s,M,r,a,o,n,i,l,c,h,f,m);y&&(u=Math.min(u,y))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(Wt,s).bounds,{vertCount:a,faceCount:o}=t,{faceVertIndices:n,faceCulled:i,vertX:l,vertY:c,vertZ:h}=s,f=(u,g,p,M,y,v,F,d,V)=>{let w=o*4;l[a]=u,c[a]=g,h[a]=p,l[a+1]=M,c[a+1]=y,h[a+1]=v,l[a+2]=F,c[a+2]=d,h[a+2]=V,n[w]=a+2,n[w+1]=a+1,n[w+2]=a+0,i.set(o,1);let x=o*2;return o++,a+=3,x},m=[];if(t._aoSides.nx&&m.push(f(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&m.push(f(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(f(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&m.push(f(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&m.push(f(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&m.push(f(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),g=fs();g.partitions=[g,u]}return e}static _hitsBox(t,s,e,r,a,o,n){let i=n.minx;if(t<i&&r<i)return!1;let l=n.maxx;if(t>l&&r>l)return!1;let c=n.miny;if(s<c&&a<c)return!1;let h=n.maxy;if(s>h&&a>h)return!1;let f=n.minz;if(e<f&&o<f)return!1;let m=n.maxz;if(e>m&&o>m)return!1;let u=t-(i+l)*.5,g=(l-i)*.5,p=(r-t)*.5,M=Math.abs(p);if(Math.abs(u)>g+M)return!1;let y=(h-c)*.5,v=(a-s)*.5,F=Math.abs(v),d=s-(c+h)*.5;if(Math.abs(d)>y+F)return!1;let V=(m-f)*.5,w=(o-e)*.5,x=Math.abs(w),A=e-(f+m)*.5;return!(Math.abs(A)>V+x||Math.abs(v*A-w*d)>y*x+V*F+Number.EPSILON||Math.abs(w*u-p*A)>V*M+g*x+Number.EPSILON||Math.abs(p*d-v*u)>g*F+y*M+Number.EPSILON)}static _distanceToModel(t,s,e,r,a,o,n,i,l,c){let h=null,{faceVertIndices:f}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,M,y,v;(u&1)===0?(M=f[p+2],y=f[p+1],v=f[p+0]):(M=f[p+0],y=f[p+3],v=f[p+2]);let F=this._triangleDistance(t,s,M,y,v,r,a,o,n,i,l);F&&(h?h=Math.min(h,F):F<c&&(h=F))}return h}static _triangleDistance(t,s,e,r,a,o,n,i,l,c,h){let{vertX:f,vertY:m,vertZ:u}=s,g=f[e],p=m[e],M=u[e],y=f[r],v=m[r],F=u[r],d=f[a],V=m[a],w=u[a],x=y-g,A=v-p,z=F-M,C=d-g,_=V-p,T=w-M,X=c*T-h*_,O=h*C-l*T,B=l*_-c*C,Y=x*X+A*O+z*B;if(Y<Number.EPSILON)return null;let N=1/Y,k=o-g,$=n-p,P=i-M,U=N*(k*X+$*O+P*B);if(U<0||U>1)return null;let E=$*z-P*A,H=P*x-k*z,b=k*A-$*x,q=N*(l*E+c*H+h*b);if(q<0||U+q>1)return null;let I=N*(C*E+_*H+T*b);return I<=Number.EPSILON?null:I}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let a=1;a<=t;++a){let o=Math.asin(-1+2*a/(t+1)),n=r*a,i=Math.cos(n)*Math.cos(o),l=Math.sin(o),c=Math.sin(n)*Math.cos(o);s.push([i,l,c])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let a=r*e,o=Math.cos(a),n=Math.sin(a),i=Math.max(1,r*4),l=Math.PI*2/i;for(let c=0;c<i;c++){let h=c*l,f=n*Math.sin(h),m=n*Math.cos(h);s.push({x:f,y:o,z:m}),r<t&&s.push({x:f,y:-o,z:m})}i+=4}return s}};var Ye=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:a,faceVertVs:o}=s,n=[],i=[],l=[],c=t.materials.materials;for(let h=0;h<c.length;h++){let f=c[h],m=0,u=1,g=1;if(f.map||f.normalMap||f.roughnessMap||f.metalnessMap||f.emissiveMap){let p=t.voxChunk.size[0],M=t.voxChunk.size[1],y=t.voxChunk.size[2];f.mapTransform.uscale===-1&&(u=1/Math.max(p,M,y)),f.mapTransform.vscale===-1&&(g=1/Math.max(p,M,y)),(f.map&&f.map.cube||f.normalMap&&f.normalMap.cube||f.roughnessMap&&f.roughnessMap.cube||f.metalnessMap&&f.metalnessMap.cube||f.emissiveMap&&f.emissiveMap.cube)&&(m=1,u=u/4,g=g/2)}n.push(m),i.push(u),l.push(g)}for(let h=0,f=t.faceCount;h<f;h++){let m=e[h],u=n[m],g=i[m],p=l[m],M=Is[r[h]],y=h*4,v=a[y+M.order[0]],F=o[y+M.order[0]],d=a[y+M.order[1]],V=o[y+M.order[1]],w=a[y+M.order[2]],x=o[y+M.order[2]],A=a[y+M.order[3]],z=o[y+M.order[3]],C=y+M.order[0],_=y+M.order[1],T=y+M.order[2],X=y+M.order[3],O=u*M.uo,B=u*M.vo,Y=M.ud*g,N=M.vd*p;a[C]=O+(v+1e-4)*Y,o[C]=B+(F+1e-4)*N,a[_]=O+(d+1e-4)*Y,o[_]=B+(V+.9999)*N,a[T]=O+(w+.9999)*Y,o[T]=B+(x+.9999)*N,a[X]=O+(A+.9999)*Y,o[X]=B+(z+1e-4)*N}}};var Oe=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:a,vertColorCount:o,faceVertColorR:n,faceVertColorG:i,faceVertColorB:l,faceVertLightR:c,faceVertLightG:h,faceVertLightB:f,faceVertIndices:m,faceMaterials:u,faceVertAO:g}=s,p=t.materials.materials,M=!!t.materials.find(d=>d.colors.length>1&&d.fade),y=Array(p.length).fill(!1);for(let d=0,V=p.length;d<V;d++)M&&p[d].colors.length>1&&p[d].fade&&(y[d]=!0);for(let d=0,V=t.faceCount;d<V;d++)if(y[u[d]])for(let x=0;x<4;x++){let A=0,z=0,C=0,_=0,T=d*4+x,X=m[T],O=o[X];for(let Y=0;Y<O;Y++){let N=X*6+Y;A+=e[N],z+=r[N],C+=a[N],_++}let B=1/_;n[T]=A*B,i[T]=z*B,l[T]=C*B}let v=t.ao||t.materials.find(function(d){return d.ao}),F=t.lights.length>0;if(v&&F)for(let d=0,V=t.faceCount;d<V;d++){let x=p[u[d]].ao||t.ao,A=x?x.color:null;for(let z=0;z<4;z++){let C=d*4+z,_=n[C],T=i[C],X=l[C],O=A?A.r:_,B=A?A.g:T,Y=A?A.b:X,N=1-g[C];n[C]=_*c[C]*N+O*(1-N),i[C]=T*h[C]*N+B*(1-N),l[C]=X*f[C]*N+Y*(1-N)}}else if(F&&!v)for(let d=0,V=t.faceCount;d<V;d++)for(let w=0;w<4;w++){let x=d*4+w;n[x]=n[x]*c[x],i[x]=i[x]*h[x],l[x]=l[x]*f[x]}else if(!F&&v)for(let d=0,V=t.faceCount;d<V;d++){let x=p[u[d]].ao||t.ao;if(!x)continue;let A=x.color;for(let z=0;z<4;z++){let C=d*4+z,_=n[C],T=i[C],X=l[C],O=A?A.r:_,B=A?A.g:T,Y=A?A.b:X,N=1-g[C];n[C]=N*_+O*(1-N),i[C]=N*T+B*(1-N),l[C]=N*X+Y*(1-N)}}}};var We={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ke={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},je={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ze=class{static simplify(t,s){if(!t.simplify)return;let e=function(){We.filled=!1,Ke.filled=!1,Qe.filled=!1,je.filled=!1},r=t.materials.materials,{faceCulled:a,faceNameIndices:o,vertX:n,vertY:i,vertZ:l,voxelXZYFaceIndices:c,voxelXYZFaceIndices:h,voxelYZXFaceIndices:f}=s;for(let m=c.length-t.faceCount,u=c.length;m<u;m++){let g=c[m],p=g&(1<<28)-1;if(a.get(p))continue;let M=g/(1<<28),y=M>>16&255,v=M>>8&255,F=M&255;switch(o[p]){case 0:this._mergeFaces(r,t,s,We,p,y,v,F,n,l,i,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,Ke,p,y,v,F,n,l,i,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,Qe,p,y,v,F,n,l,i,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,je,p,y,v,F,n,l,i,0,1,2,3);break}}e();for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let g=h[m],p=g&(1<<28)-1;if(a.get(p))continue;let M=g/(1<<28),y=M>>16&255,v=M>>8&255,F=M&255;switch(o[p]){case 0:this._mergeFaces(r,t,s,We,p,y,v,F,n,i,l,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,Ke,p,y,v,F,n,i,l,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,Qe,p,y,v,F,n,i,l,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,je,p,y,v,F,n,i,l,2,3,0,1);break}}e();for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let g=f[m],p=g&(1<<28)-1;if(a.get(p))continue;let M=g/(1<<28),y=M>>16&255,v=M>>8&255,F=M&255;switch(o[p]){case 2:this._mergeFaces(r,t,s,We,p,y,v,F,i,l,n,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,Ke,p,y,v,F,i,l,n,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,Qe,p,y,v,F,i,l,n,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,je,p,y,v,F,i,l,n,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,a,o,n,i,l,c,h,f,m,u,g){let{faceCulled:p,faceMaterials:M,vertX:y,vertY:v,vertZ:F,faceVertIndices:d,faceVertNormalX:V,faceVertNormalY:w,faceVertNormalZ:x,faceVertColorR:A,faceVertColorG:z,faceVertColorB:C,faceVertUs:_,faceVertVs:T,faceVertFlatNormalX:X,faceVertFlatNormalY:O,faceVertFlatNormalZ:B,faceVertSmoothNormalX:Y,faceVertSmoothNormalY:N,faceVertSmoothNormalZ:k,faceVertBothNormalX:$,faceVertBothNormalY:P,faceVertBothNormalZ:U}=e,E=M[a],H=t[E];if(r.filled&&r.lastVoxelAxis1===o&&r.lastVoxelAxis2===n&&(H.simplify===!0||H.simplify===null&&s.simplify===!0)&&p.get(a)===0){if(r.maxVoxelAxis3!==i-1){r.filled=!0,r.lastVoxelAxis1=o,r.lastVoxelAxis2=n,r.maxVoxelAxis3=i,r.lastFaceIndex=a;return}let b=a*4,q=r.lastFaceIndex,I=q*4;if(M[q]!==E)return;let R=V[b],K=w[b],G=x[b],J=V[b+1],tt=w[b+1],Z=x[b+1],ot=V[b+2],it=w[b+2],gt=x[b+2],mt=V[b+3],et=w[b+3],xt=x[b+3],pt=V[I],zt=w[I],vt=x[I],Nt=V[I+1],Ot=w[I+1],jt=x[I+1],Pt=V[I+2],se=w[I+2],re=x[I+2],Lt=V[I+3],$t=w[I+3],ae=x[I+3];if(!(this._normalEquals(R,K,G,pt,zt,vt)&&this._normalEquals(J,tt,Z,Nt,Ot,jt)&&this._normalEquals(ot,it,gt,Pt,se,re)&&this._normalEquals(mt,et,xt,Lt,$t,ae)))return;let Rt=A[b],yt=z[b],nt=C[b],lt=A[b+1],ct=z[b+1],Ft=C[b+1],kt=A[b+2],Ut=z[b+2],Ht=C[b+2],_t=A[b+3],Et=z[b+3],St=C[b+3],de=A[I],xe=z[I],Ct=C[I],Tt=A[I+1],It=z[I+1],Xt=C[I+1],wt=A[I+2],L=z[I+2],Q=C[I+2],W=A[I+3],rt=z[I+3],ut=C[I+3];if(!(Rt===de&&yt===xe&&nt===Ct&&lt===Tt&&ct===It&&Ft===Xt&&kt===wt&&Ut===L&&Ht===Q&&_t===W&&Et===rt&&St===ut))return;let Ae=d[b+f],Gt=d[b+m],Jt=d[b+u],ke=d[b+g],Pe=y[Ae],ge=v[Ae],ds=F[Ae],Le=y[Gt],$e=v[Gt],Ue=F[Gt],ve=d[I+f],Je=d[I+m],De=d[I+u],ts=d[I+g],xs=y[ve],gs=v[ve],vs=F[ve],Ys=Math.sqrt((Le-Pe)*(Le-Pe)+($e-ge)*($e-ge)+(Ue-ds)*(Ue-ds)),Os=Math.sqrt((Le-xs)*(Le-xs)+($e-gs)*($e-gs)+(Ue-vs)*(Ue-vs)),Yt=Ys/Os;return Math.abs(l[Je]-(1-Yt)*l[Gt]-Yt*l[ve])<=1e-4&&Math.abs(c[Je]-(1-Yt)*c[Gt]-Yt*c[ve])<=1e-4&&Math.abs(h[Je]-(1-Yt)*h[Gt]-Yt*h[ve])<=1e-4&&Math.abs(l[De]-(1-Yt)*l[Jt]-Yt*l[ts])<=1e-4&&Math.abs(c[De]-(1-Yt)*c[Jt]-Yt*c[ts])<=1e-4&&Math.abs(h[De]-(1-Yt)*h[Jt]-Yt*h[ts])<=1e-4?(d[I+m]=Gt,d[I+u]=Jt,_[I+m]=_[b+m],T[I+m]=T[b+m],_[I+u]=_[b+u],T[I+u]=T[b+u],X[I+m]=X[b+m],O[I+m]=O[b+m],B[I+m]=B[b+m],X[I+u]=X[b+u],O[I+u]=O[b+u],B[I+u]=B[b+u],Y[I+m]=Y[b+m],N[I+m]=N[b+m],k[I+m]=k[b+m],Y[I+u]=Y[b+u],N[I+u]=N[b+u],k[I+u]=k[b+u],$[I+m]=$[b+m],P[I+m]=P[b+m],U[I+m]=U[b+m],$[I+u]=$[b+u],P[I+u]=P[b+u],U[I+u]=U[b+u],r.maxVoxelAxis3=i,p.set(a,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=o,r.lastVoxelAxis2=n,r.maxVoxelAxis3=i,r.lastFaceIndex=a,!1}static _normalEquals(t,s,e,r,a,o){return Math.abs(t-r)<.01&&Math.abs(s-a)<.01&&Math.abs(e-o)<.01}};var Be=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:a,vertX:o,vertY:n,vertZ:i,faceVertFlatNormalX:l,faceVertFlatNormalY:c,faceVertFlatNormalZ:h,faceVertSmoothNormalX:f,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:g,faceVertBothNormalY:p,faceVertBothNormalZ:M,faceVertUs:y,faceVertVs:v,faceVertColorR:F,faceVertColorG:d,faceVertColorB:V,faceVertNormalX:w,faceVertNormalY:x,faceVertNormalZ:A}=s;for(let z=0,C=t.faceCount;z<C;z++){if(r.get(z)===1)continue;let _=z*4,T=a[_],X=a[_+1],O=a[_+2],B=a[_+3],Y=o[T],N=n[T],k=i[T],$=o[X],P=n[X],U=i[X],E=o[O],H=n[O],b=i[O],q=o[B],I=n[B],R=i[B],K=(Y+E)/2,G=(N+H)/2,J=(k+b)/2,tt=($-K)*($-K)+(P-G)*(P-G)+(U-J)*(U-J),Z=(q-K)*(q-K)+(I-G)*(I-G)+(R-J)*(R-J),ot=($+q)/2,it=(P+I)/2,gt=(U+R)/2,mt=(Y-ot)*(Y-ot)+(N-it)*(N-it)+(k-gt)*(k-gt),et=(E-ot)*(E-ot)+(H-it)*(H-it)+(b-gt)*(b-gt);if(tt<e||Z<e)this._shiftFaceVertsAtOffset(_,a),this._shiftFaceVertsAtOffset(_,w),this._shiftFaceVertsAtOffset(_,x),this._shiftFaceVertsAtOffset(_,A),this._shiftFaceVertsAtOffset(_,l),this._shiftFaceVertsAtOffset(_,c),this._shiftFaceVertsAtOffset(_,h),this._shiftFaceVertsAtOffset(_,f),this._shiftFaceVertsAtOffset(_,m),this._shiftFaceVertsAtOffset(_,u),this._shiftFaceVertsAtOffset(_,g),this._shiftFaceVertsAtOffset(_,p),this._shiftFaceVertsAtOffset(_,M),this._shiftFaceVertsAtOffset(_,y),this._shiftFaceVertsAtOffset(_,v),this._shiftFaceVertsAtOffset(_,F),this._shiftFaceVertsAtOffset(_,d),this._shiftFaceVertsAtOffset(_,V);else if(!(mt<e||et<e)){let xt=this._getVertexSumInline(Y,N,k);for(;this._getVertexSumInline($,P,U)<xt||this._getVertexSumInline(E,H,b)<xt||this._getVertexSumInline(q,I,R)<xt;){this._shiftFaceVertsAtOffset(_,a),this._shiftFaceVertsAtOffset(_,w),this._shiftFaceVertsAtOffset(_,x),this._shiftFaceVertsAtOffset(_,A),this._shiftFaceVertsAtOffset(_,l),this._shiftFaceVertsAtOffset(_,c),this._shiftFaceVertsAtOffset(_,h),this._shiftFaceVertsAtOffset(_,f),this._shiftFaceVertsAtOffset(_,m),this._shiftFaceVertsAtOffset(_,u),this._shiftFaceVertsAtOffset(_,g),this._shiftFaceVertsAtOffset(_,p),this._shiftFaceVertsAtOffset(_,M),this._shiftFaceVertsAtOffset(_,y),this._shiftFaceVertsAtOffset(_,v),this._shiftFaceVertsAtOffset(_,F),this._shiftFaceVertsAtOffset(_,d),this._shiftFaceVertsAtOffset(_,V);let pt=Y,zt=N,vt=k;Y=$,N=P,k=U,$=E,P=H,U=b,E=q,H=I,b=R,q=pt,I=zt,R=vt,xt=this._getVertexSumInline(Y,N,k)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var ms=(S,t)=>S-t,me=class{set origin(t){this._origin=j.parse(t)}get origin(){return j.toString(this._origin)}set flatten(t){this._flatten=j.parse(t)}get flatten(){return j.toString(this._flatten)}set clamp(t){this._clamp=j.parse(t)}get clamp(){return j.toString(this._clamp)}set skip(t){this._skip=j.parse(t)}get skip(){return j.toString(this._skip)}set tile(t){this._tile=j.parse(t||" "),this._tile.x&&(this._tile=j.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=j.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=j.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return j.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=j.parse(t)}get aoSides(){return j.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new he,this.voxChunk=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=j.parse("x y z"),this._flatten=j.parse(""),this._clamp=j.parse(""),this._skip=j.parse(""),this._tile=j.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=j.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0}prepareForWrite(){this.lights.some(t=>t.size)&&(this.materials.materials[0].colors[0].count=1)}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:a}=t,{voxChunk:o}=this;this.prepareForWrite();let n=te.maximumDeformCount(this);this.faceCount=0,this.vertCount=0;let i=n>0,[l,c,h,f,m,u]=ht(o.size),g=this.materials.materials,p=ft(o.size[0]),M=ft(o.size[1]),y=ft(o.size[2]);for(let v=l;v<=c;v++)for(let F=h;F<=f;F++)for(let d=m;d<=u;d++){let V=o.getPaletteIndexAt(v,F,d);if(V===0)continue;let w=v+p,x=F+M,A=d+y,z=w<<16,C=A<<8,_=(z|C|x)*(1<<28),T=(z|x<<8|A)*(1<<28),X=(x<<16|C|w)*(1<<28);for(let O=0,B=As.length;O<B;O++){let Y=Cs[O],N,k=v+Y[0],$=F+Y[1],P=d+Y[2];if(k<l||k>c||$<h||$>f||P<m||P>u?N=0:N=o.getPaletteIndexAt(k,$,P),this._createFace(o,t,g,v,F,d,p,M,y,V,N,O,i,s)){let E=this.faceCount-1;e[E]=_+E,r[E]=T+E,a[E]=X+E}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=a.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(ms),t.voxelXYZFaceIndices.sort(ms),t.voxelYZXFaceIndices.sort(ms),Me.fixClampedLinks(this,t),te.changeShape(this,t,this._shape),te.deform(this,t,n),te.warpAndScatter(this,t),ze.calculateNormals(this,t),Se.transformVertices(this,t),Te.calculateLights(this,t),Xe.calculateAmbientOcclusion(this,t),Oe.combineColors(this,t),Ye.assignUVs(this,t),Ze.simplify(this,t),Be.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={bounds:null,offset:null,rescale:1},r,a,o,n,i,l,{vertX:c,vertY:h,vertZ:f}=s;if(t===Ve||t===Wt){r=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY,i=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;for(let p=0,M=this.vertCount;p<M;p++){let y=c[p],v=h[p],F=f[p];y<r&&(r=y),v<a&&(a=v),F<o&&(o=F),y>n&&(n=y),v>i&&(i=v),F>l&&(l=F)}if(t===Wt){let[p,M,y,v,F,d]=ht(this.voxChunk.size),V=(M-p+1)/(M-p),w=(v-y+1)/(v-y),x=(d-F+1)/(d-F);e.rescale=Math.min(V,w,x)}}t||(r=this.bounds.minX,n=this.bounds.maxX+1,a=this.bounds.minY,i=this.bounds.maxY+1,o=this.bounds.minZ,l=this.bounds.maxZ+1);let m=-(r+n)/2,u=-(a+i)/2,g=-(o+l)/2;return this._origin.nx&&(m=-r),this._origin.px&&(m=-n),this._origin.ny&&(u=-a),this._origin.py&&(u=-i),this._origin.nz&&(g=-o),this._origin.pz&&(g=-l),e.bounds={minX:r,minY:a,minZ:o,maxX:n,maxY:i,maxZ:l},e.offset={x:m,y:u,z:g},e}_createFace(t,s,e,r,a,o,n,i,l,c,h,f,m,u){let g=t.colorForPaletteIndex(c),p=(g&4278190080)>>24,M=e[p];if(M.opacity===0)return!1;if(h!==0){let G=(t.colorForPaletteIndex(h)&4278190080)>>24;if(!e[G].isTransparent&&!M.wireframe)return!1;if(!(!M.isTransparent&&!M.wireframe)){if(!(M.isTransparent&&!M.wireframe&&h!==0&&e[(t.colorForPaletteIndex(h)&4278190080)>>24].wireframe))return!1}}let y=this._isFacePlanar(M,r,a,o,f,M._flatten,this._flatten),v=this._isFacePlanar(M,r,a,o,f,M._clamp,this._clamp);if(this._isFacePlanar(M,r,a,o,f,M._skip,this._skip))return!1;let{faceVertIndices:d,faceVertColorR:V,faceVertColorG:w,faceVertColorB:x,faceFlattened:A,faceClamped:z,faceSmooth:C,faceCulled:_,faceMaterials:T,faceNameIndices:X,faceVertUs:O,faceVertVs:B}=s,{faceCount:Y}=this,N=Y*4,k=(g&255)/255,$=((g&65280)>>8)/255,P=((g&16711680)>>16)/255;d[N]=this._createVertex(s,M,r,a,o,k,$,P,n,i,l,f,0,y,v,u),d[N+1]=this._createVertex(s,M,r,a,o,k,$,P,n,i,l,f,1,y,v,u),d[N+2]=this._createVertex(s,M,r,a,o,k,$,P,n,i,l,f,2,y,v,u),d[N+3]=this._createVertex(s,M,r,a,o,k,$,P,n,i,l,f,3,y,v,u);for(let G=0;G<4;G++)V[N+G]=k,w[N+G]=$,x[N+G]=P;A.set(Y,y?1:0),z.set(Y,v?1:0),C.set(Y,0),_.set(Y,0),T[Y]=p,X[Y]=f;let U=ws[f],E=U[0],H=U[1],b=r+n,q=a+i,I=o+l,R=b*E[0]+q*E[1]+I*E[2],K=b*H[0]+q*H[1]+I*H[2];for(let G=0;G<4;G++)O[N+G]=R,B[N+G]=K;return m&&Me.linkVertices(this,s,Y),this.faceCount++,!0}_createVertex(t,s,e,r,a,o,n,i,l,c,h,f,m,u,g,p){let M=Vs[f][m],y=e+M[0],v=r+M[1],F=a+M[2],d=y+l<<20|v+c<<10|F+h,{_clamp:V,_flatten:w}=this,{vertDeformCount:x,vertDeformDamping:A,vertDeformStrength:z,vertWarpAmplitude:C,vertWarpFrequency:_,vertScatter:T,vertX:X,vertY:O,vertZ:B,vertLinkCounts:Y,vertFullyClamped:N,vertRing:k,vertClampedX:$,vertClampedY:P,vertClampedZ:U,vertColorR:E,vertColorG:H,vertColorB:b,vertColorCount:q,vertFlattenedX:I,vertFlattenedY:R,vertFlattenedZ:K}=t,{deform:G,warp:J,scatter:tt}=s,Z;if(p.has(d)?(Z=p.get(d),G?x[Z]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,Z)&&(z[Z]=G.strength,A[Z]=G.damping,x[Z]=G.count):(x[Z]=0,A[Z]=0,z[Z]=0),J?C[Z]!==0&&(J.amplitude<C[Z]||J.amplitude===C[Z]&&J.frequency>_[Z])&&(C[Z]=J.amplitude,_[Z]=J.frequency):(C[Z]=0,_[Z]=0),tt?T[Z]!==0&&Math.abs(tt)<Math.abs(T[Z])&&(T[Z]=tt):T[Z]=0):(Z=this.vertCount,p.set(d,Z),X[Z]=y,O[Z]=v,B[Z]=F,G?(A[Z]=G.damping,x[Z]=G.count,z[Z]=G.strength,Y[Z]=0,N.set(Z,0)):x[Z]=0,J?(C[Z]=J.amplitude,_[Z]=J.frequency):C[Z]=0,tt?T[Z]=tt:T[Z]=0,q[Z]=0,k[Z]=0,$.set(Z,0),P.set(Z,0),U.set(Z,0),I.set(Z,0),R.set(Z,0),K.set(Z,0)),this._setIsVertexPlanar(s,y,v,F,s._flatten,w,I,R,K,Z),this._setIsVertexPlanar(s,y,v,F,s._clamp,V,$,P,U,Z),s.fade){let ot=q[Z],it=Z*6;E[it+ot]=o,H[it+ot]=n,b[it+ot]=i,q[Z]++}return this.vertCount++,Z}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:a}=t,o=e[s],n=a[s],i=r[s];return o===1?i*(n+1):i*(1-Math.pow(o,n+1))/(1-o)}_isFacePlanar(t,s,e,r,a,o,n){let i=o,l=t.bounds;if(i||(i=n,l=this.bounds),!i)return!1;switch(a){case 0:return i.x||i.nx&&s===l.minX;case 1:return i.x||i.px&&s===l.maxX;case 2:return i.y||i.ny&&e===l.minY;case 3:return i.y||i.py&&e===l.maxY;case 4:return i.z||i.nz&&r===l.minZ;case 5:return i.z||i.pz&&r===l.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,a,o,n,i,l,c){let h=a,f=t.bounds;h||(h=o,f=this.bounds),h?(n.set(c,h.x||h.nx&&s<f.minX+.5||h.px&&s>f.maxX+.5?1:n.get(c)|0),i.set(c,h.y||h.ny&&e<f.minY+.5||h.py&&e>f.maxY+.5?1:i.get(c)|0),l.set(c,h.z||h.nz&&r<f.minZ+.5||h.pz&&r>f.maxZ+.5?1:l.get(c)|0)):(n.set(c,n.get(c)|0),i.set(c,i.get(c)|0),l.set(c,l.get(c)|0))}};var ee=class{static readFromString(t){let s=this._parse(t);return this._validateModel(s),this._createModel(s)}static _parse(t){let s={linecontinuation:/_\s*[\r\n]/gm,modelparts:new RegExp(/\s*(\/\/(.*?)\r?\n)/.source+"|"+/\s*(texture|light|model|material|voxels)\s+/.source+"|"+/\s*([^=,\r\n]+=\s*data:image.*?base64,.*$)\s*/.source+"|"+/\s*([^=,\r\n]+=[^\r\n=;,/]+)\s*/.source+"|"+/\s*([A-Za-z ()\d -]+)\s*/.source,"gm")},e={lights:[],textures:[],materials:[]},r=e,a=null;return Array.from(t.replaceAll(s.linecontinuation," ").matchAll(s.modelparts),n=>n[0].trim()).filter(n=>n).forEach(function(n){if(!n.startsWith("//"))if(n==="texture")r={id:"<no-name>",cube:!1},e.textures.push(r);else if(n==="light")r={color:"#FFF"},e.lights.push(r);else if(n==="model")r=e;else if(n==="material")r={},e.materials.push(r);else if(n==="voxels")r=e,a="";else if(a!==null)a+=n.replace(/\s/g,"");else{let i=n.indexOf("=");if(i===-1)throw new Error(`SyntaxError: Invalid definition '${n}'.`);let l=n.substring(0,i).trim().toLowerCase(),c=n.substring(i+1).trim();r[l]=c}},this),e.voxels=a,e}static _createModel(t){let s=new me;return s.size=this._parseXYZInt("size",t.size,null,!0),s.scale=this._parseXYZFloat("scale",t.scale,"1",!0),s.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),s.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),s.simplify=t.simplify!=="false",t.resize===Ve?s.resize=Ve:t.resize===Wt?s.resize=Wt:t.resize?s.resize=null:t.autoresize==="true"&&(s.resize=Wt),s.shape=t.shape,s.wireframe=t.wireframe==="true"||!1,s.origin=t.origin||"x y z",s.flatten=t.flatten,s.clamp=t.clamp,s.skip=t.skip,s.tile=t.tile,s.setAo(this._parseAo(t.ao)),s.aoSides=t.aosides,s.aoSamples=parseInt(t.aosamples||50,10),s.data=this._parseVertexData(t.data,"model"),s.shell=this._parseShell(t.shell),t.lights.some(e=>e.size)&&s.materials.createMaterial(He,ye,1,0,!1,!1,1,0,!1,1,!1,Mt,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0).addColorHEX("#FFFFFF"),t.lights.forEach(function(e){this._createLight(s,e)},this),t.textures.forEach(function(e){this._createTexture(s,e)},this),t.materials.forEach(function(e){this._createMaterial(s,e)},this),s.colors={},s.materials.forEach(function(e){e.colors.forEach(function(r){s.colors[r.id]=r})}),this._resolveShellColors(s.shell,s),s.materials.forEach(function(e){this._resolveShellColors(e.shell,s)},this),this._createVoxels(s,t.voxels),s}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=st.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new le(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s){let e=ye;s.lighting===Ce&&(e=Ce),s.lighting===oe&&(e=oe),s.lighting===ie&&(e=ie),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let r=null;t.simplify&&s.simplify==="false"&&(r=!1),!t.simplify&&s.simplify==="true"&&(r=!0);let a=t.materials.createMaterial(s.type||Dt,e,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,r,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0));s.deform&&a.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&a.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(a.scatter=parseFloat(s.scatter)),a.flatten=s.flatten,a.clamp=s.clamp,a.skip=s.skip,a.setAo(this._parseAo(s.ao)),a.shell=this._parseShell(s.shell),a.lights=s.lights!=="false",a.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,a.data);let o=/\s*\(\s*(\d+)\s*\)\s*/g,n=/([A-Z][a-z]*)\s*(\(\d+\))?[:]\s*(#[a-fA-F0-9]*)\s*/g;s.colors=s.colors.replace(o,"($1)"),s.colors=s.colors.replace(n,"$1$2:$3 "),s.colors.split(" ").filter(l=>l).forEach(function(l){let c=l.split(":")[0],h=null;c.includes("(")&&(h=Number(c.split("(")[1].replace(")","")),c=c.split("(")[0]);let f=l.split(":")[1];if(!a.colors[c]){if(f=a.addColor(st.fromHex(f)),!/^[A-Z][a-z]*$/.test(c))throw new Error(`SyntaxError: Invalid color ID '${c}'`);f.id=c,f.exId=h}},this)}static _createVoxels(t,s){let e=t.colors,r=null,a=[];if(s.matchAll)a=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let f=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,m;for(;(m=f.exec(s))!==null;)a.push(m);a=a[Symbol.iterator]()}let o=this._unpackRle(a),n=t.size.x*t.size.y*t.size.z,i=0,l=t.voxChunk=new dt([t.size.x,t.size.y,t.size.z]);for(let f=0;f<o.length;f++)i+=o[f][1];if(i!==n)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${n} voxels) but the voxel matrix contains ${i} voxels.`);let c={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new Qt;let h=0;for(let f=0;f<o.length;f++){let m=null;o[f][0]!=="-"&&(m=e[o[f][0]],h=t.materials.materials.findIndex(u=>u.colors.includes(m)),m||(r===null&&(r=t.materials.createMaterial(Dt,ye,.5,0,!1,1,!1)),m=st.fromHex("#FF00FF"),m.id=o[f][0],r.addColor(m),e[o[f][0]]=m)),this._setVoxels(t,m,o[f][1],c,l,h)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=st.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),a=parseFloat(t.split(" ")[2]||1),o=parseFloat(t.split(" ")[3]||70);o=Math.max(0,Math.min(90,Math.round(o))),s={color:e,maxDistance:r,strength:a,angle:o}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let a=0;a<r.length/2;a++){let o=r[a*2+0],n=r[a*2+1];if(!/^[A-Z][a-z]*$/.test(o)||!/^([-+]?[0-9]*\.?[0-9]+)*$/.test(n)){e=!0;break}else s.push({colorId:r[a*2],distance:r[a*2+1]})}}if(e)throw new Error(`SyntaxError: shell '${t}' must be 'none' or one or more color ID's and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,a){return r.distance-a.distance})),s}static _resolveShellColors(t,s){!t||t.length===0||t.forEach(function(e){if(e.color=s.colors[e.colorId],!e.color)throw new Error(`SyntaxError: shell color ID '${e.colorId}' is not a known color`)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\s+/),a=null;for(let n=0;n<r.length;n++){let i=r[n];if(isNaN(i))a={name:i,values:[]},e.push(a);else if(a)a.values.push(parseFloat(i));else break}let o=e.length===0;for(let n=0;n<e.length;n++)o=o||e[n].values.length===0||e[n].values.length>=4;if(o)throw new Error(`SyntaxError: The data property '${e.data}' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch{e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let a=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(a.x),y:Math.trunc(a.y),z:Math.trunc(a.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let a=s.split(/[\s/]+/);if(a.length===1&&r&&(a.push(a[0]),a.push(a[0])),a.length!==3)throw new Error(`SyntaxError: '${t}' must have three values.`);if(a={x:parseFloat(a[0]),y:parseFloat(a[1]),z:parseFloat(a[2])},Number.isNaN(a.x)||Number.isNaN(a.y)||Number.isNaN(a.z))throw new Error(`SyntaxError: Invalid value '${s}' for ${t}'.`);return a}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let a=r.value[0];if(a[0]>="0"&&a[0]<="9")e=parseInt(a,10);else if(a==="("){let o=this._unpackRle(t);for(let n=0;n<e;n++)Array.prototype.push.apply(s,o);e=1}else{if(a===")")return s;a.length>1&&a[0]>="A"&&a[0]<="Z"&&a[1]===a[0]?(e>1?(s.push([a[0],e]),s.push([a[0],a.length-1])):s.push([a[0],a.length]),e=1):a.length>1&&a[0]==="-"&&a[1]==="-"?(e>1?(s.push(["-",e]),s.push(["-",a.length-1])):s.push(["-",a.length]),e=1):(s.push([a,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,a,o){let n=t.materials.materials[o];for(;e-- >0;){if(s){let i=Math.floor(s.r*255),l=Math.floor(s.g*255),c=Math.floor(s.b*255),f=Ge(i,l,c,o),m=r.x-ft(t.size.x),u=r.y-ft(t.size.y),g=r.z-ft(t.size.z);t.bounds.set(m,u,g),n.bounds.set(m,u,g),a.setColorAt(m,u,g,f)}r.x++,r.x>r.maxx&&(r.x=r.minx,r.y++),r.y>r.maxy&&(r.y=r.miny,r.z++)}}static _validateModel(t){let s=["size","materials","textures","lights","voxels"],e=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"];this._validateProperties(t,s,e,"model"),t.lights.forEach(function(r){this._validateLight(r)},this),t.textures.forEach(function(r){this._validateTexture(r)},this),t.materials.forEach(function(r){this._validateMaterial(r)},this)}static _validateLight(t){let s=["color"],e=["direction","position","distance","size","detail"];if(this._validateProperties(t,s,e,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){let s=["id","image"],e=["cube"];this._validateProperties(t,s,e,"texture")}static _validateMaterial(t){let s=["colors"],e=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"];this._validateProperties(t,s,e,"material")}static _validateProperties(t,s,e,r){for(let a of s)if(!t[a])throw new Error("SyntaxError: "+r+' is missing mandatory property "'+a+'".');for(let a in t)if(!s.includes(a)&&!e.includes(a))throw new Error("SyntaxError: "+r+' has unrecognized property "'+a+'".')}};var Re=class{static writeToString(t,s,e){e=Math.round(e||1),t.prepareForWrite();let r=[],a={};t.materials.forEach(function(h){h.colors.forEach(function(f){r.push(f),a[f.id]=f.id})}),r.sort(function(h,f){return f.count-h.count});let o=0,n=0;for(let h=0;h<r.length;h++){if(!r[h].id){let f;do f=this._colorIdForIndex(n++);while(a[f]);a[f]=f,r[h].id=f}o=Math.max(r[h].id.length,o)}let i=s||o===1||o>3?1:o,l=this._serializeTextures(t);l+=this._serializeLights(t),l+=`model\r
`;let c=t.voxels.bounds.size;return c.y===c.x&&c.z===c.x?l+=`size = ${c.x*e}\r
`:l+=`size = ${c.x*e} ${c.y*e} ${c.z*e}\r
`,t.shape!=="box"&&(l+=`shape = ${t.shape}\r
`),(t.scale.x!==1||t.scale.y!==1||t.scale.z!==1||e!==1)&&(t.scale.y===t.scale.x&&t.scale.z===t.scale.x?l+=`scale = ${t.scale.x/e}\r
`:l+=`scale = ${t.scale.x/e} ${t.scale.y/e} ${t.scale.z/e}\r
`),t.resize&&(l+=`resize = ${t.resize}\r
`),(t.rotation.x!==0||t.rotation.y!==0||t.rotation.z!==0)&&(l+=`rotation = ${t.rotation.x} ${t.rotation.y} ${t.rotation.z}\r
`),(t.position.x!==0||t.position.y!==0||t.position.z!==0)&&(l+=`position = ${t.position.x} ${t.position.y} ${t.position.z}\r
`),t.origin&&(l+=`origin = ${t.origin}\r
`),t.flatten&&(l+=`flatten = ${t.flatten}\r
`),t.clamp&&(l+=`clamp = ${t.clamp}\r
`),t.skip&&(l+=`skip = ${t.skip}\r
`),t.tile&&(l+=`tile = ${t.tile}\r
`),t.ao&&(l+=`ao =${t.ao.color.toString()!=="#000"?" "+t.ao.color:""} ${t.ao.maxDistance} ${t.ao.strength}${t.ao.angle!==70?" "+t.ao.angle:""}\r
`),t.asSides&&(l+=`aosides = ${t.aoSides}\r
`),t.asSamples&&(l+=`aosamples = ${t.aoSamples}\r
`),t.wireframe&&(l+=`wireframe = true\r
`),t.simplify||(l+=`simplify = false\r
`),t.data&&(l+=`data = ${this._serializeVertexData(t.data)}\r
`),t.shell&&(l+=`shell = ${this._getShell(t.shell)}\r
`),l+=this._serializeMaterials(t),!s||e!==1?l+=this._serializeVoxels(t,e,i):l+=this._serializeVoxelsRLE(t,100),l}static _serializeVertexData(t){let s=null;if(t&&t.length>0){s="";for(let e=0;e<t.length;e++){s+=t[e].name+" ";for(let r=0;r<t[e].values.length;r++)s+=t[e].values[r]+" "}}return s}static _serializeTextures(t){let s="",e="";return Object.getOwnPropertyNames(t.textures).forEach(function(r){let a=t.textures[r],o=[];o.push(`id = ${a.id}`),a.cube&&o.push("cube = true"),o.push(`image = ${a.image}`),s+=`texture ${o.join(", ")}\r
`,e=`\r
`}),s+=e,s}static _serializeLights(t){let s="",e="";return t.lights.forEach(function(r){let a=[],o=`${r.color}`;r.strength!==1&&(o+=` ${r.strength}`),a.push(`color = ${o}`),r.direction&&a.push(`direction = ${r.direction.x} ${r.direction.y} ${r.direction.z}`),r.position&&a.push(`position = ${r.position.x} ${r.position.y} ${r.position.z}`),r.distance&&a.push(`distance = ${r.distance}`),r.size&&(a.push(`size = ${r.size}`),r.detail!==1&&a.push(`detail = ${r.detail}`)),s+=`light ${a.join(", ")}\r
`,e=`\r
`}),s+=e,s}static _serializeMaterials(t){let s="";return t.materials.forEach(function(e){if(e.colors.length===0)return;let r=[];if(e.type!==Dt&&r.push(`type = ${e.type}`),e.lighting!==ye&&r.push(`lighting = ${e.lighting}`),e.wireframe&&r.push("wireframe = true"),e.roughness!==1&&r.push(`roughness = ${e.roughness}`),e.metalness!==0&&r.push(`metalness = ${e.metalness}`),e.fade&&r.push("fade = true"),e.simplify!==null&&e.simplify!==t.simplify&&r.push(`simplify = ${e.simplify}`),e.opacity!==1&&r.push(`opacity = ${e.opacity}`),e.transparent&&r.push("transparent = true"),e.refractionRatio!==.9&&r.push(`refractionRatio = ${e.refractionRatio}`),e.emissive&&r.push(`emissive = ${e.emissive.color} ${e.emissive.intensity}`),e.fog||r.push("fog = false"),e.side!==Mt&&r.push(`side = ${e.side}`),e.deform&&r.push(`deform = ${e.deform.count} ${e.deform.strength}${e.deform.damping!==1?" "+e.deform.damping:""}`),e.warp&&r.push(`warp = ${e.warp.amplitude} ${e.warp.frequency}`),e.scatter&&r.push(`scatter = ${e.scatter}`),e.ao&&r.push(`ao =${e.ao.color!=="#000"?" "+e.ao.color:""} ${e.ao.maxDistance} ${e.ao.strength}${e.ao.angle!==70?" "+e.ao.angle:""}`),t.lights.length>0&&!e.lights&&r.push("lights = false"),e.flatten&&r.push(`flatten = ${e.flatten}`),e.clamp&&r.push(`clamp = ${e.clamp}`),e.skip&&r.push(`skip = ${e.skip}`),e.map&&r.push(`map = ${e.map.id}`),e.normalMap&&r.push(`normalmap = ${e.normalMap.id}`),e.roughnessMap&&r.push(`roughnessmap = ${e.roughnessMap.id}`),e.metalnessMap&&r.push(`metalnessmap = ${e.metalnessMap.id}`),e.emissiveMap&&r.push(`emissivemap = ${e.emissiveMap.id}`),e.matcap&&r.push(`matcap = ${e.matcap.id}`),e.reflectionMap&&r.push(`reflectionmap = ${e.reflectionMap.id}`),e.refractionMap&&r.push(`refractionmap = ${e.refractionMap.id}`),e.mapTransform.uscale!==-1||e.mapTransform.vscale!==-1){let a="maptransform =";a+=` ${e.mapTransform.uscale} ${e.mapTransform.vscale}`,(e.mapTransform.uoffset!==0||e.mapTransform.voffset!==0||e.mapTransform.rotation!==0)&&(a+=` ${e.mapTransform.uoffset} ${e.mapTransform.voffset}`,e.mapTransform.rotation!==0&&(a+=` ${e.mapTransform.rotation}`)),r.push(a)}e.data&&r.push(`data = ${this._serializeVertexData(e.data)}`),e.shell&&r.push(`shell = ${this._getShell(e.shell)}`),s+="material "+r.join(", ")+`\r
`,s+="  colors =",e.colors.forEach(function(a){s+=` ${a.id}${a.exId==null?"":"("+a.exId+")"}:${a}`}),s+=`\r
`},this),s}static _colorIdForIndex(t){let s="ABCDEFGHIJKLMNOPQRSTUVWXYZ",e="";do{let r=t%26;e=s[r]+e.toLowerCase(),t=(t-r)/26,t<26&&(s="#ABCDEFGHIJKLMNOPQRSTUVWXYZ")}while(t>0);return e}static _getShell(t){if(t.length===0)return"none";let s="";for(let e=0;e<t.length;e++)s+=`${t[e].colorId} ${t[e].distance} `;return s.trim()}static _serializeVoxels(t,s,e){let r="-"+" ".repeat(Math.max(e-1)),a=" ".repeat(e),o=`voxels\r
`,n=t.voxels;for(let i=n.minZ;i<=n.maxZ;i++)for(let l=0;l<s;l++){for(let c=n.minY;c<=n.maxY;c++)for(let h=0;h<s;h++){for(let f=n.minX;f<=n.maxX;f++){let m=n.getVoxel(f,c,i);for(let u=0;u<s;u++)if(m){o+=m.color.id;let g=m.color.id.length;for(;g++<e;)o+=" "}else o+=r}o+=a}o+=`\r
`}return o}static _serializeVoxelsRLE(t,s){let e=[],r=0,a;t.voxels.forEachInBoundary(function(n){let i=n?n.color:null;i===a?r++:(this._addRleChunk(e,a,r,s),a=i,r=1)},this),this._addRleChunk(e,a,r,s);let o="";for(let n of e)o+=this._rleToString(n);return`voxels\r
`+o+`\r
`}static _addRleChunk(t,s,e,r){if(e===0)return;let a=e>1?e.toString():"";a+=s?s.id:"-",t.push([a,1,a]);for(let o=Math.max(0,t.length-r*2);o<=t.length-2;o++){let n=t[o][0];for(let i=1;i<r&&!(o+2*i>t.length);i++){let l=!0;for(let c=0;c<=i-1&&(l=t[o+c][2]===t[o+c+i][2],!!l);c++);if(l){let c=t.splice(o,i);t.splice(o,i-1),t[o]=[c,2,null],t[o][2]=JSON.stringify(t[o]),o=t.length;break}}if(Array.isArray(n)&&t.length>o+n.length){let i=n,l=!0;for(let c=0;c<i.length&&(l=i[c][2]===t[o+1+c][2],!!l);c++);l&&(t.splice(o+1,i.length),t[o][1]++,t[o][2]=null,t[o][2]=JSON.stringify(t[o]),o=t.length)}}}static _rleToString(t){let s=t[1]===1?"":t[1].toString(),e=t[0];if(Array.isArray(e)){s+="(";for(let r of e)s+=this._rleToString(r);s+=")"}else s+=e;return s}};var ue=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),a=e*4;this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=at.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=at.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=at.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=at.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=at.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=at.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=at.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=at.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=at.create(new Uint8Array(r).buffer,1,0),this.faceClamped=at.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=at.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=at.create(new Uint8Array(r).buffer,1,0),this.faceCulled=at.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(a),this.faceVertNormalX=new Float32Array(a),this.faceVertNormalY=new Float32Array(a),this.faceVertNormalZ=new Float32Array(a),this.faceVertFlatNormalX=new Float32Array(a),this.faceVertFlatNormalY=new Float32Array(a),this.faceVertFlatNormalZ=new Float32Array(a),this.faceVertSmoothNormalX=new Float32Array(a),this.faceVertSmoothNormalY=new Float32Array(a),this.faceVertSmoothNormalZ=new Float32Array(a),this.faceVertBothNormalX=new Float32Array(a),this.faceVertBothNormalY=new Float32Array(a),this.faceVertBothNormalZ=new Float32Array(a),this.faceVertColorR=new Float32Array(a),this.faceVertColorG=new Float32Array(a),this.faceVertColorB=new Float32Array(a),this.faceVertLightR=new Float32Array(a),this.faceVertLightG=new Float32Array(a),this.faceVertLightB=new Float32Array(a),this.faceVertAO=new Float32Array(a),this.faceVertUs=new Float32Array(a),this.faceVertVs=new Float32Array(a),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};function us(S){let t=new Blob([S],{type:"text/javascript"}),s=URL.createObjectURL(t),e=new Worker(s);return URL.revokeObjectURL(s),e}function ps(){return us('var Ss=Object.defineProperty;var Os=(S,t,s)=>t in S?Ss(S,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):S[t]=s;var us=(S,t,s)=>(Os(S,typeof t!="symbol"?t+"":t,s),s);var J=class{static parse(t){if(!t)return;if(t=" "+(t||"").toLowerCase(),t!==" "&&!/^(?!$)(\\s+(?:none|-x|x|\\+x|-y|y|\\+y|-z|z|\\+z|\\s))+\\s*$/.test(t))throw new Error(`SyntaxError: Planar expression \'${t}\' is only allowed to be \'none\' or contain -x x +x -y y +y -z z +z.`);let s=t.includes("none");return{nx:!s&&t.includes("-x"),x:!s&&t.includes(" x"),px:!s&&t.includes("+x"),ny:!s&&t.includes("-y"),y:!s&&t.includes(" y"),py:!s&&t.includes("+y"),nz:!s&&t.includes("-z"),z:!s&&t.includes(" z"),pz:!s&&t.includes("+z")}}static toString(t){return t?((t.nx?" -x":"")+(t.x?" x":"")+(t.px?" +x":"")+(t.ny?" -y":"")+(t.y?" y":"")+(t.py?" +y":"")+(t.nz?" -z":"")+(t.z?" z":"")+(t.pz?" +z":"")).trim():void 0}static combine(t,s,e){return!t&&!s?e:t?!s||t===s?t:{nx:t.nx||s.nx,x:t.x||s.x,px:t.px||s.px,ny:t.ny||s.ny,y:t.y||s.y,py:t.py||s.py,nz:t.nz||s.nz,z:t.z||s.z,pz:t.pz||s.pz}:s}};var le="standard",Le="basic",ps="lambert",xs="phong",ds="matcap",gs="toon",ke="normal",xe="bounds",Gt="model",Ue="flat",de="quad",ee="smooth",se="both",It="front",fe="back",Ht="double",vs=["nx","px","ny","py","nz","pz"],Fs=[[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],[[1,0,1],[1,1,1],[1,1,0],[1,0,0]],[[0,0,0],[0,0,1],[1,0,1],[1,0,0]],[[0,1,1],[0,1,0],[1,1,0],[1,1,1]],[[1,0,0],[1,1,0],[0,1,0],[0,0,0]],[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]],Vs=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],As=[{u:"z",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:0,vo:0},{u:"z",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:.75,vo:0},{u:"x",v:"z",order:[0,1,2,3],ud:1,vd:1,uo:.75,vo:.5},{u:"x",v:"z",order:[1,0,3,2],ud:1,vd:-1,uo:.25,vo:1},{u:"x",v:"y",order:[3,2,1,0],ud:-1,vd:1,uo:1,vo:0},{u:"x",v:"y",order:[0,1,2,3],ud:1,vd:1,uo:.25,vo:0}],ys=[[[0,0,1],[0,1,0]],[[0,0,1],[0,1,0]],[[1,0,0],[0,0,1]],[[1,0,0],[0,0,1]],[[1,0,0],[0,1,0]],[[1,0,0],[0,1,0]]];var Je=(S,t,s)=>Math.min(Math.max(S,t),s),rt=class{static fromHex(t){let s=new rt;return s._set(t),s.id="",s.exId=null,s.count=0,s}static fromRgb(t,s,e){t=Math.round(Je(t,0,1)*255),s=Math.round(Je(s,0,1)*255),e=Math.round(Je(e,0,1)*255);let r="#"+(t<16?"0":"")+t.toString(16)+(s<16?"0":"")+s.toString(16)+(e<16?"0":"")+e.toString(16);return rt.fromHex(r)}clone(){let t=new rt;return t._color=this._color,t.r=this.r,t.g=this.g,t.b=this.b,t._material=this._material,t}multiply(t){return t instanceof rt?rt.fromRgb(this.r*t.r,this.g*t.g,this.b*t.b):rt.fromRgb(this.r*t,this.g*t,this.b*t)}normalize(){let t=Math.sqrt(this.r*this.r+this.g*this.g+this.b*this.b);return this.multiply(1/t)}add(...t){let s=this.r+t.reduce((o,n)=>o+n.r,0),e=this.g+t.reduce((o,n)=>o+n.g,0),r=this.b+t.reduce((o,n)=>o+n.b,0);return rt.fromRgb(s,e,r)}_setMaterial(t){if(this._material!==void 0)throw new Error("A Color can only be added once.");this._material=t,this.count=0}get material(){return this._material}_set(t){let s=t;if((typeof s=="string"||s instanceof String)&&(s=s.trim().toUpperCase(),s.match(/^#([0-9a-fA-F]{3}|#?[0-9a-fA-F]{6})$/))){s=s.replace("#",""),this._color="#"+s,s.length===3&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]);let e=parseInt(s,16);this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255;return}throw new Error(`SyntaxError: Color ${t} is not a hexadecimal color of the form #000 or #000000.`)}toString(){return this._color}};var ge=class{constructor(t,s,e,r,o,n,i,a,c,f,l,h,m,u,v,p,A,F,g,V,x,_,N,d,M){switch(t=t||le,t){case le:case Le:case ps:case xs:case gs:case ds:case ke:break;default:throw new Error("SyntaxError: Unknown material type: "+t)}if(this.type=t,(m&&m.cube||u&&u.cube||v&&v.cube||p&&p.cube||A&&A.cube)&&!(x===-1&&_===-1))throw new Error("SyntaxError: Cube textures can not be combined with maptransform");if(g&&V)throw new Error("SyntaxError: One material can have a reflectionmap or a refractionmap, but not both");this.index=0,this.roughness=typeof s=="number"?s:1,this.metalness=typeof e=="number"?e:0,this.opacity=typeof r=="number"?r:1,this.alphaTest=typeof o=="number"?o:0,this.transparent=!!n,this.refractionRatio=typeof i=="number"?i:.9,this.wireframe=!!a,this.side=c||It,[It,fe,Ht].includes(this.side)||(this.side=It),this.setEmissive(f,l),this.fog=typeof h=="boolean"?h:!0,this.map=m,this.normalMap=u,this.roughnessMap=v,this.metalnessMap=p,this.emissiveMap=A,this.matcap=F,this.reflectionMap=g,this.refractionMap=V,this.mapTransform={uscale:x||-1,vscale:_||-1,uoffset:N||0,voffset:d||0,rotation:M||0},this.aoActive=!1,this._colors=[]}get baseId(){return this._baseId===void 0&&(this._baseId=`${this.type}|${this.roughness}|${this.metalness}|${this.opacity}|${this.alphaTest}|${this.transparent?1:0}|${this.refractionRatio}|${this.wireframe?1:0}|${this.side}|`+(this.emissive?`${this.emissive.color}|${this.emissive.intensity}|`:"||")+`${this.fog?1:0}|`+(this.map?`${this.map.id}|`:"|")+(this.normalMap?`${this.normalMap.id}|`:"|")+(this.roughnessMap?`${this.roughnessMap.id}|`:"|")+(this.metalnessMap?`${this.metalnessMap.id}|`:"|")+(this.emissiveMap?`${this.emissiveMap.id}|`:"|")+(this.matcap?`${this.matcap.id}|`:"|")+(this.reflectionMap?`${this.reflectionMap.id}|`:"|")+(this.refractionMap?`${this.refractionMap.id}|`:"|")+`${this.mapTransform.uscale}|${this.mapTransform.vscale}|${this.mapTransform.uoffset}|${this.mapTransform.voffset}|${this.mapTransform.rotation}`),this._baseId}get isTransparent(){return this.transparent||this.opacity<1}setEmissive(t,s){t===void 0||t==="#000"||t==="#000000"||!s?this._emissive=void 0:this._emissive={color:rt.fromHex(t),intensity:s}}get emissive(){return this._emissive}get colors(){return this._colors}get colorCount(){return this._colors.length}get colorUsageCount(){return this._colors.reduce((t,s)=>t+s.count,0)}};var re=class{get size(){return this.minX>this.maxX?{x:0,y:0,z:0}:{x:this.maxX-this.minX+1,y:this.maxY-this.minY+1,z:this.maxZ-this.minZ+1}}constructor(){this.reset()}reset(){this.minX=Number.POSITIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.minZ=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.maxZ=Number.NEGATIVE_INFINITY}set(t,s,e){this.minX=Math.min(this.minX,t),this.minY=Math.min(this.minY,s),this.minZ=Math.min(this.minZ,e),this.maxX=Math.max(this.maxX,t),this.maxY=Math.max(this.maxY,s),this.maxZ=Math.max(this.maxZ,e)}};var ve=class{constructor(t,s,e,r,o){this._baseMaterial=t,this.lighting=s,this.fade=!!e,this.simplify=r!==!1,this._deform=void 0,this._warp=void 0,this._scatter=void 0,this._flatten=J.parse(""),this._clamp=J.parse(""),this._skip=J.parse(""),this._ao=void 0,this.lights=!0,this._side=o,this._colors=[],this.bounds=new re}get baseId(){return this._baseMaterial.baseId}get index(){return this._baseMaterial.index}get colors(){return this._colors}get colorCount(){return this._baseMaterial.colorCount}get type(){return this._baseMaterial.type}get roughness(){return this._baseMaterial.roughness}get metalness(){return this._baseMaterial.metalness}get opacity(){return this._baseMaterial.opacity}get alphaTest(){return this._baseMaterial.alphaTest}get transparent(){return this._baseMaterial.transparent}get isTransparent(){return this._baseMaterial.isTransparent}get refractionRatio(){return this._baseMaterial.refractionRatio}get emissive(){return this._baseMaterial.emissive}get side(){return this._side}get fog(){return this._baseMaterial.fog}get map(){return this._baseMaterial.map}get normalMap(){return this._baseMaterial.normalMap}get roughnessMap(){return this._baseMaterial.roughnessMap}get metalnessMap(){return this._baseMaterial.metalnessMap}get emissiveMap(){return this._baseMaterial.emissiveMap}get matcap(){return this._baseMaterial.matcap}get reflectionMap(){return this._baseMaterial.reflectionMap}get refractionMap(){return this._baseMaterial.refractionMap}get mapTransform(){return this._baseMaterial.mapTransform}setDeform(t,s,e){t=Math.max(t==null?1:t,0),s=s==null?1:s,e=e==null?1:e,t>0&&s!==0?this._deform={count:t,strength:s,damping:e}:this._deform={count:0,strength:0,damping:0}}get deform(){return this._deform}setWarp(t,s){t=t===void 0?1:Math.abs(t),s=s===void 0?1:Math.abs(s),t>.001&&s>.001?this._warp={amplitude:t,frequency:s}:this._warp=void 0}get warp(){return this._warp}set scatter(t){t===0&&(t=void 0),this._scatter=Math.abs(t)}get scatter(){return this._scatter}set flatten(t){this._flatten=J.parse(t)}get flatten(){return J.toString(this._flatten)}set clamp(t){this._clamp=J.parse(t)}get clamp(){return J.toString(this._clamp)}set skip(t){this._skip=J.parse(t)}get skip(){return J.toString(this._skip)}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=J.parse(t)}get aoSides(){return J.toString(this._aoSides)}addColorHEX(t){return this.addColor(rt.fromHex(t))}addColorRGB(t,s,e){return this.addColor(rt.fromRgb(t,s,e))}addColor(t){if(!(t instanceof rt))throw new Error("addColor requires a Color object, e.g. material.addColor(Color.fromHex(\'#FFFFFF\'))");return t._setMaterial(this),this._colors.push(t),this._baseMaterial._colors.push(t),t}};var Fe=class{constructor(){this.baseMaterials=[],this.materials=[]}createMaterial(t,s,e,r,o,n,i,a,c,f,l,h,m,u,v,p,A,F,g,V,x,_,N,d,M,z,C,y){h=h||It,[It,fe,Ht].includes(h)||(h=It);let O=h===Ht?Ht:It,E=new ge(t,e,r,i,a,c,f,l,O,m,u,v,p,A,F,g,V,x,_,N,d,M,z,C,y),Z=E.baseId,B=this.baseMaterials.find(X=>X.baseId===Z);B?E=B:this.baseMaterials.push(E);let Y=new ve(E,s,o,n,h);return this.materials.push(Y),Y}clearMaterials(){this.materials.length=0}forEach(t,s,e){e?this.baseMaterials.foreach(t,s):this.materials.forEach(t,s)}find(t){return this.materials.find(t)}findColorByExId(t){let s=null;return this.forEach(function(e){s||(s=e.colors.find(r=>r.exId===t))},this),s}getMaterialListIndex(t){return this.materials.indexOf(t)}};function Ve(S,t,s,e){let r=s*S;for(let o=0;o<s;){let n=r&7,i=r>>3,a=s-o,c=8-n,f=a<c?a:c,l=~(255<<f),h=t&l;t>>=f;let m=~(l<<n);e[i]=e[i]&m|h<<n,r+=f,o+=f}}var je=class{constructor(t){this.view=t}get(t){return this.view[t>>3]>>(t&7)&1}set(t,s){return Ve(t,s,1,this.view)}clear(){this.view.fill(0)}},De=class{constructor(t){this.view=t}get(t){return this.view[t>>2]>>((t&3)<<1)&3}set(t,s){return Ve(t,s,2,this.view)}clear(){this.view.fill(0)}},ts=class{constructor(t){this.view=t}get(t){return this.view[t>>1]>>((t&1)<<2)&15}set(t,s){return Ve(t,s,4,this.view)}clear(){this.view.fill(0)}},es=class{constructor(t){this.view=t}get(t){return this.view[t]>>>0}set(t,s){return Ve(t,s,8,this.view)}clear(){this.view.fill(0)}},ss=class{constructor(t,s){this.view=t,this.bits=s}get(t){let{view:s,bits:e}=this,r=t*e,o=0;for(let n=0;n<e;){let i=r&7,a=r>>3,c=e-n,f=8-i,l=c<f?c:f,h=s[a],m=~(255<<l);o|=(h>>i&m)<<n,r+=l,n+=l}return o>>>0}set(t,s){Ve(t,s,this.bits,this.view)}clear(){this.view.fill(0)}},lt=class{static create(t,s,e,r=null){let o=r?new Uint8Array(t,e,r):new Uint8Array(t,e);switch(s){case 1:return new je(o);case 2:return new De(o);case 4:return new ts(o);case 8:return new es(o);default:return new ss(o)}}};var Es=0,Ms=0,rs=128,Ae=8,Ys=0,Zs=255,_s=Zs<<24>>>0,os={NONE:0,PAINT:1,KEEP:2},yt=1,oe=new Map,pt=S=>Math.floor(S%2===0?S/2-1:S/2),mt=S=>{let[t,s,e]=S,r=pt(t),o=pt(s),n=pt(e),i=t-r-1,a=s-o-1,c=e-n-1,f=-r,l=-o,h=-n;return[f,i,l,a,h,c]},ye=1,Cs=ye*4;function ns(S,t,s=null){let e=2**t-yt,r=Cs*e,o=S[0]*S[1]*S[2]*t,n=Math.floor(o/8)+1,i=Ae+r+n;s==null&&(typeof Buffer!="undefined"?s=Buffer.alloc(i).buffer:s=new ArrayBuffer(i));let a=new Uint8Array(s,0,Ae),c=r/Cs,f=new Uint32Array(s,Ae,c),l=lt.create(s,t,Ae+r);return a[0]=Es,[a[1],a[2],a[3]]=S,a[4]=t,[s,f,l]}var Vt=class{constructor(t=null,s=null,e=null,r=8,o=0,n=null,i=0,a=null){us(this,"createInverse",(t,s)=>{oe.clear();let e=t.size,[r,o,n,i,a,c]=mt(e),{size:f}=this,l=new Vt(f),[h,m,u,v,p,A]=mt(f);for(let F=h;F<=m;F+=1)for(let g=u;g<=v;g+=1)for(let V=p;V<=A;V+=1){if(this.getPaletteIndexAt(F,g,V)===0)continue;let _=F+s[0],N=g+s[1],d=V+s[2];if(_>o||_<r||N>i||N<n||d>c||d<a||!t.hasVoxelAt(_,N,d))l.setColorAt(F,g,V,_s);else{let M=t.getColorAt(_,N,d);l.setColorAt(F,g,V,M)}}return l});if(s&&e)this.size=[t[0],t[1],t[2]],this.bitsPerIndex=r,n=n||s.length,a=a||e.length,this.palette=new Uint32Array(s,o||0,n/4),this.indices=lt.create(e,r,i,a),this.xShift=pt(t[0]),this.yShift=pt(t[1]),this.zShift=pt(t[2]),this._rebuildRefCounts();else if(t){let[c,f,l]=ns(t,1);this.palette=f,this.indices=l,this._refCounts=new Array(this.palette.length).fill(0),this._recomputeSizeFieldsForBuffer(c)}}_recomputeSizeFieldsForBuffer(t){let s=new Uint8Array(t,0,Ae);this.size=[0,0,0],[,this.size[0],this.size[1],this.size[2],this.bitsPerIndex]=s,this.xShift=pt(this.size[0]),this.yShift=pt(this.size[1]),this.zShift=pt(this.size[2])}getPaletteIndexAt(t,s,e){let{indices:r}=this,o=this._getOffset(t,s,e);return r.get(o)}getPaletteIndexAtOffset(t){let{indices:s}=this;return s.get(t)}getColorAt(t,s,e){let r=this.getPaletteIndexAt(t,s,e);return this.colorForPaletteIndex(r)}hasVoxelAt(t,s,e){return this.getPaletteIndexAt(t,s,e)!==Ms}removeVoxelAt(t,s,e){return this.setPaletteIndexAt(t,s,e,Ms)}getTotalNonEmptyVoxels(){let t=0;for(let s=0;s<this._refCounts.length;s+=1)t+=this._refCounts[s];return t}getPaletteColor(t){return this.palette[(t-yt)*ye]}setPaletteColor(t,s){this.palette[(t-yt)*ye]=s}paletteHasReferences(t){return this._refCounts[t-yt]!==0}resetPaletteRefcountToOne(t){this._refCounts[t-yt]=1}incrementPaletteRefcount(t){this._refCounts[t-yt]+=1}decrementPaletteRefcount(t){this._refCounts[t-yt]-=1}static isNonEmptyPaletteIndex(t){return t!==0}setPaletteIndexAt(t,s,e,r){let o=this._getOffset(t,s,e);this.setPaletteIndexAtOffset(o,r)}setPaletteIndexAtOffset(t,s){let{indices:e}=this,r=this.getPaletteIndexAtOffset(t);Vt.isNonEmptyPaletteIndex(r)&&this.decrementPaletteRefcount(r),Vt.isNonEmptyPaletteIndex(s)&&this.incrementPaletteRefcount(s),e.set(t,s)}setEmptyAt(t,s,e){this.setPaletteIndexAt(t,s,e,0)}clear(){this.indices.clear(),this._refCounts.fill(0)}setColorAt(t,s,e,r){let o=this._getOffset(t,s,e);return this.setColorAtOffset(o,r)}setColorAtOffset(t,s){let{palette:e,indices:r}=this,o=this.getPaletteIndexAtOffset(t),n=Vt.isNonEmptyPaletteIndex(o);n&&this.decrementPaletteRefcount(o);for(let a=0;a<e.length;a+=1){let c=a+yt;if(this.getPaletteColor(c)===s)return this.incrementPaletteRefcount(c),r.set(t,c),c}if(n&&!this.paletteHasReferences(o))return this.setPaletteColor(o,s),this.resetPaletteRefcountToOne(o),o;let i=this._getFreePaletteIndex();return this.setPaletteColor(i,s),this.resetPaletteRefcountToOne(i),this.indices.set(t,i),i}colorForPaletteIndex(t){return this.palette[(t-yt)*ye]}filterByChunk(t,s,e,r,o){if(o===os.NONE)return;let n=t.size,[i,a,c,f,l,h]=mt(n),{size:m}=this,[u,v,p,A,F,g]=mt(m);for(let V=u;V<=v;V+=1)for(let x=p;x<=A;x+=1)for(let _=F;_<=g;_+=1){if(this.getPaletteIndexAt(V,x,_)===0)continue;let d=V+s,M=x+e,z=_+r,y=!(d>a||d<i||M>f||M<c||z>h||z<l)&&t.hasVoxelAt(d,M,z);(o===os.PAINT&&!y||o===os.KEEP&&y)&&this.setEmptyAt(V,x,_)}}_getFreePaletteIndex(){let{palette:t,size:s,indices:e,bitsPerIndex:r}=this;for(let c=0;c<t.length;c+=1){let f=c+yt;if(!this.paletteHasReferences(f))return f}let o=r*2,[n,i,a]=ns(s,o);for(let c=0;c<t.length*ye;c+=1)i[c]=t[c];for(;this._refCounts.length<i.length;)this._refCounts.push(0);for(let c=0,f=s[0]*s[1]*s[2];c<f;c+=1){let l=e.get(c);a.set(c,l)}return this.palette=i,this.indices=a,this._recomputeSizeFieldsForBuffer(n),this._getFreePaletteIndex()}resizeToFit(t,s,e){let{size:r}=this,o=Math.max(1,r[0],Math.abs(t)*2+1),n=Math.max(1,r[1],Math.abs(s)*2+1),i=Math.max(1,r[2],Math.abs(e)*2+1);this.resizeTo([o,n,i])}resizeTo(t){if(this.size[0]>=t[0]&&this.size[1]>=t[1]&&this.size[2]>=t[2])return;let s=new Vt(t),[e,r,o,n,i,a]=mt(this.size);for(let m=e;m<=r;m+=1)for(let u=o;u<=n;u+=1)for(let v=i;v<=a;v+=1)this.getPaletteIndexAt(m,u,v)!==0&&s.setColorAt(m,u,v,this.getColorAt(m,u,v));let{buffer:c}=s.palette;[this.size[0],this.size[1],this.size[2]]=t;let{bitsPerIndex:f}=s;this.bitsPerIndex=f;let[,l,h]=ns(t,f,c);this.palette=l,this.indices=h,this._refCounts=s._refCounts,this._recomputeSizeFieldsForBuffer(c)}static fromJSON(t){if(typeof t=="string")return Vt.deserialize(t);let{size:s,palette:e,indices:r}=t,o=new Vt(s);for(let n=0;n<e.length+yt;n+=1)for(let i=0;i<r.length;i+=1){let a=r[i];if(a===n)if(a>=yt){let c=e[a-yt];o.setColorAtOffset(i,c)}else a===n&&o.setPaletteIndexAtOffset(i,a)}return o}toJSON(t,s){if(!s)return this.serialize();let e=[],r=[];for(let o=0;o<this.palette.length;o+=1){let n=o+yt,i=this.getPaletteColor(n);i>0&&e.push(i)}for(let o=0,n=this.size[0]*this.size[1]*this.size[2];o<n;o+=1)r.push(this.indices.get(o));return{size:[...this.size],palette:e,indices:r}}clone(){return new Vt(this.size,this.palette.buffer.slice(0),this.indices.view.buffer.slice(0),this.bitsPerIndex,this.palette.byteOffset,this.palette.byteLength,this.indices.view.byteOffset,this.indices.view.byteLength)}_getOffset(t,s,e){let{size:r,xShift:o,yShift:n,zShift:i}=this;return(t+o)*r[1]*r[2]+(s+n)*r[2]+(e+i)}_rebuildRefCounts(){this._refCounts=new Array(this.palette.length).fill(0);for(let t=0,s=this.size[0]*this.size[1]*this.size[2];t<s;t+=1){let e=this.getPaletteIndexAtOffset(t);Vt.isNonEmptyPaletteIndex(e)&&this.incrementPaletteRefcount(e)}}applyToChunk(t,s=0,e=0,r=0){oe.clear();let o=t.size,[n,i,a,c,f,l]=mt(o),{size:h}=this,[m,u,v,p,A,F]=mt(h);for(let g=m;g<=u;g+=1)for(let V=v;V<=p;V+=1)for(let x=A;x<=F;x+=1){let _=this.getPaletteIndexAt(g,V,x);if(_!==0){let N=g+s,d=V+e,M=x+r,z=o[0],C=o[1],y=o[2];if(N>i&&(z=N*2),N<n&&(z=Math.max(z,-N*2+1)),d>c&&(C=d*2),d<a&&(C=Math.max(C,-d*2+1)),M>l&&(y=M*2),M<f&&(y=Math.max(y,-M*2+1)),z>rs||C>rs||y>rs)continue;(o[0]<z||o[1]<C||o[2]<y)&&(t.resizeTo([z,C,y]),o=t.size,[n,i,a,c,f,l]=mt(o),oe.clear());let O=oe.get(_);if(O===void 0){let E=this.getColorAt(g,V,x);if(E===_s)t.setEmptyAt(N,d,M);else{let Z=t.setColorAt(N,d,M,E);oe.set(_,Z)}}else t.getPaletteIndexAt(N,d,M)!==O&&t.setPaletteIndexAt(N,d,M,O)}}}mergeWith(t,s,e,r=!1){oe.clear();let o=oe,n=e[0]-s[0],i=e[1]-s[1],a=e[2]-s[2],c=t.size,[f,l,h,m,u,v]=mt(c),{size:p}=this,[A,F,g,V,x,_]=mt(p);for(let N=A;N<=F;N+=1)for(let d=g;d<=V;d+=1)for(let M=x;M<=_;M+=1){let z=this.getPaletteIndexAt(N,d,M);if(z===0)continue;let C=N+n,y=d+i,O=M+a;if(!!(!(C>l||C<f||y>m||y<h||O>v||O<u)&&t.hasVoxelAt(C,y,O)))if(o.has(z))this.setPaletteIndexAt(N,d,M,o.get(z));else{(r||t.getColorAt(C,y,O)>this.getColorAt(N,d,M))&&this.removeVoxelAt(N,d,M);let B=this.getPaletteIndexAt(N,d,M);o.set(z,B)}}}};function Is(S,t,s,e=Ys){return(S|t<<8|s<<16|e<<24)>>>0}function Ns(){let S=[];for(let r=0;r<256;r++)S[r]=Math.floor(Math.random()*256),S[r+256]=S[r];function t(r){return r*r*r*(r*(r*6-15)+10)}function s(r,o,n){return o+r*(n-o)}function e(r,o,n,i){let a=r&15,c=a<8?o:n,f=a<4?n:a===12||a===14?o:i;return((a&1)===0?c:-c)+((a&2)===0?f:-f)}return{noise:function(r,o,n){let i=Math.floor(r),a=Math.floor(o),c=Math.floor(n),f=i&255,l=a&255,h=c&255;r-=i,o-=a,n-=c;let m=r-1,u=o-1,v=n-1,p=t(r),A=t(o),F=t(n),g=S[f]+l,V=S[g]+h,x=S[g+1]+h,_=S[f+1]+l,N=S[_]+h,d=S[_+1]+h;return s(F,s(A,s(p,e(S[V],r,o,n),e(S[N],m,o,n)),s(p,e(S[x],r,u,n),e(S[d],m,u,n))),s(A,s(p,e(S[V+1],r,o,v),e(S[N+1],m,o,n-1)),s(p,e(S[x+1],r,u,v),e(S[d+1],m,u,v))))}}}var Jt=class{static changeShape(t,s,e){let{faceEquidistant:r}=s;switch(e){case"sphere":this._circularDeform(t,s,1,1,1);break;case"cylinder-x":this._circularDeform(t,s,0,1,1);break;case"cylinder-y":this._circularDeform(t,s,1,0,1);break;case"cylinder-z":this._circularDeform(t,s,1,1,0);break;default:for(let o=0,n=t.faceCount;o<n;o++)r.set(o,0);break}}static _circularDeform(t,s,e,r,o){let[n,i,a,c,f,l]=mt(t.voxChunk.size),h=(n+i)/2+.5,m=(a+c)/2+.5,u=(f+l)/2+.5,{vertX:v,vertY:p,vertZ:A,vertRing:F}=s;for(let g=0,V=t.vertCount;g<V;g++){let x=v[g],_=p[g],N=A[g],d=x-h,M=_-m,z=N-u,C=Math.max(Math.abs(d*e),Math.abs(M*r),Math.abs(z*o)),y=Math.sqrt(d*d*e+M*M*r+z*z*o);if(y===0)continue;let O=C/y;v[g]=d*(1-e+e*O)+h,p[g]=M*(1-r+r*O)+m,A[g]=z*(1-o+o*O)+u,F[g]=C}this._markEquidistantFaces(t,s)}static _markEquidistantFaces(t,s){let{faceVertIndices:e,vertRing:r,faceEquidistant:o}=s;for(let n=0,i=t.faceCount;n<i;n++){let a=n*4,c=a+1,f=a+2,l=a+3;o.set(n,r[e[a]]===r[e[c]]&&r[e[a]]===r[e[f]]&&r[e[a]]===r[e[l]]?1:0)}}static maximumDeformCount(t){let s=0;return t.materials.forEach(function(e){e.deform&&(s=Math.max(s,e.deform.count))}),s}static deform(t,s,e){let{vertLinkIndices:r,vertLinkCounts:o,vertDeformCount:n,vertDeformDamping:i,vertDeformStrength:a,vertFlattenedX:c,vertFlattenedY:f,vertFlattenedZ:l,vertClampedX:h,vertClampedY:m,vertClampedZ:u,vertX:v,vertY:p,vertZ:A,vertTmpX:F,vertTmpY:g,vertTmpZ:V,vertHasTmp:x}=s;for(let _=0;_<e;_++){let N=!1;for(let d=0,M=t.vertCount;d<M;d++){if(n[d]<=_)continue;let C=o[d];if(C===0)continue;N=!0;let y=v[d],O=p[d],E=A[d],Z=i[d],B=a[d],Y=1-(h.get(d)|c.get(d)),X=1-(m.get(d)|f.get(d)),R=1-(u.get(d)|l.get(d)),U=0,L=0,q=0;for(let I=0;I<C;I++){let P=r[d*6+I];U+=v[P],L+=p[P],q+=A[P]}let b=Math.pow(Z,_)*B,$=U/C-y,w=L/C-O,G=q/C-E;F[d]=y+Y*$*b,g[d]=O+X*w*b,V[d]=E+R*G*b,x.set(d,Y|X|R)}if(N){for(let d=0,M=t.vertCount;d<M;d++)x.get(d)!==0&&(v[d]=F[d],p[d]=g[d],A[d]=V[d]);x.clear()}}}static warpAndScatter(t,s){let e=Ns().noise,{nx:r,px:o,ny:n,py:i,nz:a,pz:c}=t._tile,[f,l,h,m,u,v]=mt(t.voxChunk.size),{vertX:p,vertY:A,vertZ:F,vertWarpAmplitude:g,vertWarpFrequency:V,vertScatter:x,vertFlattenedX:_,vertFlattenedY:N,vertFlattenedZ:d,vertClampedX:M,vertClampedY:z,vertClampedZ:C}=s;f+=.1,h+=.1,u+=.1,l+=.9,m+=.9,v+=.9;for(let y=0,O=t.vertCount;y<O;y++){let E=p[y],Z=A[y],B=F[y];if(r&&E<f||o&&E>l||n&&Z<h||i&&Z>m||a&&B<u||c&&B>v)continue;let Y=g[y],X=V[y],R=x[y],U=Y>0,L=R>0;if(U||L){let q=0,b=0,$=0;U&&(q=e((E+.19)*X,Z*X,B*X)*Y,b=e((Z+.17)*X,B*X,E*X)*Y,$=e((B+.13)*X,E*X,Z*X)*Y),L&&(q+=(Math.random()*2-1)*R,b+=(Math.random()*2-1)*R,$+=(Math.random()*2-1)*R);let w=1-(M.get(y)|_.get(y)),G=1-(z.get(y)|N.get(y)),I=1-(C.get(y)|d.get(y));p[y]=E+w*q,A[y]=Z+G*b,F[y]=B+I*$}}}};var he=class{static linkVertices(t,s,e){let{faceClamped:r,vertNrOfClampedLinks:o,faceVertIndices:n,vertLinkIndices:i,vertLinkCounts:a}=s;if(r.get(e)===1)for(let f=0;f<4;f++){let l=n[e*4+f],h=!1;for(let m=0,u=a[l];m<u;m++)if(i[l*6+m]===l){h=!0;break}h||(i[l*6+a[l]]=l,a[l]++,o[l]++)}else for(let f=0;f<4;f++){let l=n[e*4+f],h=n[e*4+(f+1)%4],m=!1;for(let v=0,p=a[l];v<p;v++)if(i[l*6+v]===h){m=!0;break}m||(i[l*6+a[l]]=h,a[l]++);let u=!1;for(let v=0,p=a[h];v<p;v++)if(i[h*6+v]===l){u=!0;break}u||(i[h*6+a[h]]=l,a[h]++)}}static fixClampedLinks(t,s){let{faceVertIndices:e,vertNrOfClampedLinks:r,vertFullyClamped:o,vertLinkCounts:n,vertLinkIndices:i}=s;for(let a=0,c=t.vertCount;a<c;a++){let f=r[a],l=n[a];f===l&&(o.set(a,1),n[a]=0)}for(let a=0,c=t.faceCount;a<c;a++)for(let f=0;f<4;f++){let l=e[a*4+f],h=e[a*4+(f+1)%4];if(o.get(l)===1){let m=!1;for(let u=0,v=n[l];u<v;u++)if(i[l*6+u]===h){m=!0;break}m||(i[l*6+n[l]]=h,n[l]++)}if(o.get(h)===1){let m=!1;for(let u=0,v=n[h];u<v;u++)if(i[h*6+u]===l){m=!0;break}m||(i[h*6+n[h]]=l,n[h]++)}}}};var Me=class{static calculateNormals(t,s){let e=t.tile,{faceNameIndices:r,faceEquidistant:o,faceSmooth:n,faceFlattened:i,faceClamped:a,vertX:c,vertY:f,vertZ:l,faceVertFlatNormalX:h,faceVertFlatNormalY:m,faceVertFlatNormalZ:u,faceVertSmoothNormalX:v,faceVertSmoothNormalY:p,faceVertSmoothNormalZ:A,faceVertBothNormalX:F,faceVertBothNormalY:g,faceVertBothNormalZ:V,faceVertNormalX:x,faceVertNormalY:_,faceVertNormalZ:N,faceMaterials:d,faceVertIndices:M,vertSmoothNormalX:z,vertSmoothNormalY:C,vertSmoothNormalZ:y,vertBothNormalX:O,vertBothNormalY:E,vertBothNormalZ:Z}=s,[B,Y,X,R,U,L]=mt(t.voxChunk.size);for(let b=0,$=t.faceCount;b<$;b++){let w=b*4;for(let G=0;G<4;G++){let I=M[w+G];z[I]=0,C[I]=0,y[I]=0,O[I]=0,E[I]=0,Z[I]=0}}for(let b=0,$=t.faceCount;b<$;b++){let w=r[b],G=o.get(b),I=i.get(b),P=a.get(b),K=G|1-(I|P);n.set(b,K);let H=M[b*4],j=M[b*4+1],tt=M[b*4+2],T=M[b*4+3],ot=(c[H]+c[j]+c[tt]+c[T])/4,nt=(f[H]+f[j]+f[tt]+f[T])/4,dt=(l[H]+l[j]+l[tt]+l[T])/4;for(let ft=0;ft<4;ft++){let et=M[b*4+ft],xt=M[b*4+(ft+3)%4],ut=c[et],wt=c[xt],gt=f[et],zt=f[xt],Yt=l[et],Kt=l[xt],Pt=z[et],jt=C[et],Dt=y[et],Rt=O[et],Lt=E[et],te=Z[et],Zt=wt-ut,Tt=zt-gt,vt=Kt-Yt,at=ot-ut,it=nt-gt,ct=dt-Yt,Ft=Math.sqrt(Zt*Zt+Tt*Tt+vt*vt),Bt=Math.sqrt(at*at+it*it+ct*ct);Ft=Ft===0?1:Ft,Bt=Bt===0?1:Bt;let kt=1/Ft;Zt*=kt,Tt*=kt,vt*=kt;let Ut=1/Bt;at*=Ut,it*=Ut,ct*=Ut;let At=Tt*ct-vt*it,Xt=vt*at-Zt*ct,bt=Zt*it-Tt*at,ne=B+.1,ae=Y+.9,Mt=X+.1,St=R+.9,_t=U+.1,Ot=L+.9;e&&((e.nx&&w===0||e.px&&w===1)&&(gt<Mt||gt>St||Yt<_t||Yt>Ot)&&(Xt=0,bt=0),(e.ny&&w===2||e.py&&w===3)&&(ut<ne||ut>ae||Yt<_t||Yt>Ot)&&(At=0,bt=0),(e.nz&&w===4||e.pz&&w===5)&&(ut<ne||ut>ae||gt<Mt||gt>St)&&(At=0,Xt=0));let Ct=Math.sqrt(At*At+Xt*Xt+bt*bt);Ct=Ct===0?1:Ct;let k=1/Ct;At*=k,Xt*=k,bt*=k,h[b*4+ft]=At,m[b*4+ft]=Xt,u[b*4+ft]=bt;let Q=Zt*at+Tt*it+vt*ct,W=Math.acos(Q);Pt+=At*W,jt+=Xt*W,Dt+=bt*W,Rt+=K*(At*W),Lt+=K*(Xt*W),te+=K*(bt*W),z[et]=Pt,C[et]=jt,y[et]=Dt,O[et]=Rt,E[et]=Lt,Z[et]=te}}for(let b=0,$=t.vertCount;b<$;b++){let w=z[b],G=C[b],I=y[b],P=O[b],K=E[b],H=Z[b],j=Math.sqrt(w*w+G*G+I*I),tt=Math.sqrt(P*P+K*K+H*H);j!==0&&(z[b]=w/j,C[b]=G/j,y[b]=I/j),tt!==0&&(O[b]=P/tt,E[b]=K/tt,Z[b]=H/tt)}let q=t.materials.materials;for(let b=0,$=t.faceCount;b<$;b++){let w=n.get(b)===1,G=q[d[b]];for(let I=0;I<4;I++){let P=b*4+I,K=M[b*4+I];switch(v[P]=z[K],p[P]=C[K],A[P]=y[K],F[P]=!w||O[K]===0?h[P]:O[K],g[P]=!w||E[K]===0?m[P]:E[K],V[P]=!w||Z[K]===0?u[P]:Z[K],G.lighting){case ee:x[P]=v[P],_[P]=p[P],N[P]=A[P];break;case se:x[P]=F[P],_[P]=g[P],N[P]=V[P];break;default:x[P]=h[P],_[P]=m[P],N[P]=u[P];break}}}}};var D=class{constructor(){let t=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.m=new Float32Array(t)}transformPoint(t){let s=this.m,e=s[12]*t.x+s[13]*t.y+s[14]*t.z+s[15],r=(s[0]*t.x+s[1]*t.y+s[2]*t.z+s[3])/e,o=(s[4]*t.x+s[5]*t.y+s[6]*t.z+s[7])/e,n=(s[8]*t.x+s[9]*t.y+s[10]*t.z+s[11])/e;t.x=r,t.y=o,t.z=n}transformPointInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[12]*o+a[13]*n+a[14]*i+a[15],f=(a[0]*o+a[1]*n+a[2]*i+a[3])/c,l=(a[4]*o+a[5]*n+a[6]*i+a[7])/c,h=(a[8]*o+a[9]*n+a[10]*i+a[11])/c;t[r]=f,s[r]=l,e[r]=h}transformVector(t){let s=this.m,e=s[0]*t.x+s[1]*t.y+s[2]*t.z,r=s[4]*t.x+s[5]*t.y+s[6]*t.z,o=s[8]*t.x+s[9]*t.y+s[10]*t.z;t.x=e,t.y=r,t.z=o}transformVectorInline(t,s,e,r){let o=t[r],n=s[r],i=e[r],a=this.m,c=a[0]*o+a[1]*n+a[2]*i,f=a[4]*o+a[5]*n+a[6]*i,l=a[8]*o+a[9]*n+a[10]*i;t[r]=c,s[r]=f,e[r]=l}static identity(t){t=t||new D;let s=t.m;return s[0]=s[5]=s[10]=s[15]=1,s[1]=s[2]=s[3]=s[4]=s[6]=s[7]=s[8]=s[9]=s[11]=s[12]=s[13]=s[14]=0,t}static multiply(t,s,e){e=e||new D;let r=t.m,o=s.m,n=e.m;return n[0]=r[0]*o[0]+r[1]*o[4]+r[2]*o[8]+r[3]*o[12],n[1]=r[0]*o[1]+r[1]*o[5]+r[2]*o[9]+r[3]*o[13],n[2]=r[0]*o[2]+r[1]*o[6]+r[2]*o[10]+r[3]*o[14],n[3]=r[0]*o[3]+r[1]*o[7]+r[2]*o[11]+r[3]*o[15],n[4]=r[4]*o[0]+r[5]*o[4]+r[6]*o[8]+r[7]*o[12],n[5]=r[4]*o[1]+r[5]*o[5]+r[6]*o[9]+r[7]*o[13],n[6]=r[4]*o[2]+r[5]*o[6]+r[6]*o[10]+r[7]*o[14],n[7]=r[4]*o[3]+r[5]*o[7]+r[6]*o[11]+r[7]*o[15],n[8]=r[8]*o[0]+r[9]*o[4]+r[10]*o[8]+r[11]*o[12],n[9]=r[8]*o[1]+r[9]*o[5]+r[10]*o[9]+r[11]*o[13],n[10]=r[8]*o[2]+r[9]*o[6]+r[10]*o[10]+r[11]*o[14],n[11]=r[8]*o[3]+r[9]*o[7]+r[10]*o[11]+r[11]*o[15],n[12]=r[12]*o[0]+r[13]*o[4]+r[14]*o[8]+r[15]*o[12],n[13]=r[12]*o[1]+r[13]*o[5]+r[14]*o[9]+r[15]*o[13],n[14]=r[12]*o[2]+r[13]*o[6]+r[14]*o[10]+r[15]*o[14],n[15]=r[12]*o[3]+r[13]*o[7]+r[14]*o[11]+r[15]*o[15],e}static transpose(t,s){s=s||new D;let e=t.m,r=s.m;return r[0]=e[0],r[1]=e[4],r[2]=e[8],r[3]=e[12],r[4]=e[1],r[5]=e[5],r[6]=e[9],r[7]=e[13],r[8]=e[2],r[9]=e[6],r[10]=e[10],r[11]=e[14],r[12]=e[3],r[13]=e[7],r[14]=e[11],r[15]=e[15],s}static inverse(t,s){s=s||new D;let e=t.m,r=s.m;r[0]=e[5]*e[10]*e[15]-e[5]*e[14]*e[11]-e[6]*e[9]*e[15]+e[6]*e[13]*e[11]+e[7]*e[9]*e[14]-e[7]*e[13]*e[10],r[1]=-e[1]*e[10]*e[15]+e[1]*e[14]*e[11]+e[2]*e[9]*e[15]-e[2]*e[13]*e[11]-e[3]*e[9]*e[14]+e[3]*e[13]*e[10],r[2]=e[1]*e[6]*e[15]-e[1]*e[14]*e[7]-e[2]*e[5]*e[15]+e[2]*e[13]*e[7]+e[3]*e[5]*e[14]-e[3]*e[13]*e[6],r[3]=-e[1]*e[6]*e[11]+e[1]*e[10]*e[7]+e[2]*e[5]*e[11]-e[2]*e[9]*e[7]-e[3]*e[5]*e[10]+e[3]*e[9]*e[6],r[4]=-e[4]*e[10]*e[15]+e[4]*e[14]*e[11]+e[6]*e[8]*e[15]-e[6]*e[12]*e[11]-e[7]*e[8]*e[14]+e[7]*e[12]*e[10],r[5]=e[0]*e[10]*e[15]-e[0]*e[14]*e[11]-e[2]*e[8]*e[15]+e[2]*e[12]*e[11]+e[3]*e[8]*e[14]-e[3]*e[12]*e[10],r[6]=-e[0]*e[6]*e[15]+e[0]*e[14]*e[7]+e[2]*e[4]*e[15]-e[2]*e[12]*e[7]-e[3]*e[4]*e[14]+e[3]*e[12]*e[6],r[7]=e[0]*e[6]*e[11]-e[0]*e[10]*e[7]-e[2]*e[4]*e[11]+e[2]*e[8]*e[7]+e[3]*e[4]*e[10]-e[3]*e[8]*e[6],r[8]=e[4]*e[9]*e[15]-e[4]*e[13]*e[11]-e[5]*e[8]*e[15]+e[5]*e[12]*e[11]+e[7]*e[8]*e[13]-e[7]*e[12]*e[9],r[9]=-e[0]*e[9]*e[15]+e[0]*e[13]*e[11]+e[1]*e[8]*e[15]-e[1]*e[12]*e[11]-e[3]*e[8]*e[13]+e[3]*e[12]*e[9],r[10]=e[0]*e[5]*e[15]-e[0]*e[13]*e[7]-e[1]*e[4]*e[15]+e[1]*e[12]*e[7]+e[3]*e[4]*e[13]-e[3]*e[12]*e[5],r[11]=-e[0]*e[5]*e[11]+e[0]*e[9]*e[7]+e[1]*e[4]*e[11]-e[1]*e[8]*e[7]-e[3]*e[4]*e[9]+e[3]*e[8]*e[5],r[12]=-e[4]*e[9]*e[14]+e[4]*e[13]*e[10]+e[5]*e[8]*e[14]-e[5]*e[12]*e[10]-e[6]*e[8]*e[13]+e[6]*e[12]*e[9],r[13]=e[0]*e[9]*e[14]-e[0]*e[13]*e[10]-e[1]*e[8]*e[14]+e[1]*e[12]*e[10]+e[2]*e[8]*e[13]-e[2]*e[12]*e[9],r[14]=-e[0]*e[5]*e[14]+e[0]*e[13]*e[6]+e[1]*e[4]*e[14]-e[1]*e[12]*e[6]-e[2]*e[4]*e[13]+e[2]*e[12]*e[5],r[15]=e[0]*e[5]*e[10]-e[0]*e[9]*e[6]-e[1]*e[4]*e[10]+e[1]*e[8]*e[6]+e[2]*e[4]*e[9]-e[2]*e[8]*e[5];let o=e[0]*r[0]+e[1]*r[4]+e[2]*r[8]+e[3]*r[12];for(let n=0;n<16;n++)r[n]/=o;return s}static scale(t,s,e,r){r=r||new D;let o=r.m;return o[0]=t,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static translate(t,s,e,r){r=r||new D;let o=r.m;return o[0]=1,o[1]=0,o[2]=0,o[3]=t,o[4]=0,o[5]=1,o[6]=0,o[7]=s,o[8]=0,o[9]=0,o[10]=1,o[11]=e,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static rotate(t,s,e,r,o){if(!t||!s&&!e&&!r)return D.identity(o);o=o||new D;let n=o.m,i=Math.sqrt(s*s+e*e+r*r);t*=Math.PI/180,s/=i,e/=i,r/=i;let a=Math.cos(t),c=Math.sin(t),f=1-a;return n[0]=s*s*f+a,n[1]=s*e*f-r*c,n[2]=s*r*f+e*c,n[3]=0,n[4]=e*s*f+r*c,n[5]=e*e*f+a,n[6]=e*r*f-s*c,n[7]=0,n[8]=r*s*f-e*c,n[9]=r*e*f+s*c,n[10]=r*r*f+a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,o}static lookAtORIGINAL(t,s,e,r,o,n,i,a,c,f){f=f||new D;let l=f.m,h=t-r,m=s-o,u=e-n,v=Math.sqrt(h*h+m*m+u*u);h/=v,m/=v,u/=v;let p=a*u-c*m,A=c*h-i*u,F=i*m-a*h;v=Math.sqrt(p*p+A*A+F*F),p/=v,A/=v,F/=v;let g=m*F-u*A,V=u*p-h*F,x=h*A-m*p;return v=Math.sqrt(g*g+V*V+x*x),g/=v,V/=v,x/=v,l[0]=p,l[1]=A,l[2]=F,l[3]=-(p*t+A*s+F*e),l[4]=g,l[5]=V,l[6]=x,l[7]=-(g*t+V*s+x*e),l[8]=h,l[9]=m,l[10]=u,l[11]=-(h*t+m*s+u*e),l[12]=0,l[13]=0,l[14]=0,l[15]=1,f}static lookAtTRYOUT(t,s,e,r){r=r||new D;let o=r.m,n=Math.sqrt(t*t+e*e);return o[0]=e/n,o[1]=0,o[2]=-t/n,o[3]=0,o[4]=t*s/n,o[5]=-n,o[6]=e*s/n,o[7]=0,o[8]=t,o[9]=s,o[10]=e,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}static lookAt(t,s,e,r){r=r||new D;let o=r.m,n=Math.sqrt(t*t+e*e),i=n?t/n:1,a=n?e/n:0;return o[0]=t,o[1]=-a,o[2]=-e*i,o[3]=0,o[4]=s,o[5]=0,o[6]=n,o[7]=0,o[8]=e,o[9]=i,o[10]=-e*a,o[11]=0,o[12]=0,o[13]=0,o[14]=0,o[15]=1,r}};var me=[null,null,null,null],_e=[null,null,null,null],Ce=[null,null,null,null],Ie=class{static transformVertices(t,s){let{vertX:e,vertY:r,vertZ:o,faceVertNormalX:n,faceVertFlatNormalX:i,faceVertNormalY:a,faceVertFlatNormalY:c,faceVertNormalZ:f,faceVertFlatNormalZ:l,faceVertSmoothNormalX:h,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:v,faceVertBothNormalY:p,faceVertBothNormalZ:A}=s,F=t.determineBoundsOffsetAndRescale(t.resize,s),g=new D;g=D.multiply(g,D.translate(t.position.x,t.position.y,t.position.z)),g=D.multiply(g,D.rotate(t.rotation.z,0,0,1)),g=D.multiply(g,D.rotate(t.rotation.y,0,1,0)),g=D.multiply(g,D.rotate(t.rotation.x,1,0,0)),g=D.multiply(g,D.scale(t.scale.x,t.scale.y,t.scale.z)),g=D.multiply(g,D.scale(F.rescale,F.rescale,F.rescale)),g=D.multiply(g,D.translate(F.offset.x,F.offset.y,F.offset.z));let V=D.inverse(g);V=D.transpose(V);for(let x=0,_=t.vertCount;x<_;x++)g.transformPointInline(e,r,o,x);me[0]=n,_e[0]=a,Ce[0]=f,me[1]=i,_e[1]=c,Ce[1]=l,me[2]=h,_e[2]=m,Ce[2]=u,me[3]=v,_e[3]=p,Ce[3]=A;for(let x=0,_=t.faceCount;x<_;x++){let N=x*4;for(let d=0;d<4;d++)for(let M=0,z=me.length;M<z;M++){let C=me[M],y=_e[M],O=Ce[M],E=N+d;V.transformVectorInline(C,y,O,E);let Z=C[E],B=y[E],Y=O[E],X=Math.sqrt(Z*Z+B*B+Y*Y);if(X>0){let R=1/X;C[E]=Z*R,y[E]=B*R,O[E]=Y*R}}}}};var Ne=class{static calculateLights(t,s){let e=t.lights;if(e.length===0)return;for(let p of e)if(p.direction&&!p.normalizedDirection){let A=Math.sqrt(p.direction.x*p.direction.x+p.direction.y*p.direction.y+p.direction.z*p.direction.z);if(p.normalizedDirection={x:p.direction.x,y:p.direction.y,z:p.direction.z},A>0){let F=1/A;p.normalizedDirection.x*=F}}let r=t.materials.materials,{faceMaterials:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,faceVertIndices:c,vertX:f,vertY:l,vertZ:h,faceVertLightR:m,faceVertLightG:u,faceVertLightB:v}=s;for(let p=0,A=t.faceCount;p<A;p++){let F=r[o[p]],g=p*4;if(F.lights)for(let V=0;V<4;V++){let x=g+V,_=c[x],N=f[_],d=l[_],M=h[_],z=n[x],C=i[x],y=a[x];m[x]=0,u[x]=0,v[x]=0;for(let O of e){let{color:E,strength:Z,distance:B,normalizedDirection:Y,position:X}=O,R=Z,U=0;if(X){let L=X.x-N,q=X.y-d,b=X.z-M;U=Math.sqrt(L*L+q*q+b*b);let $=1/U;R=Z*Math.max(z*L*$+C*q*$+y*b*$,0)}else Y&&(R=Z*Math.max(z*Y.x+C*Y.y+y*Y.z,0));X&&B&&(R=R*(1-Math.min(U/B,1))),m[x]+=E.r*R,u[x]+=E.g*R,v[x]+=E.b*R}}else for(let V=0;V<4;V++){let x=g+V;m[x]=1,u[x]=1,v[x]=1}}}};var ws=[],as=new Map,is=()=>ws.pop()||{minx:Number.MAX_VALUE,miny:Number.MAX_VALUE,minz:Number.MAX_VALUE,maxx:-Number.MAX_VALUE,maxy:-Number.MAX_VALUE,maxz:-Number.MAX_VALUE,partitions:Array(8).fill(null),triangles:[]},zs=S=>{for(let t of S.partitions)t&&zs(t);S.minx=Number.MAX_VALUE,S.miny=Number.MAX_VALUE,S.minz=Number.MAX_VALUE,S.maxx=-Number.MAX_VALUE,S.maxy=-Number.MAX_VALUE,S.maxz=-Number.MAX_VALUE,S.partitions.fill(null),S.triangles.length=0,ws.push(S)},we=class{static calculateAmbientOcclusion(t,s){if(!(t.ao||t.materials.find(function(_){return _.ao})))return;let{faceMaterials:r,faceVertIndices:o,faceVertAO:n,vertX:i,vertY:a,vertZ:c,faceVertNormalX:f,faceVertNormalY:l,faceVertNormalZ:h}=s,{faceCount:m}=t,u=t.materials.materials,v=this._getAllFaceTriangles(t,s),p=this._trianglesToOctree(v,t,s);t._aoSides&&(p=this._aoSidesToOctree(t,s,p));let A=t.aoSamples,F=this._generateFibonacciSamples(A);as.clear();let g=t.scale.x,V=t.scale.y,x=t.scale.z;for(let _=0;_<m;_++){let N=u[r[_]],d=N.ao||t.ao,M=_*4;if(n[M]=0,n[M+1]=0,n[M+2]=0,n[M+3]=0,!d||d.maxDistance===0||d.strength===0||d.angle<1||N.opacity===0)continue;let z=d.maxDistance*Math.max(g,V,x),C=d.strength,y=Math.cos(d.angle/180*Math.PI);for(let O=0;O<4;O++){let E=M+O,Z=o[E],B=i[Z],Y=a[Z],X=c[Z],R=f[E],U=l[E],L=h[E],q=B*16384+Y*128+X,b=R*1e7+U*1e5+L*1e3,$=q*1e9+b,w=as.get($);if(w!==void 0){n[E]=w;continue}let G=o[M+(O+2)%4],I=i[G],P=a[G],K=c[G],H=B*.99999+I*1e-5+R*1e-5,j=Y*.99999+P*1e-5+U*1e-5,tt=X*.99999+K*1e-5+L*1e-5,T=0,ot=0;for(let[dt,ft,et]of F){if(dt*R+ft*U+et*L<=y)continue;let ut=H+dt*z,wt=j+ft*z,gt=tt+et*z,zt=this._distanceToOctree(t,s,p,H,j,tt,dt,ft,et,z,ut,wt,gt);zt?zt=zt/z:zt=1,T+=zt,ot++}let nt=0;ot!==0&&(T=Math.max(Math.min(T/ot,1),0),nt=1-Math.pow(T,C)),n[E]=nt,as.set($,nt)}}zs(p)}static _getAllFaceTriangles(t,s){let{faceMaterials:e}=s,{faceCount:r}=t,o=[],n=t.materials.materials;for(let i=0;i<r;i++){if(n[e[i]].opacity<.75)continue;let c=i*2;o.push(c),o.push(c+1)}return o}static _trianglesToOctree(t,s,e){let{faceVertIndices:r,vertX:o,vertY:n,vertZ:i}=e,a=t.length;if(a<=32){let c=is();c.triangles=t;for(let f=0;f<a;f++){let l=t[f],m=(l>>1)*4,u,v,p;(l&1)===0?(u=r[m+2],v=r[m+1],p=r[m+0]):(u=r[m+0],v=r[m+3],p=r[m+2]);let A=o[u],F=n[u],g=i[u],V=o[v],x=n[v],_=i[v],N=o[p],d=n[p],M=i[p];c.minx=Math.min(c.minx,A,V,N),c.miny=Math.min(c.miny,F,x,d),c.minz=Math.min(c.minz,g,_,M),c.maxx=Math.max(c.maxx,A,V,N),c.maxy=Math.max(c.maxy,F,x,d),c.maxz=Math.max(c.maxz,g,_,M)}return c}else{let c=0,f=0,l=0;for(let v=0;v<a;v++){let p=t[v],F=(p>>1)*4,g,V,x;(p&1)===0?(g=r[F+2],V=r[F+1],x=r[F+0]):(g=r[F+0],V=r[F+3],x=r[F+2]);let _=o[g],N=n[g],d=i[g],M=o[V],z=n[V],C=i[V],y=o[x],O=n[x],E=i[x];c+=_+M+y,f+=N+z+O,l+=d+C+E}let h=1/a;c*=h,f*=h,l*=h;let m=Array(8).fill(null);for(let v=0;v<a;v++){let p=t[v],F=(p>>1)*4,g,V,x;(p&1)===0?(g=r[F+2],V=r[F+1],x=r[F+0]):(g=r[F+0],V=r[F+3],x=r[F+2]);let _=o[g],N=n[g],d=i[g],M=o[V],z=n[V],C=i[V],y=o[x],O=n[x],E=i[x],Z=_+M+y<c?0:1,B=N+z+O<f?0:1,Y=d+C+E<l?0:1,X=Z+B*2+Y*4;m[X]===null?m[X]=[p]:m[X].push(p)}let u=is();for(let v=0;v<8;v++){if(m[v]===null)continue;let p=this._trianglesToOctree(m[v],s,e);u.partitions[v]=p,u.minx=Math.min(u.minx,p.minx),u.miny=Math.min(u.miny,p.miny),u.minz=Math.min(u.minz,p.minz),u.maxx=Math.max(u.maxx,p.maxx),u.maxy=Math.max(u.maxy,p.maxy),u.maxz=Math.max(u.maxz,p.maxz)}return u}}static _distanceToOctree(t,s,e,r,o,n,i,a,c,f,l,h,m){if(this._hitsBox(r,o,n,l,h,m,e)===!1)return null;if(e.triangles.length>0)return this._distanceToModel(t,s,e.triangles,r,o,n,i,a,c,f);let u=f,v=e.partitions;for(let p=0;p<8;p++){let A=v[p];if(A===null)continue;let F=this._distanceToOctree(t,s,A,r,o,n,i,a,c,f,l,h,m);F&&(u=Math.min(u,F))}return u}static _aoSidesToOctree(t,s,e){let r=t.determineBoundsOffsetAndRescale(Gt,s).bounds,{vertCount:o,faceCount:n}=t,{faceVertIndices:i,faceCulled:a,vertX:c,vertY:f,vertZ:l}=s,h=(u,v,p,A,F,g,V,x,_)=>{let N=n*4;c[o]=u,f[o]=v,l[o]=p,c[o+1]=A,f[o+1]=F,l[o+1]=g,c[o+2]=V,f[o+2]=x,l[o+2]=_,i[N]=o+2,i[N+1]=o+1,i[N+2]=o+0,a.set(n,1);let d=n*2;return n++,o+=3,d},m=[];if(t._aoSides.nx&&m.push(h(r.minX-.05,1e6,-1e6,r.minX-.05,1e6,1e6,r.minX-.05,-1e7,0)),t._aoSides.px&&m.push(h(r.maxX+.05,1e6,1e6,r.maxX+.05,1e6,-1e6,r.maxX+.05,-1e7,0)),t._aoSides.ny&&m.push(h(1e6,r.minY-.05,-1e6,-1e6,r.minY-.05,-1e6,0,r.minY-.05,1e7)),t._aoSides.py&&m.push(h(-1e6,r.maxY+.05,-1e6,1e6,r.maxY+.05,-1e6,0,r.maxY+.05,1e7)),t._aoSides.nz&&m.push(h(1e6,1e6,r.minZ-.05,-1e6,1e6,r.minZ-.05,0,-1e7,r.minZ-.05)),t._aoSides.pz&&m.push(h(-1e6,1e6,r.maxZ+.05,1e6,1e6,r.maxZ+.05,0,-1e7,r.maxZ+.05)),m.length>0){let u=this._trianglesToOctree(m,t,s),v=is();v.partitions=[v,u]}return e}static _hitsBox(t,s,e,r,o,n,i){let a=i.minx;if(t<a&&r<a)return!1;let c=i.maxx;if(t>c&&r>c)return!1;let f=i.miny;if(s<f&&o<f)return!1;let l=i.maxy;if(s>l&&o>l)return!1;let h=i.minz;if(e<h&&n<h)return!1;let m=i.maxz;if(e>m&&n>m)return!1;let u=t-(a+c)*.5,v=(c-a)*.5,p=(r-t)*.5,A=Math.abs(p);if(Math.abs(u)>v+A)return!1;let F=(l-f)*.5,g=(o-s)*.5,V=Math.abs(g),x=s-(f+l)*.5;if(Math.abs(x)>F+V)return!1;let _=(m-h)*.5,N=(n-e)*.5,d=Math.abs(N),M=e-(h+m)*.5;return!(Math.abs(M)>_+d||Math.abs(g*M-N*x)>F*d+_*V+Number.EPSILON||Math.abs(N*u-p*M)>_*A+v*d+Number.EPSILON||Math.abs(p*x-g*u)>v*V+F*A+Number.EPSILON)}static _distanceToModel(t,s,e,r,o,n,i,a,c,f){let l=null,{faceVertIndices:h}=s;for(let m=0;m<e.length;m++){let u=e[m],p=(u>>1)*4,A,F,g;(u&1)===0?(A=h[p+2],F=h[p+1],g=h[p+0]):(A=h[p+0],F=h[p+3],g=h[p+2]);let V=this._triangleDistance(t,s,A,F,g,r,o,n,i,a,c);V&&(l?l=Math.min(l,V):V<f&&(l=V))}return l}static _triangleDistance(t,s,e,r,o,n,i,a,c,f,l){let{vertX:h,vertY:m,vertZ:u}=s,v=h[e],p=m[e],A=u[e],F=h[r],g=m[r],V=u[r],x=h[o],_=m[o],N=u[o],d=F-v,M=g-p,z=V-A,C=x-v,y=_-p,O=N-A,E=f*O-l*y,Z=l*C-c*O,B=c*y-f*C,Y=d*E+M*Z+z*B;if(Y<Number.EPSILON)return null;let X=1/Y,R=n-v,U=i-p,L=a-A,q=X*(R*E+U*Z+L*B);if(q<0||q>1)return null;let b=U*z-L*M,$=L*d-R*z,w=R*M-U*d,G=X*(c*b+f*$+l*w);if(G<0||q+G>1)return null;let I=X*(C*b+y*$+O*w);return I<=Number.EPSILON?null:I}static _generateFibonacciSamples(t){let s=[],e=(Math.sqrt(5)+1)/2,r=(2-e)*(2*Math.PI);for(let o=1;o<=t;++o){let n=Math.asin(-1+2*o/(t+1)),i=r*o,a=Math.cos(i)*Math.cos(n),c=Math.sin(n),f=Math.sin(i)*Math.cos(n);s.push([a,c,f])}return s}static _generateOctahedronSamples(t){let s=[],e=Math.PI/2/t;for(let r=0;r<=t;r++){let o=r*e,n=Math.cos(o),i=Math.sin(o),a=Math.max(1,r*4),c=Math.PI*2/a;for(let f=0;f<a;f++){let l=f*c,h=i*Math.sin(l),m=i*Math.cos(l);s.push({x:h,y:n,z:m}),r<t&&s.push({x:h,y:-n,z:m})}a+=4}return s}};var ze=class{static assignUVs(t,s){let{faceMaterials:e,faceNameIndices:r,faceVertUs:o,faceVertVs:n}=s,i=[],a=[],c=[],f=t.materials.materials;for(let l=0;l<f.length;l++){let h=f[l],m=0,u=1,v=1;if(h.map||h.normalMap||h.roughnessMap||h.metalnessMap||h.emissiveMap){let p=t.voxChunk.size[0],A=t.voxChunk.size[1],F=t.voxChunk.size[2];h.mapTransform.uscale===-1&&(u=1/Math.max(p,A,F)),h.mapTransform.vscale===-1&&(v=1/Math.max(p,A,F)),(h.map&&h.map.cube||h.normalMap&&h.normalMap.cube||h.roughnessMap&&h.roughnessMap.cube||h.metalnessMap&&h.metalnessMap.cube||h.emissiveMap&&h.emissiveMap.cube)&&(m=1,u=u/4,v=v/2)}i.push(m),a.push(u),c.push(v)}for(let l=0,h=t.faceCount;l<h;l++){let m=e[l],u=i[m],v=a[m],p=c[m],A=As[r[l]],F=l*4,g=o[F+A.order[0]],V=n[F+A.order[0]],x=o[F+A.order[1]],_=n[F+A.order[1]],N=o[F+A.order[2]],d=n[F+A.order[2]],M=o[F+A.order[3]],z=n[F+A.order[3]],C=F+A.order[0],y=F+A.order[1],O=F+A.order[2],E=F+A.order[3],Z=u*A.uo,B=u*A.vo,Y=A.ud*v,X=A.vd*p;o[C]=Z+(g+1e-4)*Y,n[C]=B+(V+1e-4)*X,o[y]=Z+(x+1e-4)*Y,n[y]=B+(_+.9999)*X,o[O]=Z+(N+.9999)*Y,n[O]=B+(d+.9999)*X,o[E]=Z+(M+.9999)*Y,n[E]=B+(z+1e-4)*X}}};var Xe=class{static combineColors(t,s){let{vertColorR:e,vertColorG:r,vertColorB:o,vertColorCount:n,faceVertColorR:i,faceVertColorG:a,faceVertColorB:c,faceVertLightR:f,faceVertLightG:l,faceVertLightB:h,faceVertIndices:m,faceMaterials:u,faceVertAO:v}=s,p=t.materials.materials,A=!!t.materials.find(x=>x.colors.length>1&&x.fade),F=Array(p.length).fill(!1);for(let x=0,_=p.length;x<_;x++)A&&p[x].colors.length>1&&p[x].fade&&(F[x]=!0);for(let x=0,_=t.faceCount;x<_;x++)if(F[u[x]])for(let d=0;d<4;d++){let M=0,z=0,C=0,y=0,O=x*4+d,E=m[O],Z=n[E];for(let Y=0;Y<Z;Y++){let X=E*6+Y;M+=e[X],z+=r[X],C+=o[X],y++}let B=1/y;i[O]=M*B,a[O]=z*B,c[O]=C*B}let g=t.ao||t.materials.find(function(x){return x.ao}),V=t.lights.length>0;if(g&&V)for(let x=0,_=t.faceCount;x<_;x++){let d=p[u[x]].ao||t.ao,M=d?d.color:null;for(let z=0;z<4;z++){let C=x*4+z,y=i[C],O=a[C],E=c[C],Z=M?M.r:y,B=M?M.g:O,Y=M?M.b:E,X=1-v[C];i[C]=y*f[C]*X+Z*(1-X),a[C]=O*l[C]*X+B*(1-X),c[C]=E*h[C]*X+Y*(1-X)}}else if(V&&!g)for(let x=0,_=t.faceCount;x<_;x++)for(let N=0;N<4;N++){let d=x*4+N;i[d]=i[d]*f[d],a[d]=a[d]*l[d],c[d]=c[d]*h[d]}else if(!V&&g)for(let x=0,_=t.faceCount;x<_;x++){let d=p[u[x]].ao||t.ao;if(!d)continue;let M=d.color;for(let z=0;z<4;z++){let C=x*4+z,y=i[C],O=a[C],E=c[C],Z=M?M.r:y,B=M?M.g:O,Y=M?M.b:E,X=1-v[C];i[C]=X*y+Z*(1-X),a[C]=X*O+B*(1-X),c[C]=X*E+Y*(1-X)}}}};var qe={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},$e={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},Ge={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},He={filled:!1,lastVoxelAxis1:0,lastVoxelAxis2:0,maxVoxelAxis3:0,lastFaceIndex:0},be=class{static simplify(t,s){if(!t.simplify)return;let e=function(){qe.filled=!1,$e.filled=!1,Ge.filled=!1,He.filled=!1},r=t.materials.materials,{faceCulled:o,faceNameIndices:n,vertX:i,vertY:a,vertZ:c,voxelXZYFaceIndices:f,voxelXYZFaceIndices:l,voxelYZXFaceIndices:h}=s;for(let m=f.length-t.faceCount,u=f.length;m<u;m++){let v=f[m],p=v&(1<<28)-1;if(o.get(p))continue;let A=v/(1<<28),F=A>>16&255,g=A>>8&255,V=A&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,qe,p,F,g,V,i,c,a,0,1,2,3);break;case 1:this._mergeFaces(r,t,s,$e,p,F,g,V,i,c,a,0,1,2,3);break;case 4:this._mergeFaces(r,t,s,Ge,p,F,g,V,i,c,a,0,1,2,3);break;case 5:this._mergeFaces(r,t,s,He,p,F,g,V,i,c,a,0,1,2,3);break}}e();for(let m=l.length-t.faceCount,u=l.length;m<u;m++){let v=l[m],p=v&(1<<28)-1;if(o.get(p))continue;let A=v/(1<<28),F=A>>16&255,g=A>>8&255,V=A&255;switch(n[p]){case 0:this._mergeFaces(r,t,s,qe,p,F,g,V,i,a,c,1,2,3,0);break;case 1:this._mergeFaces(r,t,s,$e,p,F,g,V,i,a,c,3,0,1,2);break;case 2:this._mergeFaces(r,t,s,Ge,p,F,g,V,i,a,c,0,1,2,3);break;case 3:this._mergeFaces(r,t,s,He,p,F,g,V,i,a,c,2,3,0,1);break}}e();for(let m=h.length-t.faceCount,u=h.length;m<u;m++){let v=h[m],p=v&(1<<28)-1;if(o.get(p))continue;let A=v/(1<<28),F=A>>16&255,g=A>>8&255,V=A&255;switch(n[p]){case 2:this._mergeFaces(r,t,s,qe,p,F,g,V,a,c,i,1,2,3,0);break;case 3:this._mergeFaces(r,t,s,$e,p,F,g,V,a,c,i,1,2,3,0);break;case 4:this._mergeFaces(r,t,s,Ge,p,F,g,V,a,c,i,3,0,1,2);break;case 5:this._mergeFaces(r,t,s,He,p,F,g,V,a,c,i,1,2,3,0);break}}e()}static _mergeFaces(t,s,e,r,o,n,i,a,c,f,l,h,m,u,v){let{faceCulled:p,faceMaterials:A,vertX:F,vertY:g,vertZ:V,faceVertIndices:x,faceVertNormalX:_,faceVertNormalY:N,faceVertNormalZ:d,faceVertColorR:M,faceVertColorG:z,faceVertColorB:C,faceVertUs:y,faceVertVs:O,faceVertFlatNormalX:E,faceVertFlatNormalY:Z,faceVertFlatNormalZ:B,faceVertSmoothNormalX:Y,faceVertSmoothNormalY:X,faceVertSmoothNormalZ:R,faceVertBothNormalX:U,faceVertBothNormalY:L,faceVertBothNormalZ:q}=e,b=A[o],$=t[b];if(r.filled&&r.lastVoxelAxis1===n&&r.lastVoxelAxis2===i&&($.simplify===!0||$.simplify===null&&s.simplify===!0)&&p.get(o)===0){if(r.maxVoxelAxis3!==a-1){r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o;return}let w=o*4,G=r.lastFaceIndex,I=G*4;if(A[G]!==b)return;let P=_[w],K=N[w],H=d[w],j=_[w+1],tt=N[w+1],T=d[w+1],ot=_[w+2],nt=N[w+2],dt=d[w+2],ft=_[w+3],et=N[w+3],xt=d[w+3],ut=_[I],wt=N[I],gt=d[I],zt=_[I+1],Yt=N[I+1],Kt=d[I+1],Pt=_[I+2],jt=N[I+2],Dt=d[I+2],Rt=_[I+3],Lt=N[I+3],te=d[I+3];if(!(this._normalEquals(P,K,H,ut,wt,gt)&&this._normalEquals(j,tt,T,zt,Yt,Kt)&&this._normalEquals(ot,nt,dt,Pt,jt,Dt)&&this._normalEquals(ft,et,xt,Rt,Lt,te)))return;let Tt=M[w],vt=z[w],at=C[w],it=M[w+1],ct=z[w+1],Ft=C[w+1],Bt=M[w+2],kt=z[w+2],Ut=C[w+2],At=M[w+3],Xt=z[w+3],bt=C[w+3],ne=M[I],ae=z[I],Mt=C[I],St=M[I+1],_t=z[I+1],Ot=C[I+1],Ct=M[I+2],k=z[I+2],Q=C[I+2],W=M[I+3],st=z[I+3],ht=C[I+3];if(!(Tt===ne&&vt===ae&&at===Mt&&it===St&&ct===_t&&Ft===Ot&&Bt===Ct&&kt===k&&Ut===Q&&At===W&&Xt===st&&bt===ht))return;let pe=x[w+h],$t=x[w+m],Qt=x[w+u],Ze=x[w+v],Te=F[pe],ie=g[pe],ls=V[pe],Be=F[$t],Pe=g[$t],Re=V[$t],ce=x[I+h],We=x[I+m],Ke=x[I+u],Qe=x[I+v],fs=F[ce],hs=g[ce],ms=V[ce],Xs=Math.sqrt((Be-Te)*(Be-Te)+(Pe-ie)*(Pe-ie)+(Re-ls)*(Re-ls)),bs=Math.sqrt((Be-fs)*(Be-fs)+(Pe-hs)*(Pe-hs)+(Re-ms)*(Re-ms)),Et=Xs/bs;return Math.abs(c[We]-(1-Et)*c[$t]-Et*c[ce])<=1e-4&&Math.abs(f[We]-(1-Et)*f[$t]-Et*f[ce])<=1e-4&&Math.abs(l[We]-(1-Et)*l[$t]-Et*l[ce])<=1e-4&&Math.abs(c[Ke]-(1-Et)*c[Qt]-Et*c[Qe])<=1e-4&&Math.abs(f[Ke]-(1-Et)*f[Qt]-Et*f[Qe])<=1e-4&&Math.abs(l[Ke]-(1-Et)*l[Qt]-Et*l[Qe])<=1e-4?(x[I+m]=$t,x[I+u]=Qt,y[I+m]=y[w+m],O[I+m]=O[w+m],y[I+u]=y[w+u],O[I+u]=O[w+u],E[I+m]=E[w+m],Z[I+m]=Z[w+m],B[I+m]=B[w+m],E[I+u]=E[w+u],Z[I+u]=Z[w+u],B[I+u]=B[w+u],Y[I+m]=Y[w+m],X[I+m]=X[w+m],R[I+m]=R[w+m],Y[I+u]=Y[w+u],X[I+u]=X[w+u],R[I+u]=R[w+u],U[I+m]=U[w+m],L[I+m]=L[w+m],q[I+m]=q[w+m],U[I+u]=U[w+u],L[I+u]=L[w+u],q[I+u]=q[w+u],r.maxVoxelAxis3=a,p.set(o,1),s.nonCulledFaceCount--,!0):void 0}return r.filled=!0,r.lastVoxelAxis1=n,r.lastVoxelAxis2=i,r.maxVoxelAxis3=a,r.lastFaceIndex=o,!1}static _normalEquals(t,s,e,r,o,n){return Math.abs(t-r)<.01&&Math.abs(s-o)<.01&&Math.abs(e-n)<.01}};var Se=class{static alignFaceDiagonals(t,s){let e=.1*Math.min(t.scale.x,t.scale.y,t.scale.z);e*=e;let{faceCulled:r,faceVertIndices:o,vertX:n,vertY:i,vertZ:a,faceVertFlatNormalX:c,faceVertFlatNormalY:f,faceVertFlatNormalZ:l,faceVertSmoothNormalX:h,faceVertSmoothNormalY:m,faceVertSmoothNormalZ:u,faceVertBothNormalX:v,faceVertBothNormalY:p,faceVertBothNormalZ:A,faceVertUs:F,faceVertVs:g,faceVertColorR:V,faceVertColorG:x,faceVertColorB:_,faceVertNormalX:N,faceVertNormalY:d,faceVertNormalZ:M}=s;for(let z=0,C=t.faceCount;z<C;z++){if(r.get(z)===1)continue;let y=z*4,O=o[y],E=o[y+1],Z=o[y+2],B=o[y+3],Y=n[O],X=i[O],R=a[O],U=n[E],L=i[E],q=a[E],b=n[Z],$=i[Z],w=a[Z],G=n[B],I=i[B],P=a[B],K=(Y+b)/2,H=(X+$)/2,j=(R+w)/2,tt=(U-K)*(U-K)+(L-H)*(L-H)+(q-j)*(q-j),T=(G-K)*(G-K)+(I-H)*(I-H)+(P-j)*(P-j),ot=(U+G)/2,nt=(L+I)/2,dt=(q+P)/2,ft=(Y-ot)*(Y-ot)+(X-nt)*(X-nt)+(R-dt)*(R-dt),et=(b-ot)*(b-ot)+($-nt)*($-nt)+(w-dt)*(w-dt);if(tt<e||T<e)this._shiftFaceVertsAtOffset(y,o),this._shiftFaceVertsAtOffset(y,N),this._shiftFaceVertsAtOffset(y,d),this._shiftFaceVertsAtOffset(y,M),this._shiftFaceVertsAtOffset(y,c),this._shiftFaceVertsAtOffset(y,f),this._shiftFaceVertsAtOffset(y,l),this._shiftFaceVertsAtOffset(y,h),this._shiftFaceVertsAtOffset(y,m),this._shiftFaceVertsAtOffset(y,u),this._shiftFaceVertsAtOffset(y,v),this._shiftFaceVertsAtOffset(y,p),this._shiftFaceVertsAtOffset(y,A),this._shiftFaceVertsAtOffset(y,F),this._shiftFaceVertsAtOffset(y,g),this._shiftFaceVertsAtOffset(y,V),this._shiftFaceVertsAtOffset(y,x),this._shiftFaceVertsAtOffset(y,_);else if(!(ft<e||et<e)){let xt=this._getVertexSumInline(Y,X,R);for(;this._getVertexSumInline(U,L,q)<xt||this._getVertexSumInline(b,$,w)<xt||this._getVertexSumInline(G,I,P)<xt;){this._shiftFaceVertsAtOffset(y,o),this._shiftFaceVertsAtOffset(y,N),this._shiftFaceVertsAtOffset(y,d),this._shiftFaceVertsAtOffset(y,M),this._shiftFaceVertsAtOffset(y,c),this._shiftFaceVertsAtOffset(y,f),this._shiftFaceVertsAtOffset(y,l),this._shiftFaceVertsAtOffset(y,h),this._shiftFaceVertsAtOffset(y,m),this._shiftFaceVertsAtOffset(y,u),this._shiftFaceVertsAtOffset(y,v),this._shiftFaceVertsAtOffset(y,p),this._shiftFaceVertsAtOffset(y,A),this._shiftFaceVertsAtOffset(y,F),this._shiftFaceVertsAtOffset(y,g),this._shiftFaceVertsAtOffset(y,V),this._shiftFaceVertsAtOffset(y,x),this._shiftFaceVertsAtOffset(y,_);let ut=Y,wt=X,gt=R;Y=U,X=L,R=q,U=b,L=$,q=w,b=G,$=I,w=P,G=ut,I=wt,P=gt,xt=this._getVertexSumInline(Y,X,R)}}}}static _getVertexSumInline(t,s,e){return Math.abs(t)+Math.abs(s)+Math.abs(e)}static _shiftFaceVertsAtOffset(t,s){let e=s[t];s[t]=s[t+1],s[t+1]=s[t+2],s[t+2]=s[t+3],s[t+3]=e}};var cs=(S,t)=>S-t,Oe=class{set origin(t){this._origin=J.parse(t)}get origin(){return J.toString(this._origin)}set flatten(t){this._flatten=J.parse(t)}get flatten(){return J.toString(this._flatten)}set clamp(t){this._clamp=J.parse(t)}get clamp(){return J.toString(this._clamp)}set skip(t){this._skip=J.parse(t)}get skip(){return J.toString(this._skip)}set tile(t){this._tile=J.parse(t||" "),this._tile.x&&(this._tile=J.combine(this._tile,{nx:!0,px:!0})),this._tile.y&&(this._tile=J.combine(this._tile,{ny:!0,py:!0})),this._tile.z&&(this._tile=J.combine(this._tile,{nz:!0,pz:!0})),this._tile.x=!1,this._tile.y=!1,this._tile.z=!1}get tile(){return J.toString(this._tile)}set shape(t){if(this._shape=(t||"box").trim(),!["box","sphere","cylinder-x","cylinder-y","cylinder-z"].includes(this._shape))throw new Error(`SyntaxError Unrecognized shape ${this._shape}. Allowed are box, sphere, cylinder-x, cylinder-y and cylinder-z`)}get shape(){return this._shape}setAo(t){this._ao=t}get ao(){return this._ao}set aoSides(t){this._aoSides=J.parse(t)}get aoSides(){return J.toString(this._aoSides)}set aoSamples(t){this._aoSamples=Math.round(t)}get aoSamples(){return this._aoSamples}constructor(){this.name="main",this.lights=[],this.textures={},this.materials=new Fe,this.voxChunk=null,this.scale={x:1,y:1,z:1},this.rotation={x:0,y:0,z:0},this.position={x:0,y:0,z:0},this.resize=!1,this._origin=J.parse("x y z"),this._flatten=J.parse(""),this._clamp=J.parse(""),this._skip=J.parse(""),this._tile=J.parse(""),this._ao=void 0,this._aoSamples=50,this._aoSides=J.parse(""),this.shape="box",this.wireframe=!1,this.simplify=!0,this.triCount=0,this.octCount=0,this.octMissCount=0,this.faceCount=0,this.vertCount=0,this.nonCulledFaceCount=0}prepareForWrite(){this.lights.some(t=>t.size)&&(this.materials.materials[0].colors[0].count=1)}prepareForRender(t){let{tmpVertIndexLookup:s,tmpVoxelXZYFaceIndices:e,tmpVoxelXYZFaceIndices:r,tmpVoxelYZXFaceIndices:o}=t,{voxChunk:n}=this;this.prepareForWrite();let i=Jt.maximumDeformCount(this);this.faceCount=0,this.vertCount=0;let a=i>0,[c,f,l,h,m,u]=mt(n.size),v=this.materials.materials,p=pt(n.size[0]),A=pt(n.size[1]),F=pt(n.size[2]);for(let g=c;g<=f;g++)for(let V=l;V<=h;V++)for(let x=m;x<=u;x++){let _=n.getPaletteIndexAt(g,V,x);if(_===0)continue;let N=g+p,d=V+A,M=x+F,z=N<<16,C=M<<8,y=(z|C|d)*(1<<28),O=(z|d<<8|M)*(1<<28),E=(d<<16|C|N)*(1<<28);for(let Z=0,B=vs.length;Z<B;Z++){let Y=Vs[Z],X,R=g+Y[0],U=V+Y[1],L=x+Y[2];if(R<c||R>f||U<l||U>h||L<m||L>u?X=0:X=n.getPaletteIndexAt(R,U,L),this._createFace(n,t,v,g,V,x,p,A,F,_,X,Z,a,s)){let b=this.faceCount-1;e[b]=y+b,r[b]=O+b,o[b]=E+b}}}this.nonCulledFaceCount=this.faceCount,s.clear(),t.voxelXZYFaceIndices=e.slice(0,this.faceCount),t.voxelXYZFaceIndices=r.slice(0,this.faceCount),t.voxelYZXFaceIndices=o.slice(0,this.faceCount),t.voxelXZYFaceIndices.sort(cs),t.voxelXYZFaceIndices.sort(cs),t.voxelYZXFaceIndices.sort(cs),he.fixClampedLinks(this,t),Jt.changeShape(this,t,this._shape),Jt.deform(this,t,i),Jt.warpAndScatter(this,t),Me.calculateNormals(this,t),Ie.transformVertices(this,t),Ne.calculateLights(this,t),we.calculateAmbientOcclusion(this,t),Xe.combineColors(this,t),ze.assignUVs(this,t),be.simplify(this,t),Se.alignFaceDiagonals(this,t)}determineBoundsOffsetAndRescale(t,s){let e={bounds:null,offset:null,rescale:1},r,o,n,i,a,c,{vertX:f,vertY:l,vertZ:h}=s;if(t===xe||t===Gt){r=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,a=Number.NEGATIVE_INFINITY,c=Number.NEGATIVE_INFINITY;for(let p=0,A=this.vertCount;p<A;p++){let F=f[p],g=l[p],V=h[p];F<r&&(r=F),g<o&&(o=g),V<n&&(n=V),F>i&&(i=F),g>a&&(a=g),V>c&&(c=V)}if(t===Gt){let[p,A,F,g,V,x]=mt(this.voxChunk.size),_=(A-p+1)/(A-p),N=(g-F+1)/(g-F),d=(x-V+1)/(x-V);e.rescale=Math.min(_,N,d)}}t||(r=this.bounds.minX,i=this.bounds.maxX+1,o=this.bounds.minY,a=this.bounds.maxY+1,n=this.bounds.minZ,c=this.bounds.maxZ+1);let m=-(r+i)/2,u=-(o+a)/2,v=-(n+c)/2;return this._origin.nx&&(m=-r),this._origin.px&&(m=-i),this._origin.ny&&(u=-o),this._origin.py&&(u=-a),this._origin.nz&&(v=-n),this._origin.pz&&(v=-c),e.bounds={minX:r,minY:o,minZ:n,maxX:i,maxY:a,maxZ:c},e.offset={x:m,y:u,z:v},e}_createFace(t,s,e,r,o,n,i,a,c,f,l,h,m,u){let v=t.colorForPaletteIndex(f),p=(v&4278190080)>>24,A=e[p];if(A.opacity===0)return!1;if(l!==0){let H=(t.colorForPaletteIndex(l)&4278190080)>>24;if(!e[H].isTransparent&&!A.wireframe)return!1;if(!(!A.isTransparent&&!A.wireframe)){if(!(A.isTransparent&&!A.wireframe&&l!==0&&e[(t.colorForPaletteIndex(l)&4278190080)>>24].wireframe))return!1}}let F=this._isFacePlanar(A,r,o,n,h,A._flatten,this._flatten),g=this._isFacePlanar(A,r,o,n,h,A._clamp,this._clamp);if(this._isFacePlanar(A,r,o,n,h,A._skip,this._skip))return!1;let{faceVertIndices:x,faceVertColorR:_,faceVertColorG:N,faceVertColorB:d,faceFlattened:M,faceClamped:z,faceSmooth:C,faceCulled:y,faceMaterials:O,faceNameIndices:E,faceVertUs:Z,faceVertVs:B}=s,{faceCount:Y}=this,X=Y*4,R=(v&255)/255,U=((v&65280)>>8)/255,L=((v&16711680)>>16)/255;x[X]=this._createVertex(s,A,r,o,n,R,U,L,i,a,c,h,0,F,g,u),x[X+1]=this._createVertex(s,A,r,o,n,R,U,L,i,a,c,h,1,F,g,u),x[X+2]=this._createVertex(s,A,r,o,n,R,U,L,i,a,c,h,2,F,g,u),x[X+3]=this._createVertex(s,A,r,o,n,R,U,L,i,a,c,h,3,F,g,u);for(let H=0;H<4;H++)_[X+H]=R,N[X+H]=U,d[X+H]=L;M.set(Y,F?1:0),z.set(Y,g?1:0),C.set(Y,0),y.set(Y,0),O[Y]=p,E[Y]=h;let q=ys[h],b=q[0],$=q[1],w=r+i,G=o+a,I=n+c,P=w*b[0]+G*b[1]+I*b[2],K=w*$[0]+G*$[1]+I*$[2];for(let H=0;H<4;H++)Z[X+H]=P,B[X+H]=K;return m&&he.linkVertices(this,s,Y),this.faceCount++,!0}_createVertex(t,s,e,r,o,n,i,a,c,f,l,h,m,u,v,p){let A=Fs[h][m],F=e+A[0],g=r+A[1],V=o+A[2],x=F+c<<20|g+f<<10|V+l,{_clamp:_,_flatten:N}=this,{vertDeformCount:d,vertDeformDamping:M,vertDeformStrength:z,vertWarpAmplitude:C,vertWarpFrequency:y,vertScatter:O,vertX:E,vertY:Z,vertZ:B,vertLinkCounts:Y,vertFullyClamped:X,vertRing:R,vertClampedX:U,vertClampedY:L,vertClampedZ:q,vertColorR:b,vertColorG:$,vertColorB:w,vertColorCount:G,vertFlattenedX:I,vertFlattenedY:P,vertFlattenedZ:K}=t,{deform:H,warp:j,scatter:tt}=s,T;if(p.has(x)?(T=p.get(x),H?d[T]!==0&&this._getDeformIntegral(s.deform)<this._getDeformIntegralAtVertex(t,T)&&(z[T]=H.strength,M[T]=H.damping,d[T]=H.count):(d[T]=0,M[T]=0,z[T]=0),j?C[T]!==0&&(j.amplitude<C[T]||j.amplitude===C[T]&&j.frequency>y[T])&&(C[T]=j.amplitude,y[T]=j.frequency):(C[T]=0,y[T]=0),tt?O[T]!==0&&Math.abs(tt)<Math.abs(O[T])&&(O[T]=tt):O[T]=0):(T=this.vertCount,p.set(x,T),E[T]=F,Z[T]=g,B[T]=V,H?(M[T]=H.damping,d[T]=H.count,z[T]=H.strength,Y[T]=0,X.set(T,0)):d[T]=0,j?(C[T]=j.amplitude,y[T]=j.frequency):C[T]=0,tt?O[T]=tt:O[T]=0,G[T]=0,R[T]=0,U.set(T,0),L.set(T,0),q.set(T,0),I.set(T,0),P.set(T,0),K.set(T,0)),this._setIsVertexPlanar(s,F,g,V,s._flatten,N,I,P,K,T),this._setIsVertexPlanar(s,F,g,V,s._clamp,_,U,L,q,T),s.fade){let ot=G[T],nt=T*6;b[nt+ot]=n,$[nt+ot]=i,w[nt+ot]=a,G[T]++}return this.vertCount++,T}_getDeformIntegral(t){return t.damping===1?t.strength*(t.count+1):t.strength*(1-Math.pow(t.damping,t.count+1))/(1-t.damping)}_getDeformIntegralAtVertex(t,s){let{vertDeformDamping:e,vertDeformStrength:r,vertDeformCount:o}=t,n=e[s],i=o[s],a=r[s];return n===1?a*(i+1):a*(1-Math.pow(n,i+1))/(1-n)}_isFacePlanar(t,s,e,r,o,n,i){let a=n,c=t.bounds;if(a||(a=i,c=this.bounds),!a)return!1;switch(o){case 0:return a.x||a.nx&&s===c.minX;case 1:return a.x||a.px&&s===c.maxX;case 2:return a.y||a.ny&&e===c.minY;case 3:return a.y||a.py&&e===c.maxY;case 4:return a.z||a.nz&&r===c.minZ;case 5:return a.z||a.pz&&r===c.maxZ;default:return!1}}_setIsVertexPlanar(t,s,e,r,o,n,i,a,c,f){let l=o,h=t.bounds;l||(l=n,h=this.bounds),l?(i.set(f,l.x||l.nx&&s<h.minX+.5||l.px&&s>h.maxX+.5?1:i.get(f)|0),a.set(f,l.y||l.ny&&e<h.minY+.5||l.py&&e>h.maxY+.5?1:a.get(f)|0),c.set(f,l.z||l.nz&&r<h.minZ+.5||l.pz&&r>h.maxZ+.5?1:c.get(f)|0)):(i.set(f,i.get(f)|0),a.set(f,a.get(f)|0),c.set(f,c.get(f)|0))}};var Ee=class{constructor(t,s,e,r,o,n,i){this.color=t,this.strength=s,this.direction=e,this.position=r,this.distance=o,this.size=n,this.detail=i}};var ue=class{static readFromString(t){let s=this._parse(t);return this._validateModel(s),this._createModel(s)}static _parse(t){let s={linecontinuation:/_\\s*[\\r\\n]/gm,modelparts:new RegExp(/\\s*(\\/\\/(.*?)\\r?\\n)/.source+"|"+/\\s*(texture|light|model|material|voxels)\\s+/.source+"|"+/\\s*([^=,\\r\\n]+=\\s*data:image.*?base64,.*$)\\s*/.source+"|"+/\\s*([^=,\\r\\n]+=[^\\r\\n=;,/]+)\\s*/.source+"|"+/\\s*([A-Za-z ()\\d -]+)\\s*/.source,"gm")},e={lights:[],textures:[],materials:[]},r=e,o=null;return Array.from(t.replaceAll(s.linecontinuation," ").matchAll(s.modelparts),i=>i[0].trim()).filter(i=>i).forEach(function(i){if(!i.startsWith("//"))if(i==="texture")r={id:"<no-name>",cube:!1},e.textures.push(r);else if(i==="light")r={color:"#FFF"},e.lights.push(r);else if(i==="model")r=e;else if(i==="material")r={},e.materials.push(r);else if(i==="voxels")r=e,o="";else if(o!==null)o+=i.replace(/\\s/g,"");else{let a=i.indexOf("=");if(a===-1)throw new Error(`SyntaxError: Invalid definition \'${i}\'.`);let c=i.substring(0,a).trim().toLowerCase(),f=i.substring(a+1).trim();r[c]=f}},this),e.voxels=o,e}static _createModel(t){let s=new Oe;return s.size=this._parseXYZInt("size",t.size,null,!0),s.scale=this._parseXYZFloat("scale",t.scale,"1",!0),s.rotation=this._parseXYZFloat("rotation",t.rotation,"0 0 0",!1),s.position=this._parseXYZFloat("position",t.position,"0 0 0",!1),s.simplify=t.simplify!=="false",t.resize===xe?s.resize=xe:t.resize===Gt?s.resize=Gt:t.resize?s.resize=null:t.autoresize==="true"&&(s.resize=Gt),s.shape=t.shape,s.wireframe=t.wireframe==="true"||!1,s.origin=t.origin||"x y z",s.flatten=t.flatten,s.clamp=t.clamp,s.skip=t.skip,s.tile=t.tile,s.setAo(this._parseAo(t.ao)),s.aoSides=t.aosides,s.aoSamples=parseInt(t.aosamples||50,10),s.data=this._parseVertexData(t.data,"model"),s.shell=this._parseShell(t.shell),t.lights.some(e=>e.size)&&s.materials.createMaterial(Le,Ue,1,0,!1,!1,1,0,!1,1,!1,It,"#FFF",0,!1,null,null,null,null,null,null,null,null,-1,-1,0,0,0).addColorHEX("#FFFFFF"),t.lights.forEach(function(e){this._createLight(s,e)},this),t.textures.forEach(function(e){this._createTexture(s,e)},this),t.materials.forEach(function(e){this._createMaterial(s,e)},this),s.colors={},s.materials.forEach(function(e){e.colors.forEach(function(r){s.colors[r.id]=r})}),this._resolveShellColors(s.shell,s),s.materials.forEach(function(e){this._resolveShellColors(e.shell,s)},this),this._createVoxels(s,t.voxels),s}static _createLight(t,s){s.color||(s.color="#FFF 1"),s.color.startsWith("#")||(s.color="#FFF "+s.color),s.strength=parseFloat(s.color.split(" ")[1]||1),s.color=rt.fromHex(s.color.split(" ")[0]),s.direction=this._parseXYZFloat("direction",s.direction,null,!1),s.position=this._parseXYZFloat("position",s.position,null,!1),s.distance=parseFloat(s.distance||0),s.size=Math.max(0,parseFloat(s.size||0)),s.detail=Math.min(3,Math.max(0,parseInt(s.detail||1,10)));let e=new Ee(s.color,s.strength,s.direction,s.position,s.distance,s.size,s.detail);t.lights.push(e)}static _createTexture(t,s){s.cube=s.cube==="true"||!1,t.textures[s.id]=s}static _createMaterial(t,s){let e=Ue;s.lighting===de&&(e=de),s.lighting===ee&&(e=ee),s.lighting===se&&(e=se),s.emissive||(s.emissivemap?s.emissive="#FFF 1":s.emissive="#000 0"),s.emissive.startsWith("#")||(s.emissive="#FFF "+s.emissive),s.emissiveColor=s.emissive.split(" ")[0],s.emissiveIntensity=s.emissive.split(" ")[1]||1,s.ao&&!s.ao.startsWith("#")&&(s.ao="#000 "+s.ao),s.maptransform=s.maptransform||"";let r=null;t.simplify&&s.simplify==="false"&&(r=!1),!t.simplify&&s.simplify==="true"&&(r=!0);let o=t.materials.createMaterial(s.type||le,e,parseFloat(s.roughness||(s.roughnessmap,1)),parseFloat(s.metalness||(s.metalnessmap?1:0)),s.fade==="true"||!1,r,parseFloat(s.opacity||1),parseFloat(s.alphatest||0),s.transparent==="true"||!1,parseFloat(s.refractionratio||.9),s.wireframe==="true"||!1,s.side,s.emissiveColor,s.emissiveIntensity,s.fog!=="false",s.map?t.textures[s.map]:null,s.normalmap?t.textures[s.normalmap]:null,s.roughnessmap?t.textures[s.roughnessmap]:null,s.metalnessmap?t.textures[s.metalnessmap]:null,s.emissivemap?t.textures[s.emissivemap]:null,s.matcap?t.textures[s.matcap]:null,s.reflectionmap?t.textures[s.reflectionmap]:null,s.refractionmap?t.textures[s.refractionmap]:null,parseFloat(s.maptransform.split(" ")[0]||-1),parseFloat(s.maptransform.split(" ")[1]||-1),parseFloat(s.maptransform.split(" ")[2]||0),parseFloat(s.maptransform.split(" ")[3]||0),parseFloat(s.maptransform.split(" ")[4]||0));s.deform&&o.setDeform(parseFloat(s.deform.split(" ")[0]),parseFloat(s.deform.split(" ")[1]||1),parseFloat(s.deform.split(" ")[2]||1)),s.warp&&o.setWarp(parseFloat(s.warp.split(" ")[0]),parseFloat(s.warp.split(" ")[1]||1)),s.scatter&&(o.scatter=parseFloat(s.scatter)),o.flatten=s.flatten,o.clamp=s.clamp,o.skip=s.skip,o.setAo(this._parseAo(s.ao)),o.shell=this._parseShell(s.shell),o.lights=s.lights!=="false",o.data=this._parseVertexData(s.data,"material"),this._compareVertexData(t.data,o.data);let n=/\\s*\\(\\s*(\\d+)\\s*\\)\\s*/g,i=/([A-Z][a-z]*)\\s*(\\(\\d+\\))?[:]\\s*(#[a-fA-F0-9]*)\\s*/g;s.colors=s.colors.replace(n,"($1)"),s.colors=s.colors.replace(i,"$1$2:$3 "),s.colors.split(" ").filter(c=>c).forEach(function(c){let f=c.split(":")[0],l=null;f.includes("(")&&(l=Number(f.split("(")[1].replace(")","")),f=f.split("(")[0]);let h=c.split(":")[1];if(!o.colors[f]){if(h=o.addColor(rt.fromHex(h)),!/^[A-Z][a-z]*$/.test(f))throw new Error(`SyntaxError: Invalid color ID \'${f}\'`);h.id=f,h.exId=l}},this)}static _createVoxels(t,s){let e=t.colors,r=null,o=[];if(s.matchAll)o=s.matchAll(/[0-9]+|[A-Z][a-z]*|-+|[()]/g);else{let h=/[0-9]+|[A-Z][a-z]*|-+|[()]/g,m;for(;(m=h.exec(s))!==null;)o.push(m);o=o[Symbol.iterator]()}let n=this._unpackRle(o),i=t.size.x*t.size.y*t.size.z,a=0,c=t.voxChunk=new Vt([t.size.x,t.size.y,t.size.z]);for(let h=0;h<n.length;h++)a+=n[h][1];if(a!==i)throw new Error(`SyntaxError: The specified size is ${t.size.x} x ${t.size.y} x ${t.size.z} (= ${i} voxels) but the voxel matrix contains ${a} voxels.`);let f={minx:0,miny:0,minz:0,maxx:t.size.x-1,maxy:t.size.y-1,maxz:t.size.z-1,x:0,y:0,z:0};t.bounds=new re;let l=0;for(let h=0;h<n.length;h++){let m=null;n[h][0]!=="-"&&(m=e[n[h][0]],l=t.materials.materials.findIndex(u=>u.colors.includes(m)),m||(r===null&&(r=t.materials.createMaterial(le,Ue,.5,0,!1,1,!1)),m=rt.fromHex("#FF00FF"),m.id=n[h][0],r.addColor(m),e[n[h][0]]=m)),this._setVoxels(t,m,n[h][1],f,c,l)}}static _parseAo(t){let s;if(t){t.startsWith("#")||(t="#000 "+t);let e=rt.fromHex(t.split(" ")[0]),r=Math.abs(parseFloat(t.split(" ")[1]||1)),o=parseFloat(t.split(" ")[2]||1),n=parseFloat(t.split(" ")[3]||70);n=Math.max(0,Math.min(90,Math.round(n))),s={color:e,maxDistance:r,strength:o,angle:n}}return s}static _parseShell(t){let s,e=!1;if(t&&(s=[],t!=="none")){let r=t.split(/\\s+/);if(r.length<2||r.length%2!==0)e=!0;else for(let o=0;o<r.length/2;o++){let n=r[o*2+0],i=r[o*2+1];if(!/^[A-Z][a-z]*$/.test(n)||!/^([-+]?[0-9]*\\.?[0-9]+)*$/.test(i)){e=!0;break}else s.push({colorId:r[o*2],distance:r[o*2+1]})}}if(e)throw new Error(`SyntaxError: shell \'${t}\' must be \'none\' or one or more color ID\'s and distances, e.g. P 0.2 Q 0.4`);return s&&(s=s.sort(function(r,o){return r.distance-o.distance})),s}static _resolveShellColors(t,s){!t||t.length===0||t.forEach(function(e){if(e.color=s.colors[e.colorId],!e.color)throw new Error(`SyntaxError: shell color ID \'${e.colorId}\' is not a known color`)},this)}static _parseVertexData(t,s){if(t){let e=[],r=t.split(/\\s+/),o=null;for(let i=0;i<r.length;i++){let a=r[i];if(isNaN(a))o={name:a,values:[]},e.push(o);else if(o)o.values.push(parseFloat(a));else break}let n=e.length===0;for(let i=0;i<e.length;i++)n=n||e[i].values.length===0||e[i].values.length>=4;if(n)throw new Error(`SyntaxError: The data property \'${e.data}\' of the ${s} should consist of one or more names, each followed by 1 to 4 float (default) values.`);return e}}static _compareVertexData(t,s){let e=!1;try{if((t||s)&&s){e=s&&!t,e=e||t.length!==s.length;for(let r=0;r<t.length;r++)e=e||t[r].name!==s[r].name,e=e||t[r].values.length!==s[r].values.length}}catch(r){e=!0}if(e)throw new Error("SyntaxError: The data property of the material should consist of identical names and number of values as the model data property.")}static _parseXYZInt(t,s,e,r){let o=this._parseXYZFloat(t,s,e,r);return{x:Math.trunc(o.x),y:Math.trunc(o.y),z:Math.trunc(o.z)}}static _parseXYZFloat(t,s,e,r){if(!s&&e&&(s=e),!s)return null;let o=s.split(/[\\s/]+/);if(o.length===1&&r&&(o.push(o[0]),o.push(o[0])),o.length!==3)throw new Error(`SyntaxError: \'${t}\' must have three values.`);if(o={x:parseFloat(o[0]),y:parseFloat(o[1]),z:parseFloat(o[2])},Number.isNaN(o.x)||Number.isNaN(o.y)||Number.isNaN(o.z))throw new Error(`SyntaxError: Invalid value \'${s}\' for ${t}\'.`);return o}static _unpackRle(t){let s=[],e=1,r=t.next();for(;!r.done;){let o=r.value[0];if(o[0]>="0"&&o[0]<="9")e=parseInt(o,10);else if(o==="("){let n=this._unpackRle(t);for(let i=0;i<e;i++)Array.prototype.push.apply(s,n);e=1}else{if(o===")")return s;o.length>1&&o[0]>="A"&&o[0]<="Z"&&o[1]===o[0]?(e>1?(s.push([o[0],e]),s.push([o[0],o.length-1])):s.push([o[0],o.length]),e=1):o.length>1&&o[0]==="-"&&o[1]==="-"?(e>1?(s.push(["-",e]),s.push(["-",o.length-1])):s.push(["-",o.length]),e=1):(s.push([o,e]),e=1)}r=t.next()}return s}static _setVoxels(t,s,e,r,o,n){let i=t.materials.materials[n];for(;e-- >0;){if(s){let a=Math.floor(s.r*255),c=Math.floor(s.g*255),f=Math.floor(s.b*255),h=Is(a,c,f,n),m=r.x-pt(t.size.x),u=r.y-pt(t.size.y),v=r.z-pt(t.size.z);t.bounds.set(m,u,v),i.bounds.set(m,u,v),o.setColorAt(m,u,v,h)}r.x++,r.x>r.maxx&&(r.x=r.minx,r.y++),r.y>r.maxy&&(r.y=r.miny,r.z++)}}static _validateModel(t){let s=["size","materials","textures","lights","voxels"],e=["name","shape","scale","rotation","position","simplify","origin","autoresize","resize","flatten","clamp","skip","tile","ao","aosides","aosamples","shell","wireframe","data"];this._validateProperties(t,s,e,"model"),t.lights.forEach(function(r){this._validateLight(r)},this),t.textures.forEach(function(r){this._validateTexture(r)},this),t.materials.forEach(function(r){this._validateMaterial(r)},this)}static _validateLight(t){let s=["color"],e=["direction","position","distance","size","detail"];if(this._validateProperties(t,s,e,"light"),t.direction&&t.position)throw new Error("SyntaxError: Light cannot have both a direction and a position.");if(t.direction&&t.distance)throw new Error("SyntaxError: Light cannot have both a direction and a distance.");if(!t.position&&(t.size||t.detail))throw new Error("SyntaxError: Light with no position cannot have size or detail.")}static _validateTexture(t){let s=["id","image"],e=["cube"];this._validateProperties(t,s,e,"texture")}static _validateMaterial(t){let s=["colors"],e=["type","lighting","fade","simplify","roughness","metalness","emissive","fog","opacity","alphatest","transparent","refractionratio","deform","warp","scatter","flatten","clamp","skip","ao","lights","wireframe","side","shell","map","normalmap","roughnessmap","metalnessmap","emissivemap","matcap","reflectionmap","refractionmap","maptransform","data"];this._validateProperties(t,s,e,"material")}static _validateProperties(t,s,e,r){for(let o of s)if(!t[o])throw new Error("SyntaxError: "+r+\' is missing mandatory property "\'+o+\'".\');for(let o in t)if(!s.includes(o)&&!e.includes(o))throw new Error("SyntaxError: "+r+\' has unrecognized property "\'+o+\'".\')}};var Nt=new Map,Wt=class{static generate(t,s){t.prepareForRender(s);let{nonCulledFaceCount:e}=t,r={materials:[],groups:[],indices:Array(e*6),indicesIndex:0,maxIndex:-1,positions:new Float32Array(e*4*3),normals:new Float32Array(e*4*3),colors:new Float32Array(e*4*3),uvs:new Float32Array(e*4*2),data:null};return t.materials.baseMaterials.forEach(function(o){o.index=r.materials.length,r.materials.push(Wt._generateMaterial(o,t))},this),Nt.clear(),Wt._generateAll(t,r,s),r}static _generateMaterial(t,s){let e={type:t.type,roughness:t.roughness,metalness:t.metalness,opacity:t.opacity,alphaTest:t.alphaTest,transparent:t.isTransparent,refractionRatio:t.refractionRatio,wireframe:t.wireframe||s.wireframe,fog:t.fog,vertexColors:!0,side:t.side===Ht?Ht:It};return t.type!==ke&&(e.color="#FFF"),t.emissive&&(e.emissive=t.emissive.color.toString(),e.emissiveIntensity=t.emissive.intensity),t.map&&(e.map={image:t.map.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.normalMap&&(e.normalMap={image:t.normalMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.roughnessMap&&(e.roughnessMap={image:t.roughnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.metalnessMap&&(e.metalnessMap={image:t.metalnessMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.emissiveMap&&(e.emissiveMap={image:t.emissiveMap.image,uscale:t.mapTransform.uscale===-1?1:t.mapTransform.uscale,vscale:t.mapTransform.vscale===-1?1:t.mapTransform.vscale,uoffset:t.mapTransform.uoffset,voffset:t.mapTransform.voffset,rotation:t.mapTransform.rotation}),t.matcap&&(e.matcap={image:t.matcap.image}),t.reflectionMap&&(e.reflectionMap={image:t.reflectionMap.image}),t.refractionMap&&(e.refractionMap={image:t.refractionMap.image}),e}static _generateAll(t,s,e){let r=t.materials.materials,{faceMaterials:o,faceCulled:n}=e;t.materials.baseMaterials.forEach(function(i){let a=s.indicesIndex;for(let f=0,l=t.faceCount;f<l;f++)r[o[f]]._baseMaterial===i&&n.get(f)===0&&Wt._generateFace(t,e,f,s);let c=s.indicesIndex;s.groups.push({start:a,count:c-a,materialIndex:i.index})},this),s.indices.length=s.indicesIndex,s.positions=new Float32Array(s.positions,0,s.indicesIndex*3),s.normals=new Float32Array(s.normals,0,s.indicesIndex*3),s.colors=new Float32Array(s.colors,0,s.indicesIndex*3),s.uvs=new Float32Array(s.uvs,0,s.indicesIndex*2)}static _generateFace(t,s,e,r){let{faceVertIndices:o,faceVertNormalX:n,faceVertNormalY:i,faceVertNormalZ:a,vertX:c,vertY:f,vertZ:l,faceVertColorR:h,faceVertColorG:m,faceVertColorB:u,faceVertUs:v,faceVertVs:p,faceMaterials:A,faceSmooth:F}=s,V=t.materials.materials[A[e]],x=o[e*4],_=o[e*4+1],N=o[e*4+2],d=o[e*4+3],M=c[x],z=f[x],C=l[x],y=c[_],O=f[_],E=l[_],Z=c[N],B=f[N],Y=l[N],X=c[d],R=f[d],U=l[d],L=n[e*4],q=i[e*4],b=a[e*4],$=n[e*4+1],w=i[e*4+1],G=a[e*4+1],I=n[e*4+2],P=i[e*4+2],K=a[e*4+2],H=n[e*4+3],j=i[e*4+3],tt=a[e*4+3],T=h[e*4],ot=m[e*4],nt=u[e*4],dt=h[e*4+1],ft=m[e*4+1],et=u[e*4+1],xt=h[e*4+2],ut=m[e*4+2],wt=u[e*4+2],gt=h[e*4+3],zt=m[e*4+3],Yt=u[e*4+3],Kt=v[e*4],Pt=p[e*4],jt=v[e*4+1],Dt=p[e*4+1],Rt=v[e*4+2],Lt=p[e*4+2],te=v[e*4+3],Zt=p[e*4+3];if(V.side===fe){let k,Q,W;k=M,Q=z,W=C,M=Z,z=B,C=Y,Z=k,B=Q,Y=W,k=L,Q=q,W=b,L=I,q=P,b=K,I=k,P=Q,K=W,k=T,Q=ot,W=nt,T=xt,ot=ut,nt=wt,xt=k,ut=Q,wt=W,k=Kt,Q=Pt,Kt=Rt,Pt=Lt,Rt=k,Lt=Q}let Tt=F.get(e)===1;if(!(V.lighting===ee||V.lighting===se&&Tt)){let k=I+$+L,Q=P+w+q,W=K+G+b,st=L+H+I,ht=q+j+P,qt=b+tt+K,pe=Math.sqrt(k*k+Q*Q+W*W),$t=Math.sqrt(st*st+ht*ht+qt*qt),Qt=1/pe,Ze=1/$t;if(k*=Qt,Q*=Qt,W*=Qt,st*=Ze,ht*=Ze,qt*=Ze,V.lighting===de){let Te=Math.sqrt(k*k+Q*Q+W*W)+Math.sqrt(st*st+ht*ht+qt*qt),ie=1/Te;k=st=(k+st)*ie,Q=ht=(Q+ht)*ie,W=qt=(W+qt)*ie}L=k,q=Q,b=W,$=k,w=Q,G=W,I=k,P=Q,K=W,H=st,j=ht,tt=qt}let vt=r.indices,at=r.positions,it=r.normals,ct=r.colors,Ft=r.uvs,Bt=M*3+z*61673+C*87119+L*2766691+q*73091+b*5040949+T*8636137+ot*2360719+nt*4739729+Kt*719959+Pt*172741,kt=y*3+O*61673+E*87119+$*2766691+w*73091+G*5040949+dt*8636137+ft*2360719+et*4739729+jt*719959+Dt*172741,Ut=Z*3+B*61673+Y*87119+I*2766691+P*73091+K*5040949+xt*8636137+ut*2360719+wt*4739729+Rt*719959+Lt*172741,At=X*3+R*61673+U*87119+H*2766691+j*73091+tt*5040949+gt*8636137+zt*2360719+Yt*4739729+te*719959+Zt*172741,Xt=Nt.has(Bt),bt=Nt.has(kt),ne=Nt.has(Ut),ae=Nt.has(At),Mt,St,_t,Ot;if(Xt)Mt=Nt.get(Bt);else{Mt=r.maxIndex+1;let k=Mt*3,Q=k+1,W=k+2,st=Mt*2,ht=st+1;r.maxIndex=Mt,at[k]=M,at[Q]=z,at[W]=C,it[k]=L,it[Q]=q,it[W]=b,ct[k]=T,ct[Q]=ot,ct[W]=nt,Ft[st]=Kt,Ft[ht]=Pt,Nt.set(Bt,Mt)}if(bt)St=Nt.get(kt);else{St=r.maxIndex+1;let k=St*3,Q=k+1,W=k+2,st=St*2,ht=st+1;r.maxIndex=St,at[k]=y,at[Q]=O,at[W]=E,it[k]=$,it[Q]=w,it[W]=G,ct[k]=dt,ct[Q]=ft,ct[W]=et,Ft[st]=jt,Ft[ht]=Dt,Nt.set(kt,St)}if(ne)_t=Nt.get(Ut);else{_t=r.maxIndex+1;let k=_t*3,Q=k+1,W=k+2,st=_t*2,ht=st+1;r.maxIndex=_t,at[k]=Z,at[Q]=B,at[W]=Y,it[k]=I,it[Q]=P,it[W]=K,ct[k]=xt,ct[Q]=ut,ct[W]=wt,Ft[st]=Rt,Ft[ht]=Lt,Nt.set(Ut,_t)}if(ae)Ot=Nt.get(At);else{Ot=r.maxIndex+1;let k=Ot*3,Q=k+1,W=k+2,st=Ot*2,ht=st+1;r.maxIndex=Ot,at[k]=X,at[Q]=R,at[W]=U,it[k]=H,it[Q]=j,it[W]=tt,ct[k]=gt,ct[Q]=zt,ct[W]=Yt,Ft[st]=te,Ft[ht]=Zt,Nt.set(At,Ot)}let Ct=r.indicesIndex;vt[Ct]=_t,vt[Ct+1]=St,vt[Ct+2]=Mt,vt[Ct+3]=Mt,vt[Ct+4]=Ot,vt[Ct+5]=_t,r.indicesIndex+=6}};var Ye=class{constructor(t){let s=Math.floor(t/8),e=t/4,r=Math.floor(e/8),o=e*4;this.tmpVertIndexLookup=new Map,this.vertX=new Float32Array(t),this.vertY=new Float32Array(t),this.vertZ=new Float32Array(t),this.vertTmpX=new Float32Array(t),this.vertTmpY=new Float32Array(t),this.vertTmpZ=new Float32Array(t),this.vertHasTmp=lt.create(new Uint8Array(s).buffer,1,0),this.vertColorR=new Float32Array(t*6),this.vertColorG=new Float32Array(t*6),this.vertColorB=new Float32Array(t*6),this.vertColorCount=new Uint8Array(t),this.vertSmoothNormalX=new Float32Array(t),this.vertSmoothNormalY=new Float32Array(t),this.vertSmoothNormalZ=new Float32Array(t),this.vertBothNormalX=new Float32Array(t),this.vertBothNormalY=new Float32Array(t),this.vertBothNormalZ=new Float32Array(t),this.vertFlattenedX=lt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedY=lt.create(new Uint8Array(s).buffer,1,0),this.vertFlattenedZ=lt.create(new Uint8Array(s).buffer,1,0),this.vertClampedX=lt.create(new Uint8Array(s).buffer,1,0),this.vertClampedY=lt.create(new Uint8Array(s).buffer,1,0),this.vertClampedZ=lt.create(new Uint8Array(s).buffer,1,0),this.vertFullyClamped=lt.create(new Uint8Array(s).buffer,1,0),this.vertDeformCount=new Uint8Array(t),this.vertDeformDamping=new Float32Array(t),this.vertDeformStrength=new Float32Array(t),this.vertWarpAmplitude=new Float32Array(t),this.vertWarpFrequency=new Float32Array(t),this.vertScatter=new Float32Array(t),this.vertRing=new Float32Array(t),this.vertNrOfClampedLinks=new Uint8Array(t),this.vertLinkCounts=new Uint8Array(t),this.vertLinkIndices=new Uint32Array(t*6),this.faceFlattened=lt.create(new Uint8Array(r).buffer,1,0),this.faceClamped=lt.create(new Uint8Array(r).buffer,1,0),this.faceSmooth=lt.create(new Uint8Array(r).buffer,1,0),this.faceEquidistant=lt.create(new Uint8Array(r).buffer,1,0),this.faceCulled=lt.create(new Uint8Array(r).buffer,1,0),this.faceNameIndices=new Uint8Array(e),this.faceMaterials=new Uint8Array(e),this.faceVertIndices=new Uint32Array(o),this.faceVertNormalX=new Float32Array(o),this.faceVertNormalY=new Float32Array(o),this.faceVertNormalZ=new Float32Array(o),this.faceVertFlatNormalX=new Float32Array(o),this.faceVertFlatNormalY=new Float32Array(o),this.faceVertFlatNormalZ=new Float32Array(o),this.faceVertSmoothNormalX=new Float32Array(o),this.faceVertSmoothNormalY=new Float32Array(o),this.faceVertSmoothNormalZ=new Float32Array(o),this.faceVertBothNormalX=new Float32Array(o),this.faceVertBothNormalY=new Float32Array(o),this.faceVertBothNormalZ=new Float32Array(o),this.faceVertColorR=new Float32Array(o),this.faceVertColorG=new Float32Array(o),this.faceVertColorB=new Float32Array(o),this.faceVertLightR=new Float32Array(o),this.faceVertLightG=new Float32Array(o),this.faceVertLightB=new Float32Array(o),this.faceVertAO=new Float32Array(o),this.faceVertUs=new Float32Array(o),this.faceVertVs=new Float32Array(o),this.tmpVoxelXZYFaceIndices=Array(e).fill(0),this.tmpVoxelXYZFaceIndices=Array(e).fill(0),this.tmpVoxelYZXFaceIndices=Array(e).fill(0),this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}clear(){this.tmpVertIndexLookup.clear(),this.vertX.fill(0),this.vertY.fill(0),this.vertZ.fill(0),this.vertTmpX.fill(0),this.vertTmpY.fill(0),this.vertTmpZ.fill(0),this.vertHasTmp.clear(),this.vertColorR.fill(0),this.vertColorG.fill(0),this.vertColorB.fill(0),this.vertColorCount.fill(0),this.vertSmoothNormalX.fill(0),this.vertSmoothNormalY.fill(0),this.vertSmoothNormalZ.fill(0),this.vertBothNormalX.fill(0),this.vertBothNormalY.fill(0),this.vertBothNormalZ.fill(0),this.vertFlattenedX.clear(),this.vertFlattenedY.clear(),this.vertFlattenedZ.clear(),this.vertClampedX.clear(),this.vertClampedY.clear(),this.vertClampedZ.clear(),this.vertFullyClamped.clear(),this.vertDeformCount.fill(0),this.vertDeformDamping.fill(0),this.vertDeformStrength.fill(0),this.vertWarpAmplitude.fill(0),this.vertWarpFrequency.fill(0),this.vertScatter.fill(0),this.vertRing.fill(0),this.vertNrOfClampedLinks.fill(0),this.vertLinkCounts.fill(0),this.vertLinkIndices.fill(0),this.faceFlattened.clear(),this.faceClamped.clear(),this.faceSmooth.clear(),this.faceEquidistant.clear(),this.faceCulled.clear(),this.faceNameIndices.fill(0),this.faceMaterials.fill(0),this.faceVertIndices.fill(0),this.faceVertNormalX.fill(0),this.faceVertNormalY.fill(0),this.faceVertNormalZ.fill(0),this.faceVertFlatNormalX.fill(0),this.faceVertFlatNormalY.fill(0),this.faceVertFlatNormalZ.fill(0),this.faceVertSmoothNormalX.fill(0),this.faceVertSmoothNormalY.fill(0),this.faceVertSmoothNormalZ.fill(0),this.faceVertBothNormalX.fill(0),this.faceVertBothNormalY.fill(0),this.faceVertBothNormalZ.fill(0),this.faceVertColorR.fill(0),this.faceVertColorG.fill(0),this.faceVertColorB.fill(0),this.faceVertLightR.fill(0),this.faceVertLightG.fill(0),this.faceVertLightB.fill(0),this.faceVertAO.fill(0),this.faceVertUs.fill(0),this.faceVertVs.fill(0),this.tmpVoxelXZYFaceIndices.length=0,this.tmpVoxelXYZFaceIndices.length=0,this.tmpVoxelYZXFaceIndices.length=0,this.voxelXZYFaceIndices=null,this.voxelXYZFaceIndices=null,this.voxelYZXFaceIndices=null}};var Ts=new Ye(1024*1024);onmessage=function(S){let t=Bs(S.data.svoxmodel);postMessage({svoxmesh:t,elementId:S.data.elementId,worker:S.data.worker})};function Bs(S){let t="model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",s="model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",e;(!S||S.trim()==="")&&(e={name:"ConfigError",message:"Model not found"},S=t);let r=null;try{r=ue.readFromString(S)}catch(n){e=n,r=ue.readFromString(s)}let o=Wt.generate(r,Ts);return o.error=e,o}\n')}var pe=class{constructor(t,s){this._resultHandler=t,this._resultCallback=s,this._nrOfWorkers=window.navigator.hardwareConcurrency,this._workers=[],this._free=[],this._tasks=[]}executeTask(t){if(this._workers.length<this._nrOfWorkers){let s=new ps,e=this;s.onmessage=function(r){e._free.push(event.data.worker),e._processNextTask(),e._resultCallback.apply(e._resultHandler,[event.data])},this._free.push(this._workers.length),this._workers.push(s)}this._tasks.push(t),this._processNextTask()}_processNextTask(){if(this._tasks.length>0&&this._free.length>0){let t=this._tasks.shift();t.worker=this._free.shift(),this._workers[t.worker].postMessage(t)}}};var Vt=class{static generate(t){let s=[];t.materials.forEach(function(a){s.push(Vt._generateMaterial(a))},this);let e=new THREE.BufferGeometry;if(e.setAttribute("position",new THREE.Float32BufferAttribute(t.positions,3)),e.setAttribute("normal",new THREE.Float32BufferAttribute(t.normals,3)),e.setAttribute("color",new THREE.Float32BufferAttribute(t.colors,3)),t.uvs&&e.setAttribute("uv",new THREE.Float32BufferAttribute(t.uvs,2)),t.data)for(let a=0;a<t.data.length;a++)e.setAttribute(t.data[a].name,new THREE.Float32BufferAttribute(t.data[a].values,t.data[a].width));return e.setIndex(t.indices),t.groups.forEach(function(a){e.addGroup(a.start,a.count,a.materialIndex)},this),e.computeBoundingBox(),e.uvsNeedUpdate=!0,new THREE.Mesh(e,s)}static _generateMaterial(t){switch(t.reflectivity=(1-t.roughness)*(t.metalness*.95+.05),t.shininess=Math.pow(10,5*Math.pow(1-t.roughness,1.1))*.1,t.side){case"back":t.side=THREE.BackSide;break;case"double":t.side=THREE.DoubleSide;break;default:t.side=THREE.FrontSide;break}t.map&&(t.map=Vt._generateTexture(t.map.image,THREE.sRGBEncoding,t.map.uscale,t.map.vscale,t.map.uoffset,t.map.voffset,t.map.rotation)),t.normalMap&&(t.normalMap=Vt._generateTexture(t.normalMap.image,THREE.LinearEncoding,t.normalMap.uscale,t.normalMap.vscale,t.normalMap.uoffset,t.normalMap.voffset,t.normalMap.rotation)),t.roughnessMap&&(t.roughnessMap=Vt._generateTexture(t.roughnessMap.image,THREE.LinearEncoding,t.roughnessMap.uscale,t.roughnessMap.vscale,t.roughnessMap.uoffset,t.roughnessMap.voffset,t.roughnessMap.rotation)),t.metalnessMap&&(t.metalnessMap=Vt._generateTexture(t.metalnessMap.image,THREE.LinearEncoding,t.metalnessMap.uscale,t.metalnessMap.vscale,t.metalnessMap.uoffset,t.metalnessMap.voffset,t.metalnessMap.rotation)),t.emissiveMap&&(t.emissiveMap=Vt._generateTexture(t.emissiveMap.image,THREE.sRGBEncoding,t.emissiveMap.uscale,t.emissiveMap.vscale,t.emissiveMap.uoffset,t.emissiveMap.voffset,t.emissiveMap.rotation)),t.matcap&&(t.matcap=Vt._generateTexture(t.matcap.image,THREE.sRGBEncoding)),t.reflectionMap&&(t.envMap=new THREE.TextureLoader().load(t.reflectionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularReflectionMapping,delete t.reflectionMap),t.refractionMap&&(t.envMap=new THREE.TextureLoader().load(t.refractionMap.image),t.envMap.encoding=THREE.sRGBEncoding,t.envMap.mapping=THREE.EquirectangularRefractionMapping,delete t.refractionMap);let s=null,e=t.type;switch(delete t.index,delete t.type,e){case"standard":delete t.reflectivity,delete t.shininess,s=new THREE.MeshStandardMaterial(t);break;case"basic":delete t.roughness,delete t.metalness,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,s=new THREE.MeshBasicMaterial(t);break;case"lambert":delete t.roughness,delete t.metalness,delete t.shininess,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshLambertMaterial(t);break;case"phong":delete t.roughness,delete t.metalness,delete t.roughnessMap,delete t.metalnessMap,s=new THREE.MeshPhongMaterial(t);break;case"matcap":delete t.roughness,delete t.metalness,delete t.wireframe,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshMatcapMaterial(t);break;case"toon":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshToonMaterial(t);break;case"normal":delete t.roughness,delete t.metalness,delete t.reflectivity,delete t.shininess,delete t.emissive,delete t.emissiveIntensity,delete t.map,delete t.envMap,delete t.roughnessMap,delete t.metalnessMap,delete t.emissiveMap,delete t.reflectionMap,delete t.refractionMap,delete t.refractionRatio,s=new THREE.MeshNormalMaterial(t);break;default:throw new Error(`SyntaxError: Unknown material type ${e}`)}return s}static _generateTexture(t,s,e,r,a,o,n){let i=new THREE.TextureLoader().load(t);return i.encoding=s,i.repeat.set(1/e,1/r),i.wrapS=THREE.RepeatWrapping,i.wrapT=THREE.RepeatWrapping,i.offset=new THREE.Vector2(a,o),i.rotation=n*Math.PI/180,i}};if(typeof window<"u"&&typeof AFRAME<"u"){let S=null;AFRAME.registerComponent("svox",{schema:{model:{type:"string"},worker:{type:"boolean",default:!1}},multiple:!1,_MISSING:"model size=9,scale=0.05,material lighting=flat,colors=A:#FFFFFF B:#FF8800 C:#FF0000,voxels 10B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-11B7-B-6(7A2-)7A-B7-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B3-C3-B-2(7A2-)7A-C7AC-2(7A2-)7A-B3-C3-2B2-C-C2-B-7A2-2(7A-C7AC-)7A2-7A-B2-C-C2-2B-C3-C-B-7A-C7AC-2(7A2-)7A-C7AC-7A-B-C3-C-2B7-B-6(7A2-)7A-B7-11B7-2B-C3-C-2B2-C-C2-2B3-C3-2B2-C-C2-2B-C3-C-2B7-10B",_ERROR:"model size=9,scale=0.05,material lighting=flat,colors=B:#FF8800 C:#FF0000 A:#FFFFFF,voxels 10B7-2(2B2-3C2-2B4-C2-)2B2-3C2-2B7-11B7-B-6(7A2-)7A-B7-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B2-C4-B-2(7A-C7A2C)7A-C7AC-7A-B2-C4-2B2-3C2-B3(-7A-C7AC)-7A-B2-3C2-2B2-C4-B-7A-C2(7AC-7A2C)7AC-7A-B2-C4-2B2-3C2-B-6(7A2-)7A-B2-3C2-2B7-B-6(7A2-)7A-B7-11B7-2(2B2-3C2-2B2-C4-)2B2-3C2-2B7-10B",_workerPool:null,init:function(){let t=this.el,s=this.data,e=s.worker,r=!1,a=s.model,o=window.SVOX.models[a];o||(this._logError({name:"ConfigError",message:"Model not found"}),o=this._MISSING,r=!0,e=!1),e?this._generateModelInWorker(o,t):this._generateModel(o,t,r)},_generateModel:function(t,s,e){let r;try{r=window.model=ee.readFromString(t)}catch(h){this._logError(h),r=ee.readFromString(this._ERROR),e=!0}let a=new ue(1024*1024),o=performance.now(),n=Zt.generate(r,a),i=performance.now();this.mesh=Vt.generate(n);let l=`Time: ${Math.round(i-o)}ms. Verts:${n.maxIndex+1} Faces:${n.indices.length/3} Materials:${this.mesh.material.length}`,c=document.getElementById("svoxstats");c&&!e&&(c.innerHTML="Last render: "+l),s.setObject3D("mesh",this.mesh)},_generateModelInWorker:function(t,s){s.id||(s.id=new Date().valueOf().toString(36)+Math.random().toString(36).substr(2));let e={svoxmodel:t,elementId:s.id};S||(S=new pe(this,this._processResult)),S.executeTask(e)},_processResult:function(t){if(t.svoxmesh.error)this._logError(t.svoxmesh.error);else{let s=Vt.generate(t.svoxmesh);document.querySelector("#"+t.elementId).setObject3D("mesh",s)}},_toSharedArrayBuffer(t){let s=new Float32Array(new ArrayBuffer(t.length*4));return s.set(t,0),s},_logError:function(t){let s=t.name+": "+t.message,e=document.getElementById("svoxerrors");e&&(e.innerHTML=s),console.error(`SVOXERROR (${this.data.model}) ${s}`)},update:function(t){},remove:function(){let t=["map","normalMap","roughnessMap","metalnessMap","emissiveMap","matcap"];if(this.mesh){for(;this.mesh.material.length>0;)t.forEach(function(s){this.mesh.material[0][s]&&this.mesh.material[0][s].dispose()},this),this.mesh.material[0].dispose(),this.mesh.material.shift();this.mesh.geometry.dispose(),this.el.removeObject3D("mesh"),delete this.mesh}},pause:function(){},play:function(){},events:{}})}var Ca={BaseMaterial:ne,Bits:at,BoundingBox:Qt,Color:st,Light:le,Material:ce,MaterialList:he,SvoxMeshGenerator:Zt,Model:me,ModelReader:ee,ModelWriter:Re,Buffers:ue,Voxels:dt,xyzRangeForSize:ht,shiftForSize:ft,voxColorForRGBT:Ge,rgbtForVoxColor:Es,WorkerPool:pe};})();
